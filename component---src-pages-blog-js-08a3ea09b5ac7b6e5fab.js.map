{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js"],"names":["BlogPostList","_ref","list","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","edges","map","x","idx","key","node","frontmatter","date","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","path","title","Blog","_ref2","data","query","render","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","_components_header__WEBPACK_IMPORTED_MODULE_5__","siteTitle","colorClass","className","algoBlog","myProblemBlog","_public_static_d_3583730502_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","Header"],"mappings":"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","file":"component---src-pages-blog-js-08a3ea09b5ac7b6e5fab.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../components/header'\nimport '../components/layout.css'\nimport \"bulma/css/bulma.css\"\n\nconst BlogPostList = ({ list }) => (\n    <ul>\n        {list && list.edges.map((x, idx) => (\n            <li key={idx}>\n                <small>{x.node.frontmatter.date}</small>\n                {\" \"}\n                <Link to={x.node.frontmatter.path}>\n                {x.node.frontmatter.title}\n                </Link>\n            </li>\n        ))}\n    </ul>\n);\n\nconst Blog = ({ data }) => (\n    <StaticQuery\n    query={graphql`\n    query blogquery{\n        algoBlog: allMarkdownRemark(filter:\n            {frontmatter: { category: { eq: \"algo\"}}},\n            sort: {fields: [frontmatter___date ], order:DESC}){\n          edges {\n            node {\n                frontmatter {\n                  title\n                  path\n                  date(formatString:\"YYYY-MM-DD\")\n                  _PARENT\n                }\n            } \n          }\n        }\n        \n        myProblemBlog: allMarkdownRemark(filter:\n            {frontmatter: { category: { eq: \"my-problem\"}}},\n            sort: {fields: [frontmatter___date ], order:DESC}){\n          edges {\n            node {\n                frontmatter {\n                  title\n                  path\n                  date(formatString:\"YYYY-MM-DD\")\n                  _PARENT\n                }\n            } \n          }\n        }\n        \n      }\n      \n    `}\n    render={data=>(\n        <div>\n            <Helmet title=\"漫談演算法\" />\n            <Header siteTitle=\"卡恩的部落格\" colorClass=\"is-dark\" />\n            <section \n                className=\"section\"\n            >\n            <div className=\"container\">\n            <div className=\"content box\">\n                <h1 className=\"title\">\n                    漫談演算法\n                </h1>\n                <p>\n                    想要整理一些自以為完整的演算法教學文章。\n                    除了分析以外，還希望能夠提供一些實作方法給大家參考。\n                </p>\n                <BlogPostList list={data.algoBlog} />\n            </div>\n            </div>\n            </section>\n            <section \n                className=\"section\"\n            >\n            <div className=\"container\">\n            <div className=\"content box\">\n                <h1 className=\"title\">\n                    我出過的題目\n                </h1>\n                <p>\n                想要整理以前出過的所有題目，也想紀錄一些出題當下的想法跟來龍去脈。\n                </p>\n                <BlogPostList list={data.myProblemBlog} />\n            </div>\n            </div>\n            </section>\n        </div>\n    )}\n    />\n)\n\nexport default Blog;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle, colorClass }) => (\n  <section className={\"hero \" + (colorClass || \"is-info\") + \" is-bold\"}>\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">\n                {siteTitle}\n              </h1>\n            </div>\n            <div>\n              <p className=\"is-pulled-right\">\n              <Link to=\"/\">Resume</Link> || \n              Work Experiences || Projects || {}\n              <Link to=\"/blog\">Blog Posts</Link>\n              </p>\n            </div>\n          </div>\n        </section>\n)\n\nexport default Header\n"],"sourceRoot":""}