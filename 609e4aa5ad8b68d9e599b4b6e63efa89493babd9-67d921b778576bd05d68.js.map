{"version":3,"sources":["webpack:///./node_modules/remark-parse/lib/defaults.js","webpack:///./node_modules/is-alphabetical/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/auto-link.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/trim-trailing-lines/index.js","webpack:///./node_modules/mdast-util-definitions/index.js","webpack:///./node_modules/replace-ext/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/break.js","webpack:///./node_modules/state-toggle/index.js","webpack:///./node_modules/unherit/index.js","webpack:///./node_modules/extend/index.js","webpack:///./node_modules/vfile-location/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/remark-parse/lib/tokenizer.js","webpack:///./node_modules/unist-util-position/index.js","webpack:///./node_modules/remark-parse/lib/locate/strong.js","webpack:///./node_modules/remark-parse/lib/locate/code-inline.js","webpack:///./node_modules/remark-parse/lib/locate/emphasis.js","webpack:///./node_modules/trough/wrap.js","webpack:///./node_modules/remark-parse/lib/unescape.js","webpack:///./node_modules/remark-parse/lib/tokenize/newline.js","webpack:///./node_modules/remark-parse/lib/locate/link.js","webpack:///./node_modules/bail/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/code-fenced.js","webpack:///./node_modules/remark-parse/lib/tokenize/definition.js","webpack:///./node_modules/is-whitespace-character/index.js","webpack:///./node_modules/x-is-string/index.js","webpack:///./node_modules/remark-parse/lib/block-elements.js","webpack:///./node_modules/is-alphanumerical/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/code-inline.js","webpack:///./node_modules/collapse-white-space/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/code-indented.js","webpack:///./node_modules/remark-parse/lib/util/interrupt.js","webpack:///./node_modules/remark-parse/lib/tokenize/strong.js","webpack:///./node_modules/remark-parse/lib/tokenize/heading-atx.js","webpack:///./node_modules/markdown-escapes/index.js","webpack:///./node_modules/remark-parse/lib/locate/delete.js","webpack:///./node_modules/remark-parse/lib/locate/escape.js","webpack:///./node_modules/remark-parse/lib/tokenize/heading-setext.js","webpack:///./node_modules/is-plain-obj/index.js","webpack:///./node_modules/remark-parse/lib/decode.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/remark-parse/lib/tokenize/blockquote.js","webpack:///./node_modules/remark-parse/lib/tokenize/paragraph.js","webpack:///./node_modules/@mapbox/hast-util-table-cell-style/index.js","webpack:///./node_modules/repeat-string/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/text.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/remark-parse/lib/util/html.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/remark-parse/lib/tokenize/url.js","webpack:///./node_modules/remark-parse/lib/tokenize/delete.js","webpack:///./node_modules/remark-parse/lib/tokenize/html-inline.js","webpack:///./node_modules/remark-parse/lib/locate/url.js","webpack:///./node_modules/unist-util-generated/index.js","webpack:///./node_modules/parse-entities/decode-entity.browser.js","webpack:///./node_modules/remark-parse/lib/tokenize/html-block.js","webpack:///./node_modules/is-decimal/index.js","webpack:///./node_modules/parse-entities/index.js","webpack:///./node_modules/unist-util-is/convert.js","webpack:///./node_modules/unist-util-visit/index.js","webpack:///./node_modules/remark-parse/lib/util/remove-indentation.js","webpack:///./node_modules/remark-parse/lib/locate/break.js","webpack:///./node_modules/remark-parse/lib/locate/tag.js","webpack:///./node_modules/remark-parse/lib/tokenize/emphasis.js","webpack:///./node_modules/unist-util-remove-position/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/footnote-definition.js","webpack:///./node_modules/remark-parse/index.js","webpack:///./node_modules/trim-lines/index.js","webpack:///./node_modules/remark-parse/lib/parser.js","webpack:///./node_modules/is-hexadecimal/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/link.js","webpack:///./node_modules/remark-parse/lib/util/normalize.js","webpack:///./node_modules/remark-parse/lib/util/get-indentation.js","webpack:///./node_modules/remark-parse/lib/set-options.js","webpack:///./node_modules/is-word-character/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/thematic-break.js","webpack:///./node_modules/detab/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/list.js","webpack:///./node_modules/remark-parse/lib/tokenize/escape.js","webpack:///./node_modules/remark-parse/lib/tokenize/table.js","webpack:///./node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/unist-builder/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/remark-parse/lib/tokenize/reference.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/trough/index.js","webpack:///./node_modules/remark-parse/lib/parse.js"],"names":["module","exports","position","gfm","commonmark","footnotes","pedantic","blocks","character","code","charCodeAt","whitespace","decode","locate","autoLink","locator","notInLink","mailtoLength","length","eat","value","silent","now","content","tokenizers","exit","subvalue","index","queue","hasAtCharacter","link","charAt","column","offset","slice","toLowerCase","substr","this","inlineTokenizers","text","enterLink","tokenizeInline","type","title","url","nonTerminated","children","normalizeArray","parts","allowAboveRoot","up","i","last","splice","unshift","filter","xs","f","res","push","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","split","p","join","normalize","isAbsolute","trailingSlash","paths","Array","prototype","call","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","val","String","visit","node","options","cache","identifier","id","normalise","own","getterFactory","Error","definition","gather","hasOwnProperty","toUpperCase","npath","nFileName","hardBreak","key","state","ctx","context","current","xtend","inherits","Super","result","Of","From","parameters","apply","hasOwn","Object","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","name","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","offsetToPositionFactory","indices","line","positionToOffsetFactory","isNaN","file","contents","indexOf","toPosition","toOffset","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","mergeable","mergeText","prev","mergeBlockquote","location","method","matched","valueLength","self","tokens","methods","updatePosition","onlyAtStart","atStart","notInList","inList","notInBlock","inBlock","inLink","fail","eof","lastIndex","pos","Position","before","indent","indentation","getOffset","combined","n","l","substring","validateEat","reset","test","parent","exitStart","add","factory","point","displayName","fromIndex","asterisk","underscore","fn","callback","invoked","params","done","error","then","escape","image","err","fenceCount","flag","lang","meta","exdentedContent","closing","exdentedClosing","raw","unescape","beforeURL","beforeTitle","isEnclosedURLCharacter","isUnclosedURLCharacter","label","re","fromCode","fromCharCode","alphabetical","decimal","inlineCode","contentQueue","subqueue","count","openingCount","found","next","tickQueue","replace","repeat","blankQueue","subvalueQueue","codeIndent","interruptors","interruptor","config","undefined","strong","depth","escapes","defaults","settings","default","x","getPrototypeOf","entities","decoder","warning","handleWarning","offsets","handler","reference","textContext","referenceContext","reason","message","create","ctor","superCtor","super_","TempCtor","interrupt","rest","nextIndex","startIndex","prefixed","blockTokenizers","interruptBlockquote","currentLine","values","indents","enterBlock","tokenizeBlock","trimTrailingLines","size","interruptParagraph","list","left","hastCssPropertyMap","align","valign","height","width","visitor","hastName","tagName","properties","appendStyle","property","prevStyle","style","nextStyle","num","max","right","tokenizer","inlineMethods","source","parse","input","whiteSpace","stringify","openTag","closeTag","openCloseTag","RegExp","tag","protocols","protocolsLength","protocol","match","parenCount","nextCharacter","strikethrough","previous","preceding","inlineHTML","htmlLinkOpenExpression","htmlLinkCloseExpression","optional","el","characters","char","entity","document","createElement","innerHTML","textContent","sequence","elementOpenExpression","sequences","rawOpenExpression","rawCloseExpression","commentOpenExpression","commentCloseExpression","instructionOpenExpression","instructionCloseExpression","directiveOpenExpression","directiveCloseExpression","cdataOpenExpression","cdataCloseExpression","elementCloseExpression","otherElementOpenExpression","legacy","invalid","hexadecimal","alphanumerical","decodeEntity","option","entityCharacters","namedEntity","terminated","following","output","begin","diff","additional","handleText","handleReference","warningContext","lines","messages","hexa","tests","attribute","parseInt","bases","disallowed","flush","Function","convert","Boolean","typeFactory","ok","anyFactory","matchesFactory","checks","results","convertAll","visitParents","CONTINUE","SKIP","EXIT","tree","reverse","parents","getIndent","maximum","stops","padding","minIndent","Infinity","matrix","shift","word","emphasis","hard","soft","force","footnoteDefinition","EXPRESSION_INITIAL_TAB","leftSquareBracket","unherit","Parser","data","Local","ws","toggle","vfileLocation","doc","setOptions","proto","keys","enterList","interruptList","newline","indentedCode","fencedCode","blockquote","atxHeading","thematicBreak","setextHeading","html","footnote","table","paragraph","deletion","break","blockMethods","tokenizeFactory","closed","opening","hasMarker","isImage","alt","collapseWhiteSpace","floor","markerCount","string","tabSize","removeIndent","ordered","currentMarker","prevEmpty","empty","items","allLines","emptyLines","item","enterTop","exitBlockquote","indented","interuptors","spread","trail","listItem","looseListItemExpression","taskItemExpression","bulletExpression","pedanticBulletExpression","initialIndentExpression","task","pedanticListItem","normalListItem","checked","replacer","$0","bullet","trimmedLines","$1","$2","$3","$4","Number","alignments","alignment","row","hasDash","cell","preamble","lineCount","rows","lineIndex","pipeIndex","first","is","one","subresult","toResult","step","all","assign","props","padLeft","padRight","bracketed","intro","referenceType","encodeCache","encode","exclude","keepEscaped","nextCode","defaultChars","ch","getEncodeCache","encodeURIComponent","componentChars","wrap","trough","fns","middleware","removePosition","lineBreaksExpression"],"mappings":"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","file":"609e4aa5ad8b68d9e599b4b6e63efa89493babd9-67d921b778576bd05d68.js","sourcesContent":["'use strict';\n\nmodule.exports = {\n  position: true,\n  gfm: true,\n  commonmark: false,\n  footnotes: false,\n  pedantic: false,\n  blocks: require('./block-elements')\n};","'use strict';\n\nmodule.exports = alphabetical; // Check if the given character code, or the character code at the first\n// character, is alphabetical.\n\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97 && code <= 122 ||\n  /* a-z */\n  code >= 65 && code <= 90\n  /* A-Z */\n  ;\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar decode = require('parse-entities');\n\nvar locate = require('../locate/tag');\n\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\nvar lessThan = '<';\nvar greaterThan = '>';\nvar atSign = '@';\nvar slash = '/';\nvar mailto = 'mailto:';\nvar mailtoLength = mailto.length;\n\nfunction autoLink(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var length = value.length;\n  var index = 0;\n  var queue = '';\n  var hasAtCharacter = false;\n  var link = '';\n  var character;\n  var now;\n  var content;\n  var tokenizers;\n  var exit;\n\n  if (value.charAt(0) !== lessThan) {\n    return;\n  }\n\n  index++;\n  subvalue = lessThan;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (whitespace(character) || character === greaterThan || character === atSign || character === ':' && value.charAt(index + 1) === slash) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  link += queue;\n  queue = '';\n  character = value.charAt(index);\n  link += character;\n  index++;\n\n  if (character === atSign) {\n    hasAtCharacter = true;\n  } else {\n    if (character !== ':' || value.charAt(index + 1) !== slash) {\n      return;\n    }\n\n    link += slash;\n    index++;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (whitespace(character) || character === greaterThan) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!queue || character !== greaterThan) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  link += queue;\n  content = link;\n  subvalue += link + character;\n  now = eat.now();\n  now.column++;\n  now.offset++;\n\n  if (hasAtCharacter) {\n    if (link.slice(0, mailtoLength).toLowerCase() === mailto) {\n      content = content.substr(mailtoLength);\n      now.column += mailtoLength;\n      now.offset += mailtoLength;\n    } else {\n      link = mailto + link;\n    }\n  } // Temporarily remove all tokenizers except text in autolinks.\n\n\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {\n    text: tokenizers.text\n  };\n  exit = self.enterLink();\n  content = self.tokenizeInline(content, now);\n  self.inlineTokenizers = tokenizers;\n  exit();\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {\n      nonTerminated: false\n    }),\n    children: content\n  });\n}","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","'use strict';\n\nmodule.exports = trimTrailingLines;\nvar line = '\\n'; // Remove final newline characters from `value`.\n\nfunction trimTrailingLines(value) {\n  var val = String(value);\n  var index = val.length;\n\n  while (val.charAt(--index) === line) {// Empty\n  }\n\n  return val.slice(0, index + 1);\n}","'use strict';\n\nvar visit = require('unist-util-visit');\n\nmodule.exports = getDefinitionFactory;\nvar own = {}.hasOwnProperty; // Get a definition in `node` by `identifier`.\n\nfunction getDefinitionFactory(node, options) {\n  return getterFactory(gather(node, options));\n} // Gather all definitions in `node`\n\n\nfunction gather(node, options) {\n  var cache = {};\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node');\n  }\n\n  visit(node, 'definition', options && options.commonmark ? commonmark : normal);\n  return cache;\n\n  function commonmark(definition) {\n    var id = normalise(definition.identifier);\n\n    if (!own.call(cache, id)) {\n      cache[id] = definition;\n    }\n  }\n\n  function normal(definition) {\n    cache[normalise(definition.identifier)] = definition;\n  }\n} // Factory to get a node from the given definition-cache.\n\n\nfunction getterFactory(cache) {\n  return getter; // Get a node from the bound definition-cache.\n\n  function getter(identifier) {\n    var id = identifier && normalise(identifier);\n    return id && own.call(cache, id) ? cache[id] : null;\n  }\n}\n\nfunction normalise(identifier) {\n  return identifier.toUpperCase();\n}","'use strict';\n\nvar path = require('path');\n\nfunction replaceExt(npath, ext) {\n  if (typeof npath !== 'string') {\n    return npath;\n  }\n\n  if (npath.length === 0) {\n    return npath;\n  }\n\n  var nFileName = path.basename(npath, path.extname(npath)) + ext;\n  return path.join(path.dirname(npath), nFileName);\n}\n\nmodule.exports = replaceExt;","'use strict';\n\nvar locate = require('../locate/break');\n\nmodule.exports = hardBreak;\nhardBreak.locator = locate;\nvar space = ' ';\nvar lineFeed = '\\n';\nvar minBreakLength = 2;\n\nfunction hardBreak(eat, value, silent) {\n  var length = value.length;\n  var index = -1;\n  var queue = '';\n  var character;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === lineFeed) {\n      if (index < minBreakLength) {\n        return;\n      }\n      /* istanbul ignore if - never used (yet) */\n\n\n      if (silent) {\n        return true;\n      }\n\n      queue += character;\n      return eat(queue)({\n        type: 'break'\n      });\n    }\n\n    if (character !== space) {\n      return;\n    }\n\n    queue += character;\n  }\n}","'use strict';\n\nmodule.exports = factory; // Construct a state `toggler`: a function which inverses `property` in context\n// based on its current value.\n// The by `toggler` returned function restores that value.\n\nfunction factory(key, state, ctx) {\n  return enter;\n\n  function enter() {\n    var context = ctx || this;\n    var current = context[key];\n    context[key] = !state;\n    return exit;\n\n    function exit() {\n      context[key] = current;\n    }\n  }\n}","'use strict';\n\nvar xtend = require('xtend');\n\nvar inherits = require('inherits');\n\nmodule.exports = unherit; // Create a custom constructor which can be modified without affecting the\n// original class.\n\nfunction unherit(Super) {\n  var result;\n  var key;\n  var value;\n  inherits(Of, Super);\n  inherits(From, Of); // Clone values.\n\n  result = Of.prototype;\n\n  for (key in result) {\n    value = result[key];\n\n    if (value && typeof value === 'object') {\n      result[key] = 'concat' in value ? value.concat() : xtend(value);\n    }\n  }\n\n  return Of; // Constructor accepting a single argument, which itself is an `arguments`\n  // object.\n\n  function From(parameters) {\n    return Super.apply(this, parameters);\n  } // Constructor accepting variadic arguments.\n\n\n  function Of() {\n    if (!(this instanceof Of)) {\n      return new From(arguments);\n    }\n\n    return Super.apply(this, arguments);\n  }\n}","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(arr);\n  }\n\n  return toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== '[object Object]') {\n    return false;\n  }\n\n  var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf'); // Not own constructor property must be Object\n\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  } // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n\n\n  var key;\n\n  for (key in obj) {\n    /**/\n  }\n\n  return typeof key === 'undefined' || hasOwn.call(obj, key);\n}; // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\n\n\nvar setProperty = function setProperty(target, options) {\n  if (defineProperty && options.name === '__proto__') {\n    defineProperty(target, options.name, {\n      enumerable: true,\n      configurable: true,\n      value: options.newValue,\n      writable: true\n    });\n  } else {\n    target[options.name] = options.newValue;\n  }\n}; // Return undefined instead of __proto__ if '__proto__' is not an own property\n\n\nvar getProperty = function getProperty(obj, name) {\n  if (name === '__proto__') {\n    if (!hasOwn.call(obj, name)) {\n      return void 0;\n    } else if (gOPD) {\n      // In early versions of node, obj['__proto__'] is buggy when obj has\n      // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n      return gOPD(obj, name).value;\n    }\n  }\n\n  return obj[name];\n};\n\nmodule.exports = function extend() {\n  var options, name, src, copy, copyIsArray, clone;\n  var target = arguments[0];\n  var i = 1;\n  var length = arguments.length;\n  var deep = false; // Handle a deep copy situation\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = arguments[1] || {}; // skip the boolean and the target\n\n    i = 2;\n  }\n\n  if (target == null || typeof target !== 'object' && typeof target !== 'function') {\n    target = {};\n  }\n\n  for (; i < length; ++i) {\n    options = arguments[i]; // Only deal with non-null/undefined values\n\n    if (options != null) {\n      // Extend the base object\n      for (name in options) {\n        src = getProperty(target, name);\n        copy = getProperty(options, name); // Prevent never-ending loop\n\n        if (target !== copy) {\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n            } else {\n              clone = src && isPlainObject(src) ? src : {};\n            } // Never move original objects, clone them\n\n\n            setProperty(target, {\n              name: name,\n              newValue: extend(deep, clone, copy)\n            }); // Don't bring in undefined values\n          } else if (typeof copy !== 'undefined') {\n            setProperty(target, {\n              name: name,\n              newValue: copy\n            });\n          }\n        }\n      }\n    }\n  } // Return the modified object\n\n\n  return target;\n};","'use strict';\n\nmodule.exports = factory;\n\nfunction factory(file) {\n  var contents = indices(String(file));\n  return {\n    toPosition: offsetToPositionFactory(contents),\n    toOffset: positionToOffsetFactory(contents)\n  };\n} // Factory to get the line and column-based `position` for `offset` in the bound\n// indices.\n\n\nfunction offsetToPositionFactory(indices) {\n  return offsetToPosition; // Get the line and column-based `position` for `offset` in the bound indices.\n\n  function offsetToPosition(offset) {\n    var index = -1;\n    var length = indices.length;\n\n    if (offset < 0) {\n      return {};\n    }\n\n    while (++index < length) {\n      if (indices[index] > offset) {\n        return {\n          line: index + 1,\n          column: offset - (indices[index - 1] || 0) + 1,\n          offset: offset\n        };\n      }\n    }\n\n    return {};\n  }\n} // Factory to get the `offset` for a line and column-based `position` in the\n// bound indices.\n\n\nfunction positionToOffsetFactory(indices) {\n  return positionToOffset; // Get the `offset` for a line and column-based `position` in the bound\n  // indices.\n\n  function positionToOffset(position) {\n    var line = position && position.line;\n    var column = position && position.column;\n\n    if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {\n      return (indices[line - 2] || 0) + column - 1 || 0;\n    }\n\n    return -1;\n  }\n} // Get indices of line-breaks in `value`.\n\n\nfunction indices(value) {\n  var result = [];\n  var index = value.indexOf('\\n');\n\n  while (index !== -1) {\n    result.push(index + 1);\n    index = value.indexOf('\\n', index + 1);\n  }\n\n  result.push(value.length + 1);\n  return result;\n}","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nmodule.exports = factory; // Construct a tokenizer.  This creates both `tokenizeInline` and `tokenizeBlock`.\n\nfunction factory(type) {\n  return tokenize; // Tokenizer for a bound `type`.\n\n  function tokenize(value, location) {\n    var self = this;\n    var offset = self.offset;\n    var tokens = [];\n    var methods = self[type + 'Methods'];\n    var tokenizers = self[type + 'Tokenizers'];\n    var line = location.line;\n    var column = location.column;\n    var index;\n    var length;\n    var method;\n    var name;\n    var matched;\n    var valueLength; // Trim white space only lines.\n\n    if (!value) {\n      return tokens;\n    } // Expose on `eat`.\n\n\n    eat.now = now;\n    eat.file = self.file; // Sync initial offset.\n\n    updatePosition(''); // Iterate over `value`, and iterate over all tokenizers.  When one eats\n    // something, re-iterate with the remaining value.  If no tokenizer eats,\n    // something failed (should not happen) and an exception is thrown.\n\n    while (value) {\n      index = -1;\n      length = methods.length;\n      matched = false;\n\n      while (++index < length) {\n        name = methods[index];\n        method = tokenizers[name];\n\n        if (method && (\n        /* istanbul ignore next */\n        !method.onlyAtStart || self.atStart) && (!method.notInList || !self.inList) && (!method.notInBlock || !self.inBlock) && (!method.notInLink || !self.inLink)) {\n          valueLength = value.length;\n          method.apply(self, [eat, value]);\n          matched = valueLength !== value.length;\n\n          if (matched) {\n            break;\n          }\n        }\n      }\n      /* istanbul ignore if */\n\n\n      if (!matched) {\n        self.file.fail(new Error('Infinite loop'), eat.now());\n      }\n    }\n\n    self.eof = now();\n    return tokens; // Update line, column, and offset based on `value`.\n\n    function updatePosition(subvalue) {\n      var lastIndex = -1;\n      var index = subvalue.indexOf('\\n');\n\n      while (index !== -1) {\n        line++;\n        lastIndex = index;\n        index = subvalue.indexOf('\\n', index + 1);\n      }\n\n      if (lastIndex === -1) {\n        column += subvalue.length;\n      } else {\n        column = subvalue.length - lastIndex;\n      }\n\n      if (line in offset) {\n        if (lastIndex !== -1) {\n          column += offset[line];\n        } else if (column <= offset[line]) {\n          column = offset[line] + 1;\n        }\n      }\n    } // Get offset.  Called before the first character is eaten to retrieve the\n    // range’s offsets.\n\n\n    function getOffset() {\n      var indentation = [];\n      var pos = line + 1; // Done.  Called when the last character is eaten to retrieve the range’s\n      // offsets.\n\n      return function () {\n        var last = line + 1;\n\n        while (pos < last) {\n          indentation.push((offset[pos] || 0) + 1);\n          pos++;\n        }\n\n        return indentation;\n      };\n    } // Get the current position.\n\n\n    function now() {\n      var pos = {\n        line: line,\n        column: column\n      };\n      pos.offset = self.toOffset(pos);\n      return pos;\n    } // Store position information for a node.\n\n\n    function Position(start) {\n      this.start = start;\n      this.end = now();\n    } // Throw when a value is incorrectly eaten.  This shouldn’t happen but will\n    // throw on new, incorrect rules.\n\n\n    function validateEat(subvalue) {\n      /* istanbul ignore if */\n      if (value.substring(0, subvalue.length) !== subvalue) {\n        // Capture stack-trace.\n        self.file.fail(new Error('Incorrectly eaten value: please report this warning on https://git.io/vg5Ft'), now());\n      }\n    } // Mark position and patch `node.position`.\n\n\n    function position() {\n      var before = now();\n      return update; // Add the position to a node.\n\n      function update(node, indent) {\n        var prev = node.position;\n        var start = prev ? prev.start : before;\n        var combined = [];\n        var n = prev && prev.end.line;\n        var l = before.line;\n        node.position = new Position(start); // If there was already a `position`, this node was merged.  Fixing\n        // `start` wasn’t hard, but the indent is different.  Especially\n        // because some information, the indent between `n` and `l` wasn’t\n        // tracked.  Luckily, that space is (should be?) empty, so we can\n        // safely check for it now.\n\n        if (prev && indent && prev.indent) {\n          combined = prev.indent;\n\n          if (n < l) {\n            while (++n < l) {\n              combined.push((offset[n] || 0) + 1);\n            }\n\n            combined.push(before.column);\n          }\n\n          indent = combined.concat(indent);\n        }\n\n        node.position.indent = indent || [];\n        return node;\n      }\n    } // Add `node` to `parent`s children or to `tokens`.  Performs merges where\n    // possible.\n\n\n    function add(node, parent) {\n      var children = parent ? parent.children : tokens;\n      var prev = children[children.length - 1];\n      var fn;\n\n      if (prev && node.type === prev.type && (node.type === 'text' || node.type === 'blockquote') && mergeable(prev) && mergeable(node)) {\n        fn = node.type === 'text' ? mergeText : mergeBlockquote;\n        node = fn.call(self, prev, node);\n      }\n\n      if (node !== prev) {\n        children.push(node);\n      }\n\n      if (self.atStart && tokens.length !== 0) {\n        self.exitStart();\n      }\n\n      return node;\n    } // Remove `subvalue` from `value`.  `subvalue` must be at the start of\n    // `value`.\n\n\n    function eat(subvalue) {\n      var indent = getOffset();\n      var pos = position();\n      var current = now();\n      validateEat(subvalue);\n      apply.reset = reset;\n      reset.test = test;\n      apply.test = test;\n      value = value.substring(subvalue.length);\n      updatePosition(subvalue);\n      indent = indent();\n      return apply; // Add the given arguments, add `position` to the returned node, and\n      // return the node.\n\n      function apply(node, parent) {\n        return pos(add(pos(node), parent), indent);\n      } // Functions just like apply, but resets the content: the line and\n      // column are reversed, and the eaten value is re-added.   This is\n      // useful for nodes with a single type of content, such as lists and\n      // tables.  See `apply` above for what parameters are expected.\n\n\n      function reset() {\n        var node = apply.apply(null, arguments);\n        line = current.line;\n        column = current.column;\n        value = subvalue + value;\n        return node;\n      } // Test the position, after eating, and reverse to a not-eaten state.\n\n\n      function test() {\n        var result = pos({});\n        line = current.line;\n        column = current.column;\n        value = subvalue + value;\n        return result.position;\n      }\n    }\n  }\n} // Check whether a node is mergeable with adjacent nodes.\n\n\nfunction mergeable(node) {\n  var start;\n  var end;\n\n  if (node.type !== 'text' || !node.position) {\n    return true;\n  }\n\n  start = node.position.start;\n  end = node.position.end; // Only merge nodes which occupy the same size as their `value`.\n\n  return start.line !== end.line || end.column - start.column === node.value.length;\n} // Merge two text nodes: `node` into `prev`.\n\n\nfunction mergeText(prev, node) {\n  prev.value += node.value;\n  return prev;\n} // Merge two blockquotes: `node` into `prev`, unless in CommonMark mode.\n\n\nfunction mergeBlockquote(prev, node) {\n  if (this.options.commonmark) {\n    return node;\n  }\n\n  prev.children = prev.children.concat(node.children);\n  return prev;\n}","'use strict';\n\nvar position = exports;\nposition.start = factory('start');\nposition.end = factory('end');\n\nfunction factory(type) {\n  point.displayName = type;\n  return point;\n\n  function point(node) {\n    var point = node && node.position && node.position[type] || {};\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: isNaN(point.offset) ? null : point.offset\n    };\n  }\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  var asterisk = value.indexOf('**', fromIndex);\n  var underscore = value.indexOf('__', fromIndex);\n\n  if (underscore === -1) {\n    return asterisk;\n  }\n\n  if (asterisk === -1) {\n    return underscore;\n  }\n\n  return underscore < asterisk ? underscore : asterisk;\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  return value.indexOf('`', fromIndex);\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  var asterisk = value.indexOf('*', fromIndex);\n  var underscore = value.indexOf('_', fromIndex);\n\n  if (underscore === -1) {\n    return asterisk;\n  }\n\n  if (asterisk === -1) {\n    return underscore;\n  }\n\n  return underscore < asterisk ? underscore : asterisk;\n}","'use strict';\n\nvar slice = [].slice;\nmodule.exports = wrap; // Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\n\nfunction wrap(fn, callback) {\n  var invoked;\n  return wrapped;\n\n  function wrapped() {\n    var params = slice.call(arguments, 0);\n    var callback = fn.length > params.length;\n    var result;\n\n    if (callback) {\n      params.push(done);\n    }\n\n    try {\n      result = fn.apply(null, params);\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error;\n      }\n\n      return done(error);\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  } // Invoke `next`, only once.\n\n\n  function done() {\n    if (!invoked) {\n      invoked = true;\n      callback.apply(null, arguments);\n    }\n  } // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n\n\n  function then(value) {\n    done(null, value);\n  }\n}","'use strict';\n\nmodule.exports = factory;\nvar backslash = '\\\\'; // Factory to de-escape a value, based on a list at `key` in `ctx`.\n\nfunction factory(ctx, key) {\n  return unescape; // De-escape a string using the expression at `key` in `ctx`.\n\n  function unescape(value) {\n    var prev = 0;\n    var index = value.indexOf(backslash);\n    var escape = ctx[key];\n    var queue = [];\n    var character;\n\n    while (index !== -1) {\n      queue.push(value.slice(prev, index));\n      prev = index + 1;\n      character = value.charAt(prev); // If the following character is not a valid escape, add the slash.\n\n      if (!character || escape.indexOf(character) === -1) {\n        queue.push(backslash);\n      }\n\n      index = value.indexOf(backslash, prev + 1);\n    }\n\n    queue.push(value.slice(prev));\n    return queue.join('');\n  }\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nmodule.exports = newline;\nvar lineFeed = '\\n';\n\nfunction newline(eat, value, silent) {\n  var character = value.charAt(0);\n  var length;\n  var subvalue;\n  var queue;\n  var index;\n\n  if (character !== lineFeed) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  index = 1;\n  length = value.length;\n  subvalue = character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n\n    if (character === lineFeed) {\n      subvalue += queue;\n      queue = '';\n    }\n\n    index++;\n  }\n\n  eat(subvalue);\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  var link = value.indexOf('[', fromIndex);\n  var image = value.indexOf('![', fromIndex);\n\n  if (image === -1) {\n    return link;\n  } // Link can never be `-1` if an image is found, so we don’t need to check\n  // for that :)\n\n\n  return link < image ? link : image;\n}","'use strict';\n\nmodule.exports = bail;\n\nfunction bail(err) {\n  if (err) {\n    throw err;\n  }\n}","'use strict';\n\nvar trim = require('trim-trailing-lines');\n\nmodule.exports = fencedCode;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar tilde = '~';\nvar graveAccent = '`';\nvar minFenceCount = 3;\nvar tabSize = 4;\n\nfunction fencedCode(eat, value, silent) {\n  var self = this;\n  var gfm = self.options.gfm;\n  var length = value.length + 1;\n  var index = 0;\n  var subvalue = '';\n  var fenceCount;\n  var marker;\n  var character;\n  var flag;\n  var lang;\n  var meta;\n  var queue;\n  var content;\n  var exdentedContent;\n  var closing;\n  var exdentedClosing;\n  var indent;\n  var now;\n\n  if (!gfm) {\n    return;\n  } // Eat initial spacing.\n\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  indent = index; // Eat the fence.\n\n  character = value.charAt(index);\n\n  if (character !== tilde && character !== graveAccent) {\n    return;\n  }\n\n  index++;\n  marker = character;\n  fenceCount = 1;\n  subvalue += character;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== marker) {\n      break;\n    }\n\n    subvalue += character;\n    fenceCount++;\n    index++;\n  }\n\n  if (fenceCount < minFenceCount) {\n    return;\n  } // Eat spacing before flag.\n\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  } // Eat flag.\n\n\n  flag = '';\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === lineFeed || character === tilde || character === graveAccent) {\n      break;\n    }\n\n    if (character === space || character === tab) {\n      queue += character;\n    } else {\n      flag += queue + character;\n      queue = '';\n    }\n\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (character && character !== lineFeed) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  now = eat.now();\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += flag;\n  flag = self.decode.raw(self.unescape(flag), now);\n\n  if (queue) {\n    subvalue += queue;\n  }\n\n  queue = '';\n  closing = '';\n  exdentedClosing = '';\n  content = '';\n  exdentedContent = ''; // Eat content.\n\n  while (index < length) {\n    character = value.charAt(index);\n    content += closing;\n    exdentedContent += exdentedClosing;\n    closing = '';\n    exdentedClosing = '';\n\n    if (character !== lineFeed) {\n      content += character;\n      exdentedClosing += character;\n      index++;\n      continue;\n    } // Add the newline to `subvalue` if its the first character.  Otherwise,\n    // add it to the `closing` queue.\n\n\n    if (content) {\n      closing += character;\n      exdentedClosing += character;\n    } else {\n      subvalue += character;\n    }\n\n    queue = '';\n    index++;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== space) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    closing += queue;\n    exdentedClosing += queue.slice(indent);\n\n    if (queue.length >= tabSize) {\n      continue;\n    }\n\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    closing += queue;\n    exdentedClosing += queue;\n\n    if (queue.length < fenceCount) {\n      continue;\n    }\n\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== space && character !== tab) {\n        break;\n      }\n\n      closing += character;\n      exdentedClosing += character;\n      index++;\n    }\n\n    if (!character || character === lineFeed) {\n      break;\n    }\n  }\n\n  subvalue += content + closing; // Get lang and meta from the flag.\n\n  index = -1;\n  length = flag.length;\n\n  while (++index < length) {\n    character = flag.charAt(index);\n\n    if (character === space || character === tab) {\n      if (!lang) {\n        lang = flag.slice(0, index);\n      }\n    } else if (lang) {\n      meta = flag.slice(index);\n      break;\n    }\n  }\n\n  return eat(subvalue)({\n    type: 'code',\n    lang: lang || flag || null,\n    meta: meta || null,\n    value: trim(exdentedContent)\n  });\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar normalize = require('../util/normalize');\n\nmodule.exports = definition;\ndefinition.notInList = true;\ndefinition.notInBlock = true;\nvar quotationMark = '\"';\nvar apostrophe = \"'\";\nvar backslash = '\\\\';\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar leftSquareBracket = '[';\nvar rightSquareBracket = ']';\nvar leftParenthesis = '(';\nvar rightParenthesis = ')';\nvar colon = ':';\nvar lessThan = '<';\nvar greaterThan = '>';\n\nfunction definition(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var index = 0;\n  var length = value.length;\n  var subvalue = '';\n  var beforeURL;\n  var beforeTitle;\n  var queue;\n  var character;\n  var test;\n  var identifier;\n  var url;\n  var title;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (character !== leftSquareBracket) {\n    return;\n  }\n\n  index++;\n  subvalue += character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === rightSquareBracket) {\n      break;\n    } else if (character === backslash) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue || value.charAt(index) !== rightSquareBracket || value.charAt(index + 1) !== colon) {\n    return;\n  }\n\n  identifier = queue;\n  subvalue += queue + rightSquareBracket + colon;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space && character !== lineFeed) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === lessThan) {\n    index++;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isEnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character === isEnclosedURLCharacter.delimiter) {\n      subvalue += lessThan + queue + character;\n      index++;\n    } else {\n      if (commonmark) {\n        return;\n      }\n\n      index -= queue.length + 1;\n      queue = '';\n    }\n  }\n\n  if (!queue) {\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isUnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    subvalue += queue;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  url = queue;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space && character !== lineFeed) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  test = null;\n\n  if (character === quotationMark) {\n    test = quotationMark;\n  } else if (character === apostrophe) {\n    test = apostrophe;\n  } else if (character === leftParenthesis) {\n    test = rightParenthesis;\n  }\n\n  if (!test) {\n    queue = '';\n    index = subvalue.length;\n  } else if (queue) {\n    subvalue += queue + character;\n    index = subvalue.length;\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === test) {\n        break;\n      }\n\n      if (character === lineFeed) {\n        index++;\n        character = value.charAt(index);\n\n        if (character === lineFeed || character === test) {\n          return;\n        }\n\n        queue += lineFeed;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character !== test) {\n      return;\n    }\n\n    beforeTitle = subvalue;\n    subvalue += queue + character;\n    index++;\n    title = queue;\n    queue = '';\n  } else {\n    return;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!character || character === lineFeed) {\n    if (silent) {\n      return true;\n    }\n\n    beforeURL = eat(beforeURL).test().end;\n    url = self.decode.raw(self.unescape(url), beforeURL, {\n      nonTerminated: false\n    });\n\n    if (title) {\n      beforeTitle = eat(beforeTitle).test().end;\n      title = self.decode.raw(self.unescape(title), beforeTitle);\n    }\n\n    return eat(subvalue)({\n      type: 'definition',\n      identifier: normalize(identifier),\n      label: identifier,\n      title: title || null,\n      url: url\n    });\n  }\n} // Check if `character` can be inside an enclosed URI.\n\n\nfunction isEnclosedURLCharacter(character) {\n  return character !== greaterThan && character !== leftSquareBracket && character !== rightSquareBracket;\n}\n\nisEnclosedURLCharacter.delimiter = greaterThan; // Check if `character` can be inside an unclosed URI.\n\nfunction isUnclosedURLCharacter(character) {\n  return character !== leftSquareBracket && character !== rightSquareBracket && !whitespace(character);\n}","'use strict';\n\nmodule.exports = whitespace;\nvar fromCode = String.fromCharCode;\nvar re = /\\s/; // Check if the given character code, or the character code at the first\n// character, is a whitespace character.\n\nfunction whitespace(character) {\n  return re.test(typeof character === 'number' ? fromCode(character) : character.charAt(0));\n}","var toString = Object.prototype.toString;\nmodule.exports = isString;\n\nfunction isString(obj) {\n  return toString.call(obj) === \"[object String]\";\n}","'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'meta', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'pre', 'section', 'source', 'title', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","'use strict';\n\nvar alphabetical = require('is-alphabetical');\n\nvar decimal = require('is-decimal');\n\nmodule.exports = alphanumerical; // Check if the given character code, or the character code at the first\n// character, is alphanumerical.\n\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character);\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/code-inline');\n\nmodule.exports = inlineCode;\ninlineCode.locator = locate;\nvar graveAccent = '`';\n\nfunction inlineCode(eat, value, silent) {\n  var length = value.length;\n  var index = 0;\n  var queue = '';\n  var tickQueue = '';\n  var contentQueue;\n  var subqueue;\n  var count;\n  var openingCount;\n  var subvalue;\n  var character;\n  var found;\n  var next;\n\n  while (index < length) {\n    if (value.charAt(index) !== graveAccent) {\n      break;\n    }\n\n    queue += graveAccent;\n    index++;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  subvalue = queue;\n  openingCount = index;\n  queue = '';\n  next = value.charAt(index);\n  count = 0;\n\n  while (index < length) {\n    character = next;\n    next = value.charAt(index + 1);\n\n    if (character === graveAccent) {\n      count++;\n      tickQueue += character;\n    } else {\n      count = 0;\n      queue += character;\n    }\n\n    if (count && next !== graveAccent) {\n      if (count === openingCount) {\n        subvalue += queue + tickQueue;\n        found = true;\n        break;\n      }\n\n      queue += tickQueue;\n      tickQueue = '';\n    }\n\n    index++;\n  }\n\n  if (!found) {\n    if (openingCount % 2 !== 0) {\n      return;\n    }\n\n    queue = '';\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  contentQueue = '';\n  subqueue = '';\n  length = queue.length;\n  index = -1;\n\n  while (++index < length) {\n    character = queue.charAt(index);\n\n    if (whitespace(character)) {\n      subqueue += character;\n      continue;\n    }\n\n    if (subqueue) {\n      if (contentQueue) {\n        contentQueue += subqueue;\n      }\n\n      subqueue = '';\n    }\n\n    contentQueue += character;\n  }\n\n  return eat(subvalue)({\n    type: 'inlineCode',\n    value: contentQueue\n  });\n}","'use strict';\n\nmodule.exports = collapse; // `collapse(' \\t\\nbar \\nbaz\\t') // ' bar baz '`\n\nfunction collapse(value) {\n  return String(value).replace(/\\s+/g, ' ');\n}","'use strict';\n\nvar repeat = require('repeat-string');\n\nvar trim = require('trim-trailing-lines');\n\nmodule.exports = indentedCode;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar tabSize = 4;\nvar codeIndent = repeat(space, tabSize);\n\nfunction indentedCode(eat, value, silent) {\n  var index = -1;\n  var length = value.length;\n  var subvalue = '';\n  var content = '';\n  var subvalueQueue = '';\n  var contentQueue = '';\n  var character;\n  var blankQueue;\n  var indent;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (indent) {\n      indent = false;\n      subvalue += subvalueQueue;\n      content += contentQueue;\n      subvalueQueue = '';\n      contentQueue = '';\n\n      if (character === lineFeed) {\n        subvalueQueue = character;\n        contentQueue = character;\n      } else {\n        subvalue += character;\n        content += character;\n\n        while (++index < length) {\n          character = value.charAt(index);\n\n          if (!character || character === lineFeed) {\n            contentQueue = character;\n            subvalueQueue = character;\n            break;\n          }\n\n          subvalue += character;\n          content += character;\n        }\n      }\n    } else if (character === space && value.charAt(index + 1) === character && value.charAt(index + 2) === character && value.charAt(index + 3) === character) {\n      subvalueQueue += codeIndent;\n      index += 3;\n      indent = true;\n    } else if (character === tab) {\n      subvalueQueue += character;\n      indent = true;\n    } else {\n      blankQueue = '';\n\n      while (character === tab || character === space) {\n        blankQueue += character;\n        character = value.charAt(++index);\n      }\n\n      if (character !== lineFeed) {\n        break;\n      }\n\n      subvalueQueue += blankQueue + character;\n      contentQueue += character;\n    }\n  }\n\n  if (content) {\n    if (silent) {\n      return true;\n    }\n\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: trim(content)\n    });\n  }\n}","'use strict';\n\nmodule.exports = interrupt;\n\nfunction interrupt(interruptors, tokenizers, ctx, params) {\n  var length = interruptors.length;\n  var index = -1;\n  var interruptor;\n  var config;\n\n  while (++index < length) {\n    interruptor = interruptors[index];\n    config = interruptor[1] || {};\n\n    if (config.pedantic !== undefined && config.pedantic !== ctx.options.pedantic) {\n      continue;\n    }\n\n    if (config.commonmark !== undefined && config.commonmark !== ctx.options.commonmark) {\n      continue;\n    }\n\n    if (tokenizers[interruptor[0]].apply(ctx, params)) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar trim = require('trim');\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/strong');\n\nmodule.exports = strong;\nstrong.locator = locate;\nvar backslash = '\\\\';\nvar asterisk = '*';\nvar underscore = '_';\n\nfunction strong(eat, value, silent) {\n  var self = this;\n  var index = 0;\n  var character = value.charAt(index);\n  var now;\n  var pedantic;\n  var marker;\n  var queue;\n  var subvalue;\n  var length;\n  var prev;\n\n  if (character !== asterisk && character !== underscore || value.charAt(++index) !== character) {\n    return;\n  }\n\n  pedantic = self.options.pedantic;\n  marker = character;\n  subvalue = marker + marker;\n  length = value.length;\n  index++;\n  queue = '';\n  character = '';\n\n  if (pedantic && whitespace(value.charAt(index))) {\n    return;\n  }\n\n  while (index < length) {\n    prev = character;\n    character = value.charAt(index);\n\n    if (character === marker && value.charAt(index + 1) === marker && (!pedantic || !whitespace(prev))) {\n      character = value.charAt(index + 2);\n\n      if (character !== marker) {\n        if (!trim(queue)) {\n          return;\n        }\n        /* istanbul ignore if - never used (yet) */\n\n\n        if (silent) {\n          return true;\n        }\n\n        now = eat.now();\n        now.column += 2;\n        now.offset += 2;\n        return eat(subvalue + queue + subvalue)({\n          type: 'strong',\n          children: self.tokenizeInline(queue, now)\n        });\n      }\n    }\n\n    if (!pedantic && character === backslash) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    queue += character;\n    index++;\n  }\n}","'use strict';\n\nmodule.exports = atxHeading;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar numberSign = '#';\nvar maxFenceCount = 6;\n\nfunction atxHeading(eat, value, silent) {\n  var self = this;\n  var pedantic = self.options.pedantic;\n  var length = value.length + 1;\n  var index = -1;\n  var now = eat.now();\n  var subvalue = '';\n  var content = '';\n  var character;\n  var queue;\n  var depth; // Eat initial spacing.\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      index--;\n      break;\n    }\n\n    subvalue += character;\n  } // Eat hashes.\n\n\n  depth = 0;\n\n  while (++index <= length) {\n    character = value.charAt(index);\n\n    if (character !== numberSign) {\n      index--;\n      break;\n    }\n\n    subvalue += character;\n    depth++;\n  }\n\n  if (depth > maxFenceCount) {\n    return;\n  }\n\n  if (!depth || !pedantic && value.charAt(index + 1) === numberSign) {\n    return;\n  }\n\n  length = value.length + 1; // Eat intermediate white-space.\n\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      index--;\n      break;\n    }\n\n    queue += character;\n  } // Exit when not in pedantic mode without spacing.\n\n\n  if (!pedantic && queue.length === 0 && character && character !== lineFeed) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  } // Eat content.\n\n\n  subvalue += queue;\n  queue = '';\n  content = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (!character || character === lineFeed) {\n      break;\n    }\n\n    if (character !== space && character !== tab && character !== numberSign) {\n      content += queue + character;\n      queue = '';\n      continue;\n    }\n\n    while (character === space || character === tab) {\n      queue += character;\n      character = value.charAt(++index);\n    } // `#` without a queue is part of the content.\n\n\n    if (!pedantic && content && !queue && character === numberSign) {\n      content += character;\n      continue;\n    }\n\n    while (character === numberSign) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    while (character === space || character === tab) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    index--;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n  return eat(subvalue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}","'use strict';\n\nmodule.exports = escapes;\nvar defaults = ['\\\\', '`', '*', '{', '}', '[', ']', '(', ')', '#', '+', '-', '.', '!', '_', '>'];\nvar gfm = defaults.concat(['~', '|']);\nvar commonmark = gfm.concat(['\\n', '\"', '$', '%', '&', \"'\", ',', '/', ':', ';', '<', '=', '?', '@', '^']);\nescapes.default = defaults;\nescapes.gfm = gfm;\nescapes.commonmark = commonmark; // Get markdown escapes.\n\nfunction escapes(options) {\n  var settings = options || {};\n\n  if (settings.commonmark) {\n    return commonmark;\n  }\n\n  return settings.gfm ? gfm : defaults;\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  return value.indexOf('~~', fromIndex);\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  return value.indexOf('\\\\', fromIndex);\n}","'use strict';\n\nmodule.exports = setextHeading;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar equalsTo = '=';\nvar dash = '-';\nvar maxIndent = 3;\nvar equalsToDepth = 1;\nvar dashDepth = 2;\n\nfunction setextHeading(eat, value, silent) {\n  var self = this;\n  var now = eat.now();\n  var length = value.length;\n  var index = -1;\n  var subvalue = '';\n  var content;\n  var queue;\n  var character;\n  var marker;\n  var depth; // Eat initial indentation.\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== space || index >= maxIndent) {\n      index--;\n      break;\n    }\n\n    subvalue += character;\n  } // Eat content.\n\n\n  content = '';\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === lineFeed) {\n      index--;\n      break;\n    }\n\n    if (character === space || character === tab) {\n      queue += character;\n    } else {\n      content += queue + character;\n      queue = '';\n    }\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue; // Ensure the content is followed by a newline and a valid marker.\n\n  character = value.charAt(++index);\n  marker = value.charAt(++index);\n\n  if (character !== lineFeed || marker !== equalsTo && marker !== dash) {\n    return;\n  }\n\n  subvalue += character; // Eat Setext-line.\n\n  queue = marker;\n  depth = marker === equalsTo ? equalsToDepth : dashDepth;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== marker) {\n      if (character !== lineFeed) {\n        return;\n      }\n\n      index--;\n      break;\n    }\n\n    queue += character;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}","'use strict';\n\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n  var prototype;\n  return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};","'use strict';\n\nvar xtend = require('xtend');\n\nvar entities = require('parse-entities');\n\nmodule.exports = factory; // Factory to create an entity decoder.\n\nfunction factory(ctx) {\n  decoder.raw = decodeRaw;\n  return decoder; // Normalize `position` to add an `indent`.\n\n  function normalize(position) {\n    var offsets = ctx.offset;\n    var line = position.line;\n    var result = [];\n\n    while (++line) {\n      if (!(line in offsets)) {\n        break;\n      }\n\n      result.push((offsets[line] || 0) + 1);\n    }\n\n    return {\n      start: position,\n      indent: result\n    };\n  } // Decode `value` (at `position`) into text-nodes.\n\n\n  function decoder(value, position, handler) {\n    entities(value, {\n      position: normalize(position),\n      warning: handleWarning,\n      text: handler,\n      reference: handler,\n      textContext: ctx,\n      referenceContext: ctx\n    });\n  } // Decode `value` (at `position`) into a string.\n\n\n  function decodeRaw(value, position, options) {\n    return entities(value, xtend(options, {\n      position: normalize(position),\n      warning: handleWarning\n    }));\n  } // Handle a warning.\n  // See <https://github.com/wooorm/parse-entities> for the warnings.\n\n\n  function handleWarning(reason, position, code) {\n    if (code !== 3) {\n      ctx.file.message(reason, position);\n    }\n  }\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function TempCtor() {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}","'use strict';\n\nvar trim = require('trim');\n\nvar interrupt = require('../util/interrupt');\n\nmodule.exports = blockquote;\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar greaterThan = '>';\n\nfunction blockquote(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var tokenizers = self.blockTokenizers;\n  var interruptors = self.interruptBlockquote;\n  var now = eat.now();\n  var currentLine = now.line;\n  var length = value.length;\n  var values = [];\n  var contents = [];\n  var indents = [];\n  var add;\n  var index = 0;\n  var character;\n  var rest;\n  var nextIndex;\n  var content;\n  var line;\n  var startIndex;\n  var prefixed;\n  var exit;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== space && character !== tab) {\n      break;\n    }\n\n    index++;\n  }\n\n  if (value.charAt(index) !== greaterThan) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  index = 0;\n\n  while (index < length) {\n    nextIndex = value.indexOf(lineFeed, index);\n    startIndex = index;\n    prefixed = false;\n\n    if (nextIndex === -1) {\n      nextIndex = length;\n    }\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character !== space && character !== tab) {\n        break;\n      }\n\n      index++;\n    }\n\n    if (value.charAt(index) === greaterThan) {\n      index++;\n      prefixed = true;\n\n      if (value.charAt(index) === space) {\n        index++;\n      }\n    } else {\n      index = startIndex;\n    }\n\n    content = value.slice(index, nextIndex);\n\n    if (!prefixed && !trim(content)) {\n      index = startIndex;\n      break;\n    }\n\n    if (!prefixed) {\n      rest = value.slice(index); // Check if the following code contains a possible block.\n\n      if (interrupt(interruptors, tokenizers, self, [eat, rest, true])) {\n        break;\n      }\n    }\n\n    line = startIndex === index ? content : value.slice(startIndex, nextIndex);\n    indents.push(index - startIndex);\n    values.push(line);\n    contents.push(content);\n    index = nextIndex + 1;\n  }\n\n  index = -1;\n  length = indents.length;\n  add = eat(values.join(lineFeed));\n\n  while (++index < length) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + indents[index];\n    currentLine++;\n  }\n\n  exit = self.enterBlock();\n  contents = self.tokenizeBlock(contents.join(lineFeed), now);\n  exit();\n  return add({\n    type: 'blockquote',\n    children: contents\n  });\n}","'use strict';\n\nvar trim = require('trim');\n\nvar decimal = require('is-decimal');\n\nvar trimTrailingLines = require('trim-trailing-lines');\n\nvar interrupt = require('../util/interrupt');\n\nmodule.exports = paragraph;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar tabSize = 4; // Tokenise paragraph.\n\nfunction paragraph(eat, value, silent) {\n  var self = this;\n  var settings = self.options;\n  var commonmark = settings.commonmark;\n  var gfm = settings.gfm;\n  var tokenizers = self.blockTokenizers;\n  var interruptors = self.interruptParagraph;\n  var index = value.indexOf(lineFeed);\n  var length = value.length;\n  var position;\n  var subvalue;\n  var character;\n  var size;\n  var now;\n\n  while (index < length) {\n    // Eat everything if there’s no following newline.\n    if (index === -1) {\n      index = length;\n      break;\n    } // Stop if the next character is NEWLINE.\n\n\n    if (value.charAt(index + 1) === lineFeed) {\n      break;\n    } // In commonmark-mode, following indented lines are part of the paragraph.\n\n\n    if (commonmark) {\n      size = 0;\n      position = index + 1;\n\n      while (position < length) {\n        character = value.charAt(position);\n\n        if (character === tab) {\n          size = tabSize;\n          break;\n        } else if (character === space) {\n          size++;\n        } else {\n          break;\n        }\n\n        position++;\n      }\n\n      if (size >= tabSize && character !== lineFeed) {\n        index = value.indexOf(lineFeed, index + 1);\n        continue;\n      }\n    }\n\n    subvalue = value.slice(index + 1); // Check if the following code contains a possible block.\n\n    if (interrupt(interruptors, tokenizers, self, [eat, subvalue, true])) {\n      break;\n    } // Break if the following line starts a list, when already in a list, or\n    // when in commonmark, or when in gfm mode and the bullet is *not* numeric.\n\n\n    if (tokenizers.list.call(self, eat, subvalue, true) && (self.inList || commonmark || gfm && !decimal(trim.left(subvalue).charAt(0)))) {\n      break;\n    }\n\n    position = index;\n    index = value.indexOf(lineFeed, index + 1);\n\n    if (index !== -1 && trim(value.slice(position, index)) === '') {\n      index = position;\n      break;\n    }\n  }\n\n  subvalue = value.slice(0, index);\n\n  if (trim(subvalue) === '') {\n    eat(subvalue);\n    return null;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  now = eat.now();\n  subvalue = trimTrailingLines(subvalue);\n  return eat(subvalue)({\n    type: 'paragraph',\n    children: self.tokenizeInline(subvalue, now)\n  });\n}","'use strict';\n\nvar visit = require('unist-util-visit');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hastCssPropertyMap = {\n  align: 'text-align',\n  valign: 'vertical-align',\n  height: 'height',\n  width: 'width'\n};\n\nmodule.exports = function tableCellStyle(node) {\n  visit(node, 'element', visitor);\n  return node;\n};\n\nfunction visitor(node) {\n  if (node.tagName !== 'tr' && node.tagName !== 'td' && node.tagName !== 'th') {\n    return;\n  }\n\n  var hastName;\n  var cssName;\n\n  for (hastName in hastCssPropertyMap) {\n    if (!hasOwnProperty.call(hastCssPropertyMap, hastName) || node.properties[hastName] === undefined) {\n      continue;\n    }\n\n    cssName = hastCssPropertyMap[hastName];\n    appendStyle(node, cssName, node.properties[hastName]);\n    delete node.properties[hastName];\n  }\n}\n\nfunction appendStyle(node, property, value) {\n  var prevStyle = (node.properties.style || '').trim();\n\n  if (prevStyle && !/;\\s*/.test(prevStyle)) {\n    prevStyle += ';';\n  }\n\n  if (prevStyle) {\n    prevStyle += ' ';\n  }\n\n  var nextStyle = prevStyle + property + ': ' + value + ';';\n  node.properties.style = nextStyle;\n}","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  } // cover common, quick use cases\n\n\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n  var max = str.length * num;\n\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}","exports = module.exports = trim;\n\nfunction trim(str) {\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function (str) {\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function (str) {\n  return str.replace(/\\s*$/, '');\n};","'use strict';\n\nmodule.exports = text;\n\nfunction text(eat, value, silent) {\n  var self = this;\n  var methods;\n  var tokenizers;\n  var index;\n  var length;\n  var subvalue;\n  var position;\n  var tokenizer;\n  var name;\n  var min;\n  var now;\n  /* istanbul ignore if - never used (yet) */\n\n  if (silent) {\n    return true;\n  }\n\n  methods = self.inlineMethods;\n  length = methods.length;\n  tokenizers = self.inlineTokenizers;\n  index = -1;\n  min = value.length;\n\n  while (++index < length) {\n    name = methods[index];\n\n    if (name === 'text' || !tokenizers[name]) {\n      continue;\n    }\n\n    tokenizer = tokenizers[name].locator;\n\n    if (!tokenizer) {\n      eat.file.fail('Missing locator: `' + name + '`');\n    }\n\n    position = tokenizer.call(self, value, 1);\n\n    if (position !== -1 && position < min) {\n      min = position;\n    }\n  }\n\n  subvalue = value.slice(0, min);\n  now = eat.now();\n  self.decode(subvalue, now, handler);\n\n  function handler(content, position, source) {\n    eat(source || content)({\n      type: 'text',\n      value: content\n    });\n  }\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\nvar empty = '';\nvar space = ' ';\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g;\n\nfunction parse(value) {\n  var input = String(value || empty).trim();\n  return input === empty ? [] : input.split(whiteSpace);\n}\n\nfunction stringify(values) {\n  return values.join(space).trim();\n}","'use strict';\n\nvar attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = \"[^\\\"'=<>`\\\\u0000-\\\\u0020]+\";\nvar singleQuoted = \"'[^']*'\";\nvar doubleQuoted = '\"[^\"]*\"';\nvar attributeValue = '(?:' + unquoted + '|' + singleQuoted + '|' + doubleQuoted + ')';\nvar attribute = '(?:\\\\s+' + attributeName + '(?:\\\\s*=\\\\s*' + attributeValue + ')?)';\nvar openTag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar closeTag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?].*?[?]>';\nvar declaration = '<![A-Za-z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nexports.openCloseTag = new RegExp('^(?:' + openTag + '|' + closeTag + ')');\nexports.tag = new RegExp('^(?:' + openTag + '|' + closeTag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","'use strict';\n\nvar decode = require('parse-entities');\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/url');\n\nmodule.exports = url;\nurl.locator = locate;\nurl.notInLink = true;\nvar quotationMark = '\"';\nvar apostrophe = \"'\";\nvar leftParenthesis = '(';\nvar rightParenthesis = ')';\nvar comma = ',';\nvar dot = '.';\nvar colon = ':';\nvar semicolon = ';';\nvar lessThan = '<';\nvar atSign = '@';\nvar leftSquareBracket = '[';\nvar rightSquareBracket = ']';\nvar http = 'http://';\nvar https = 'https://';\nvar mailto = 'mailto:';\nvar protocols = [http, https, mailto];\nvar protocolsLength = protocols.length;\n\nfunction url(eat, value, silent) {\n  var self = this;\n  var subvalue;\n  var content;\n  var character;\n  var index;\n  var position;\n  var protocol;\n  var match;\n  var length;\n  var queue;\n  var parenCount;\n  var nextCharacter;\n  var tokenizers;\n  var exit;\n\n  if (!self.options.gfm) {\n    return;\n  }\n\n  subvalue = '';\n  index = -1;\n\n  while (++index < protocolsLength) {\n    protocol = protocols[index];\n    match = value.slice(0, protocol.length);\n\n    if (match.toLowerCase() === protocol) {\n      subvalue = match;\n      break;\n    }\n  }\n\n  if (!subvalue) {\n    return;\n  }\n\n  index = subvalue.length;\n  length = value.length;\n  queue = '';\n  parenCount = 0;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (whitespace(character) || character === lessThan) {\n      break;\n    }\n\n    if (character === dot || character === comma || character === colon || character === semicolon || character === quotationMark || character === apostrophe || character === rightParenthesis || character === rightSquareBracket) {\n      nextCharacter = value.charAt(index + 1);\n\n      if (!nextCharacter || whitespace(nextCharacter)) {\n        break;\n      }\n    }\n\n    if (character === leftParenthesis || character === leftSquareBracket) {\n      parenCount++;\n    }\n\n    if (character === rightParenthesis || character === rightSquareBracket) {\n      parenCount--;\n\n      if (parenCount < 0) {\n        break;\n      }\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  subvalue += queue;\n  content = subvalue;\n\n  if (protocol === mailto) {\n    position = queue.indexOf(atSign);\n\n    if (position === -1 || position === length - 1) {\n      return;\n    }\n\n    content = content.substr(mailto.length);\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  exit = self.enterLink(); // Temporarily remove all tokenizers except text in url.\n\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {\n    text: tokenizers.text\n  };\n  content = self.tokenizeInline(content, eat.now());\n  self.inlineTokenizers = tokenizers;\n  exit();\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(subvalue, {\n      nonTerminated: false\n    }),\n    children: content\n  });\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/delete');\n\nmodule.exports = strikethrough;\nstrikethrough.locator = locate;\nvar tilde = '~';\nvar fence = '~~';\n\nfunction strikethrough(eat, value, silent) {\n  var self = this;\n  var character = '';\n  var previous = '';\n  var preceding = '';\n  var subvalue = '';\n  var index;\n  var length;\n  var now;\n\n  if (!self.options.gfm || value.charAt(0) !== tilde || value.charAt(1) !== tilde || whitespace(value.charAt(2))) {\n    return;\n  }\n\n  index = 1;\n  length = value.length;\n  now = eat.now();\n  now.column += 2;\n  now.offset += 2;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === tilde && previous === tilde && (!preceding || !whitespace(preceding))) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      return eat(fence + subvalue + fence)({\n        type: 'delete',\n        children: self.tokenizeInline(subvalue, now)\n      });\n    }\n\n    subvalue += previous;\n    preceding = previous;\n    previous = character;\n  }\n}","'use strict';\n\nvar alphabetical = require('is-alphabetical');\n\nvar locate = require('../locate/tag');\n\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\nvar lessThan = '<';\nvar questionMark = '?';\nvar exclamationMark = '!';\nvar slash = '/';\nvar htmlLinkOpenExpression = /^<a /i;\nvar htmlLinkCloseExpression = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== lessThan || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (!alphabetical(character) && character !== questionMark && character !== exclamationMark && character !== slash) {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n  /* istanbul ignore if - not used yet. */\n\n\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && htmlLinkOpenExpression.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && htmlLinkCloseExpression.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","'use strict';\n\nmodule.exports = locate;\nvar protocols = ['https://', 'http://', 'mailto:'];\n\nfunction locate(value, fromIndex) {\n  var length = protocols.length;\n  var index = -1;\n  var min = -1;\n  var position;\n\n  if (!this.options.gfm) {\n    return -1;\n  }\n\n  while (++index < length) {\n    position = value.indexOf(protocols[index], fromIndex);\n\n    if (position !== -1 && (position < min || min === -1)) {\n      min = position;\n    }\n  }\n\n  return min;\n}","'use strict';\n\nmodule.exports = generated;\n\nfunction generated(node) {\n  var position = optional(optional(node).position);\n  var start = optional(position.start);\n  var end = optional(position.end);\n  return !start.line || !start.column || !end.line || !end.column;\n}\n\nfunction optional(value) {\n  return value && typeof value === 'object' ? value : {};\n}","'use strict';\n/* eslint-env browser */\n\nvar el;\nvar semicolon = 59; //  ';'\n\nmodule.exports = decodeEntity;\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';';\n  var char;\n  el = el || document.createElement('i');\n  el.innerHTML = entity;\n  char = el.textContent; // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false;\n  } // If the decoded string is equal to the input, the entity was not valid\n\n\n  return char === entity ? false : char;\n}","'use strict';\n\nvar openCloseTag = require('../util/html').openCloseTag;\n\nmodule.exports = blockHtml;\nvar tab = '\\t';\nvar space = ' ';\nvar lineFeed = '\\n';\nvar lessThan = '<';\nvar rawOpenExpression = /^<(script|pre|style)(?=(\\s|>|$))/i;\nvar rawCloseExpression = /<\\/(script|pre|style)>/i;\nvar commentOpenExpression = /^<!--/;\nvar commentCloseExpression = /-->/;\nvar instructionOpenExpression = /^<\\?/;\nvar instructionCloseExpression = /\\?>/;\nvar directiveOpenExpression = /^<![A-Za-z]/;\nvar directiveCloseExpression = />/;\nvar cdataOpenExpression = /^<!\\[CDATA\\[/;\nvar cdataCloseExpression = /\\]\\]>/;\nvar elementCloseExpression = /^$/;\nvar otherElementOpenExpression = new RegExp(openCloseTag.source + '\\\\s*$');\n\nfunction blockHtml(eat, value, silent) {\n  var self = this;\n  var blocks = self.options.blocks.join('|');\n  var elementOpenExpression = new RegExp('^</?(' + blocks + ')(?=(\\\\s|/?>|$))', 'i');\n  var length = value.length;\n  var index = 0;\n  var next;\n  var line;\n  var offset;\n  var character;\n  var count;\n  var sequence;\n  var subvalue;\n  var sequences = [[rawOpenExpression, rawCloseExpression, true], [commentOpenExpression, commentCloseExpression, true], [instructionOpenExpression, instructionCloseExpression, true], [directiveOpenExpression, directiveCloseExpression, true], [cdataOpenExpression, cdataCloseExpression, true], [elementOpenExpression, elementCloseExpression, true], [otherElementOpenExpression, elementCloseExpression, false]]; // Eat initial spacing.\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space) {\n      break;\n    }\n\n    index++;\n  }\n\n  if (value.charAt(index) !== lessThan) {\n    return;\n  }\n\n  next = value.indexOf(lineFeed, index + 1);\n  next = next === -1 ? length : next;\n  line = value.slice(index, next);\n  offset = -1;\n  count = sequences.length;\n\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset];\n      break;\n    }\n  }\n\n  if (!sequence) {\n    return;\n  }\n\n  if (silent) {\n    return sequence[2];\n  }\n\n  index = next;\n\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(lineFeed, index + 1);\n      next = next === -1 ? length : next;\n      line = value.slice(index + 1, next);\n\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next;\n        }\n\n        break;\n      }\n\n      index = next;\n    }\n  }\n\n  subvalue = value.slice(0, index);\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","'use strict';\n\nmodule.exports = decimal; // Check if the given character code, or the character code at the first\n// character, is decimal.\n\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 48 && code <= 57;\n  /* 0-9 */\n}","'use strict';\n\nvar legacy = require('character-entities-legacy');\n\nvar invalid = require('character-reference-invalid');\n\nvar decimal = require('is-decimal');\n\nvar hexadecimal = require('is-hexadecimal');\n\nvar alphanumerical = require('is-alphanumerical');\n\nvar decodeEntity = require('./decode-entity');\n\nmodule.exports = parseEntities;\nvar own = {}.hasOwnProperty;\nvar fromCharCode = String.fromCharCode;\nvar noop = Function.prototype; // Default settings.\n\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}; // Characters.\n\nvar tab = 9; // '\\t'\n\nvar lineFeed = 10; // '\\n'\n\nvar formFeed = 12; //  '\\f'\n\nvar space = 32; // ' '\n\nvar ampersand = 38; //  '&'\n\nvar semicolon = 59; //  ';'\n\nvar lessThan = 60; //  '<'\n\nvar equalsTo = 61; //  '='\n\nvar numberSign = 35; //  '#'\n\nvar uppercaseX = 88; //  'X'\n\nvar lowercaseX = 120; //  'x'\n\nvar replacementCharacter = 65533; // '�'\n// Reference types.\n\nvar name = 'named';\nvar hexa = 'hexadecimal';\nvar deci = 'decimal'; // Map of bases.\n\nvar bases = {};\nbases[hexa] = 16;\nbases[deci] = 10; // Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\n\nvar tests = {};\ntests[name] = alphanumerical;\ntests[deci] = decimal;\ntests[hexa] = hexadecimal; // Warning types.\n\nvar namedNotTerminated = 1;\nvar numericNotTerminated = 2;\nvar namedEmpty = 3;\nvar numericEmpty = 4;\nvar namedUnknown = 5;\nvar numericDisallowed = 6;\nvar numericProhibited = 7; // Warning messages.\n\nvar messages = {};\nmessages[namedNotTerminated] = 'Named character references must be terminated by a semicolon';\nmessages[numericNotTerminated] = 'Numeric character references must be terminated by a semicolon';\nmessages[namedEmpty] = 'Named character references cannot be empty';\nmessages[numericEmpty] = 'Numeric character references cannot be empty';\nmessages[namedUnknown] = 'Named character references must be known';\nmessages[numericDisallowed] = 'Numeric character references cannot be disallowed';\nmessages[numericProhibited] = 'Numeric character references cannot be outside the permissible Unicode range'; // Wrap to ensure clean parameters are given to `parse`.\n\nfunction parseEntities(value, options) {\n  var settings = {};\n  var option;\n  var key;\n\n  if (!options) {\n    options = {};\n  }\n\n  for (key in defaults) {\n    option = options[key];\n    settings[key] = option === null || option === undefined ? defaults[key] : option;\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || [];\n    settings.position = settings.position.start;\n  }\n\n  return parse(value, settings);\n} // Parse entities.\n// eslint-disable-next-line complexity\n\n\nfunction parse(value, settings) {\n  var additional = settings.additional;\n  var nonTerminated = settings.nonTerminated;\n  var handleText = settings.text;\n  var handleReference = settings.reference;\n  var handleWarning = settings.warning;\n  var textContext = settings.textContext;\n  var referenceContext = settings.referenceContext;\n  var warningContext = settings.warningContext;\n  var pos = settings.position;\n  var indent = settings.indent || [];\n  var length = value.length;\n  var index = 0;\n  var lines = -1;\n  var column = pos.column || 1;\n  var line = pos.line || 1;\n  var queue = '';\n  var result = [];\n  var entityCharacters;\n  var namedEntity;\n  var terminated;\n  var characters;\n  var character;\n  var reference;\n  var following;\n  var warning;\n  var reason;\n  var output;\n  var entity;\n  var begin;\n  var start;\n  var type;\n  var test;\n  var prev;\n  var next;\n  var diff;\n  var end;\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0);\n  } // Cache the current point.\n\n\n  prev = now(); // Wrap `handleWarning`.\n\n  warning = handleWarning ? parseError : noop; // Ensure the algorithm walks over the first character and the end (inclusive).\n\n  index--;\n  length++;\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1;\n    }\n\n    character = value.charCodeAt(index);\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1); // The behaviour depends on the identity of the next character.\n\n      if (following === tab || following === lineFeed || following === formFeed || following === space || following === ampersand || following === lessThan || following !== following || additional && following === additional) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character);\n        column++;\n        continue;\n      }\n\n      start = index + 1;\n      begin = start;\n      end = start;\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin; // The behaviour further depends on the next character.\n\n        following = value.charCodeAt(end);\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa;\n          end = ++begin;\n        } else {\n          // ASCII digits.\n          type = deci;\n        }\n      } else {\n        // Named entity.\n        type = name;\n      }\n\n      entityCharacters = '';\n      entity = '';\n      characters = '';\n      test = tests[type];\n      end--;\n\n      while (++end < length) {\n        following = value.charCodeAt(end);\n\n        if (!test(following)) {\n          break;\n        }\n\n        characters += fromCharCode(following); // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters;\n          entity = legacy[characters];\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon;\n\n      if (terminated) {\n        end++;\n        namedEntity = type === name ? decodeEntity(characters) : false;\n\n        if (namedEntity) {\n          entityCharacters = characters;\n          entity = namedEntity;\n        }\n      }\n\n      diff = 1 + end - start;\n\n      if (!terminated && !nonTerminated) {// Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff);\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1);\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length;\n            diff = 1 + end - begin;\n            terminated = false;\n          } // If the reference is not terminated, warn.\n\n\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty;\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end);\n\n              if (following === equalsTo) {\n                warning(reason, diff);\n                entity = null;\n              } else if (alphanumerical(following)) {\n                entity = null;\n              } else {\n                warning(reason, diff);\n              }\n            } else {\n              warning(reason, diff);\n            }\n          }\n        }\n\n        reference = entity;\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff);\n        } // When terminated and number, parse as either hexadecimal or decimal.\n\n\n        reference = parseInt(characters, bases[type]); // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff);\n          reference = fromCharCode(replacementCharacter);\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff);\n          reference = invalid[reference];\n        } else {\n          // Parse the number.\n          output = ''; // Trigger a warning when the parsed number should not be used.\n\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff);\n          } // Stringify the number.\n\n\n          if (reference > 0xffff) {\n            reference -= 0x10000;\n            output += fromCharCode(reference >>> (10 & 0x3ff) | 0xd800);\n            reference = 0xdc00 | reference & 0x3ff;\n          }\n\n          reference = output + fromCharCode(reference);\n        }\n      } // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n\n\n      if (reference) {\n        flush();\n        prev = now();\n        index = end - 1;\n        column += end - start + 1;\n        result.push(reference);\n        next = now();\n        next.offset++;\n\n        if (handleReference) {\n          handleReference.call(referenceContext, reference, {\n            start: prev,\n            end: next\n          }, value.slice(start - 1, end));\n        }\n\n        prev = next;\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end);\n        queue += characters;\n        column += characters.length;\n        index = end - 1;\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 // Line feed\n      ) {\n          line++;\n          lines++;\n          column = 0;\n        }\n\n      if (character === character) {\n        queue += fromCharCode(character);\n        column++;\n      } else {\n        flush();\n      }\n    }\n  } // Return the reduced nodes, and any possible warnings.\n\n\n  return result.join(''); // Get current position.\n\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    };\n  } // “Throw” a parse-error: a warning.\n\n\n  function parseError(code, offset) {\n    var position = now();\n    position.column += offset;\n    position.offset += offset;\n    handleWarning.call(warningContext, messages[code], position, code);\n  } // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n\n\n  function flush() {\n    if (queue) {\n      result.push(queue);\n\n      if (handleText) {\n        handleText.call(textContext, queue, {\n          start: prev,\n          end: now()\n        });\n      }\n\n      queue = '';\n    }\n  }\n} // Check if `character` is outside the permissible unicode range.\n\n\nfunction prohibited(code) {\n  return code >= 0xd800 && code <= 0xdfff || code > 0x10ffff;\n} // Check if `character` is disallowed.\n\n\nfunction disallowed(code) {\n  return code >= 0x0001 && code <= 0x0008 || code === 0x000b || code >= 0x000d && code <= 0x001f || code >= 0x007f && code <= 0x009f || code >= 0xfdd0 && code <= 0xfdef || (code & 0xffff) === 0xffff || (code & 0xffff) === 0xfffe;\n}","'use strict';\n\nmodule.exports = convert;\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test);\n  }\n\n  if (test === null || test === undefined) {\n    return ok;\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test);\n  }\n\n  if (typeof test === 'function') {\n    return test;\n  }\n\n  throw new Error('Expected function, string, or object as test');\n}\n\nfunction convertAll(tests) {\n  var results = [];\n  var length = tests.length;\n  var index = -1;\n\n  while (++index < length) {\n    results[index] = convert(tests[index]);\n  }\n\n  return results;\n} // Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\n\n\nfunction matchesFactory(test) {\n  return matches;\n\n  function matches(node) {\n    var key;\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests);\n  var length = checks.length;\n  return matches;\n\n  function matches() {\n    var index = -1;\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n} // Utility to convert a string into a function which checks a given node’s type\n// for said string.\n\n\nfunction typeFactory(test) {\n  return type;\n\n  function type(node) {\n    return Boolean(node && node.type === test);\n  }\n} // Utility to return true.\n\n\nfunction ok() {\n  return true;\n}","'use strict';\n\nmodule.exports = visit;\n\nvar visitParents = require('unist-util-visit-parents');\n\nvar CONTINUE = visitParents.CONTINUE;\nvar SKIP = visitParents.SKIP;\nvar EXIT = visitParents.EXIT;\nvisit.CONTINUE = CONTINUE;\nvisit.SKIP = SKIP;\nvisit.EXIT = EXIT;\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n\n  visitParents(tree, test, overload, reverse);\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1];\n    var index = parent ? parent.children.indexOf(node) : null;\n    return visitor(node, index, parent);\n  }\n}","'use strict';\n\nvar trim = require('trim');\n\nvar repeat = require('repeat-string');\n\nvar getIndent = require('./get-indentation');\n\nmodule.exports = indentation;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar exclamationMark = '!'; // Remove the minimum indent from every line in `value`.  Supports both tab,\n// spaced, and mixed indentation (as well as possible).\n\nfunction indentation(value, maximum) {\n  var values = value.split(lineFeed);\n  var position = values.length + 1;\n  var minIndent = Infinity;\n  var matrix = [];\n  var index;\n  var indentation;\n  var stops;\n  var padding;\n  values.unshift(repeat(space, maximum) + exclamationMark);\n\n  while (position--) {\n    indentation = getIndent(values[position]);\n    matrix[position] = indentation.stops;\n\n    if (trim(values[position]).length === 0) {\n      continue;\n    }\n\n    if (indentation.indent) {\n      if (indentation.indent > 0 && indentation.indent < minIndent) {\n        minIndent = indentation.indent;\n      }\n    } else {\n      minIndent = Infinity;\n      break;\n    }\n  }\n\n  if (minIndent !== Infinity) {\n    position = values.length;\n\n    while (position--) {\n      stops = matrix[position];\n      index = minIndent;\n\n      while (index && !(index in stops)) {\n        index--;\n      }\n\n      if (trim(values[position]).length !== 0 && minIndent && index !== minIndent) {\n        padding = tab;\n      } else {\n        padding = '';\n      }\n\n      values[position] = padding + values[position].slice(index in stops ? stops[index] + 1 : 0);\n    }\n  }\n\n  values.shift();\n  return values.join(lineFeed);\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  var index = value.indexOf('\\n', fromIndex);\n\n  while (index > fromIndex) {\n    if (value.charAt(index - 1) !== ' ') {\n      break;\n    }\n\n    index--;\n  }\n\n  return index;\n}","'use strict';\n\nmodule.exports = locate;\n\nfunction locate(value, fromIndex) {\n  return value.indexOf('<', fromIndex);\n}","'use strict';\n\nvar trim = require('trim');\n\nvar word = require('is-word-character');\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/emphasis');\n\nmodule.exports = emphasis;\nemphasis.locator = locate;\nvar asterisk = '*';\nvar underscore = '_';\nvar backslash = '\\\\';\n\nfunction emphasis(eat, value, silent) {\n  var self = this;\n  var index = 0;\n  var character = value.charAt(index);\n  var now;\n  var pedantic;\n  var marker;\n  var queue;\n  var subvalue;\n  var length;\n  var prev;\n\n  if (character !== asterisk && character !== underscore) {\n    return;\n  }\n\n  pedantic = self.options.pedantic;\n  subvalue = character;\n  marker = character;\n  length = value.length;\n  index++;\n  queue = '';\n  character = '';\n\n  if (pedantic && whitespace(value.charAt(index))) {\n    return;\n  }\n\n  while (index < length) {\n    prev = character;\n    character = value.charAt(index);\n\n    if (character === marker && (!pedantic || !whitespace(prev))) {\n      character = value.charAt(++index);\n\n      if (character !== marker) {\n        if (!trim(queue) || prev === marker) {\n          return;\n        }\n\n        if (!pedantic && marker === underscore && word(character)) {\n          queue += marker;\n          continue;\n        }\n        /* istanbul ignore if - never used (yet) */\n\n\n        if (silent) {\n          return true;\n        }\n\n        now = eat.now();\n        now.column++;\n        now.offset++;\n        return eat(subvalue + queue + marker)({\n          type: 'emphasis',\n          children: self.tokenizeInline(queue, now)\n        });\n      }\n\n      queue += marker;\n    }\n\n    if (!pedantic && character === backslash) {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    queue += character;\n    index++;\n  }\n}","'use strict';\n\nvar visit = require('unist-util-visit');\n\nmodule.exports = removePosition;\n\nfunction removePosition(node, force) {\n  visit(node, force ? hard : soft);\n  return node;\n}\n\nfunction hard(node) {\n  delete node.position;\n}\n\nfunction soft(node) {\n  node.position = undefined;\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar normalize = require('../util/normalize');\n\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\nvar backslash = '\\\\';\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar space = ' ';\nvar leftSquareBracket = '[';\nvar rightSquareBracket = ']';\nvar caret = '^';\nvar colon = ':';\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\n\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n\n  if (!self.options.footnotes) {\n    return;\n  }\n\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  if (value.charAt(index) !== leftSquareBracket || value.charAt(index + 1) !== caret) {\n    return;\n  }\n\n  subvalue += leftSquareBracket + caret;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === rightSquareBracket) {\n      break;\n    } else if (character === backslash) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue || value.charAt(index) !== rightSquareBracket || value.charAt(index + 1) !== colon) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  identifier = queue;\n  subvalue += queue + rightSquareBracket + colon;\n  index = subvalue.length;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === lineFeed) {\n      subqueue = character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== lineFeed) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      queue += subqueue;\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== space) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      if (subqueue.length === 0) {\n        break;\n      }\n\n      queue += subqueue;\n    }\n\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n\n    content += character;\n    index++;\n  }\n\n  subvalue += content;\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n    return '';\n  });\n  add = eat(subvalue);\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n  return add({\n    type: 'footnoteDefinition',\n    identifier: normalize(identifier),\n    label: identifier,\n    children: content\n  });\n}","'use strict';\n\nvar unherit = require('unherit');\n\nvar xtend = require('xtend');\n\nvar Parser = require('./lib/parser.js');\n\nmodule.exports = parse;\nparse.Parser = Parser;\n\nfunction parse(options) {\n  var settings = this.data('settings');\n  var Local = unherit(Parser);\n  Local.prototype.options = xtend(Local.prototype.options, settings, options);\n  this.Parser = Local;\n}","'use strict';\n\nmodule.exports = trimLines;\nvar ws = /[ \\t]*\\n+[ \\t]*/g;\nvar newline = '\\n';\n\nfunction trimLines(value) {\n  return String(value).replace(ws, newline);\n}","'use strict';\n\nvar xtend = require('xtend');\n\nvar toggle = require('state-toggle');\n\nvar vfileLocation = require('vfile-location');\n\nvar unescape = require('./unescape');\n\nvar decode = require('./decode');\n\nvar tokenizer = require('./tokenizer');\n\nmodule.exports = Parser;\n\nfunction Parser(doc, file) {\n  this.file = file;\n  this.offset = {};\n  this.options = xtend(this.options);\n  this.setOptions({});\n  this.inList = false;\n  this.inBlock = false;\n  this.inLink = false;\n  this.atStart = true;\n  this.toOffset = vfileLocation(file).toOffset;\n  this.unescape = unescape(this, 'escape');\n  this.decode = decode(this);\n}\n\nvar proto = Parser.prototype; // Expose core.\n\nproto.setOptions = require('./set-options');\nproto.parse = require('./parse'); // Expose `defaults`.\n\nproto.options = require('./defaults'); // Enter and exit helpers.\n\nproto.exitStart = toggle('atStart', true);\nproto.enterList = toggle('inList', false);\nproto.enterLink = toggle('inLink', false);\nproto.enterBlock = toggle('inBlock', false); // Nodes that can interupt a paragraph:\n//\n// ```markdown\n// A paragraph, followed by a thematic break.\n// ___\n// ```\n//\n// In the above example, the thematic break “interupts” the paragraph.\n\nproto.interruptParagraph = [['thematicBreak'], ['atxHeading'], ['fencedCode'], ['blockquote'], ['html'], ['setextHeading', {\n  commonmark: false\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]]; // Nodes that can interupt a list:\n//\n// ```markdown\n// - One\n// ___\n// ```\n//\n// In the above example, the thematic break “interupts” the list.\n\nproto.interruptList = [['atxHeading', {\n  pedantic: false\n}], ['fencedCode', {\n  pedantic: false\n}], ['thematicBreak', {\n  pedantic: false\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]]; // Nodes that can interupt a blockquote:\n//\n// ```markdown\n// > A paragraph.\n// ___\n// ```\n//\n// In the above example, the thematic break “interupts” the blockquote.\n\nproto.interruptBlockquote = [['indentedCode', {\n  commonmark: true\n}], ['fencedCode', {\n  commonmark: true\n}], ['atxHeading', {\n  commonmark: true\n}], ['setextHeading', {\n  commonmark: true\n}], ['thematicBreak', {\n  commonmark: true\n}], ['html', {\n  commonmark: true\n}], ['list', {\n  commonmark: true\n}], ['definition', {\n  commonmark: false\n}], ['footnote', {\n  commonmark: false\n}]]; // Handlers.\n\nproto.blockTokenizers = {\n  newline: require('./tokenize/newline'),\n  indentedCode: require('./tokenize/code-indented'),\n  fencedCode: require('./tokenize/code-fenced'),\n  blockquote: require('./tokenize/blockquote'),\n  atxHeading: require('./tokenize/heading-atx'),\n  thematicBreak: require('./tokenize/thematic-break'),\n  list: require('./tokenize/list'),\n  setextHeading: require('./tokenize/heading-setext'),\n  html: require('./tokenize/html-block'),\n  footnote: require('./tokenize/footnote-definition'),\n  definition: require('./tokenize/definition'),\n  table: require('./tokenize/table'),\n  paragraph: require('./tokenize/paragraph')\n};\nproto.inlineTokenizers = {\n  escape: require('./tokenize/escape'),\n  autoLink: require('./tokenize/auto-link'),\n  url: require('./tokenize/url'),\n  html: require('./tokenize/html-inline'),\n  link: require('./tokenize/link'),\n  reference: require('./tokenize/reference'),\n  strong: require('./tokenize/strong'),\n  emphasis: require('./tokenize/emphasis'),\n  deletion: require('./tokenize/delete'),\n  code: require('./tokenize/code-inline'),\n  break: require('./tokenize/break'),\n  text: require('./tokenize/text')\n}; // Expose precedence.\n\nproto.blockMethods = keys(proto.blockTokenizers);\nproto.inlineMethods = keys(proto.inlineTokenizers); // Tokenizers.\n\nproto.tokenizeBlock = tokenizer('block');\nproto.tokenizeInline = tokenizer('inline');\nproto.tokenizeFactory = tokenizer; // Get all keys in `value`.\n\nfunction keys(value) {\n  var result = [];\n  var key;\n\n  for (key in value) {\n    result.push(key);\n  }\n\n  return result;\n}","'use strict';\n\nmodule.exports = hexadecimal; // Check if the given character code, or the character code at the first\n// character, is hexadecimal.\n\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97\n  /* a */\n  && code <= 102 ||\n  /* z */\n  code >= 65\n  /* A */\n  && code <= 70\n  /* Z */\n  || code >= 48\n  /* A */\n  && code <= 57\n  /* Z */\n  ;\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/link');\n\nmodule.exports = link;\nlink.locator = locate;\nvar lineFeed = '\\n';\nvar exclamationMark = '!';\nvar quotationMark = '\"';\nvar apostrophe = \"'\";\nvar leftParenthesis = '(';\nvar rightParenthesis = ')';\nvar lessThan = '<';\nvar greaterThan = '>';\nvar leftSquareBracket = '[';\nvar backslash = '\\\\';\nvar rightSquareBracket = ']';\nvar graveAccent = '`';\n\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node; // Detect whether this is an image.\n\n  if (character === exclamationMark) {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  } // Eat the opening.\n\n\n  if (character !== leftSquareBracket) {\n    return;\n  } // Exit when this is a link and we’re already inside a link.\n\n\n  if (!isImage && self.inLink) {\n    return;\n  }\n\n  subvalue += character;\n  queue = '';\n  index++; // Eat the content.\n\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n  now.column += index;\n  now.offset += index;\n\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n\n    if (character === graveAccent) {\n      // Inline-code in link content.\n      count = 1;\n\n      while (value.charAt(index + 1) === graveAccent) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === backslash) {\n      // Allow brackets to be escaped.\n      index++;\n      subqueue += value.charAt(index);\n    } else if ((!opening || gfm) && character === leftSquareBracket) {\n      // In GFM mode, brackets in code still count.  In all other modes,\n      // they don’t.\n      depth++;\n    } else if ((!opening || gfm) && character === rightSquareBracket) {\n      if (depth) {\n        depth--;\n      } else {\n        // Allow white-space between content and url in GFM mode.\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n\n            if (!whitespace(character)) {\n              break;\n            }\n\n            subqueue += character;\n            index++;\n          }\n        }\n\n        if (value.charAt(index + 1) !== leftParenthesis) {\n          return;\n        }\n\n        subqueue += leftParenthesis;\n        closed = true;\n        index++;\n        break;\n      }\n    }\n\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  } // Eat the content closing.\n\n\n  if (!closed) {\n    return;\n  }\n\n  content = queue;\n  subvalue += queue + subqueue;\n  index++; // Eat white-space.\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  } // Eat the URL.\n\n\n  character = value.charAt(index);\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === lessThan) {\n    index++;\n    beforeURL += lessThan;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === greaterThan) {\n        break;\n      }\n\n      if (commonmark && character === lineFeed) {\n        return;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    if (value.charAt(index) !== greaterThan) {\n      return;\n    }\n\n    subvalue += lessThan + queue + greaterThan;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (subqueue && (character === quotationMark || character === apostrophe || commonmark && character === leftParenthesis)) {\n        break;\n      }\n\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n\n        subqueue += character;\n      } else {\n        if (character === leftParenthesis) {\n          depth++;\n        } else if (character === rightParenthesis) {\n          if (depth === 0) {\n            break;\n          }\n\n          depth--;\n        }\n\n        queue += subqueue;\n        subqueue = '';\n\n        if (character === backslash) {\n          queue += backslash;\n          character = value.charAt(++index);\n        }\n\n        queue += character;\n      }\n\n      index++;\n    }\n\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  } // Eat white-space.\n\n\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  subvalue += queue; // Eat the title.\n\n  if (queue && (character === quotationMark || character === apostrophe || commonmark && character === leftParenthesis)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = character === leftParenthesis ? rightParenthesis : character;\n    beforeTitle = subvalue; // In commonmark-mode, things are pretty easy: the marker cannot occur\n    // inside the title.  Non-commonmark does, however, support nested\n    // delimiters.\n\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          break;\n        }\n\n        if (character === backslash) {\n          queue += backslash;\n          character = value.charAt(++index);\n        }\n\n        index++;\n        queue += character;\n      }\n\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        return;\n      }\n\n      title = queue;\n      subvalue += queue + character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (!whitespace(character)) {\n          break;\n        }\n\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === rightParenthesis) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n\n        index++;\n      }\n    }\n  }\n\n  if (value.charAt(index) !== rightParenthesis) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  subvalue += rightParenthesis;\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {\n    nonTerminated: false\n  });\n\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n\n  return eat(subvalue)(node);\n}","'use strict';\n\nvar collapseWhiteSpace = require('collapse-white-space');\n\nmodule.exports = normalize; // Normalize an identifier.  Collapses multiple white space characters into a\n// single space, and removes casing.\n\nfunction normalize(value) {\n  return collapseWhiteSpace(value).toLowerCase();\n}","'use strict';\n\nmodule.exports = indentation;\nvar tab = '\\t';\nvar space = ' ';\nvar spaceSize = 1;\nvar tabSize = 4; // Gets indentation information for a line.\n\nfunction indentation(value) {\n  var index = 0;\n  var indent = 0;\n  var character = value.charAt(index);\n  var stops = {};\n  var size;\n\n  while (character === tab || character === space) {\n    size = character === tab ? tabSize : spaceSize;\n    indent += size;\n\n    if (size > 1) {\n      indent = Math.floor(indent / size) * size;\n    }\n\n    stops[indent] = index;\n    character = value.charAt(++index);\n  }\n\n  return {\n    indent: indent,\n    stops: stops\n  };\n}","'use strict';\n\nvar xtend = require('xtend');\n\nvar escapes = require('markdown-escapes');\n\nvar defaults = require('./defaults');\n\nmodule.exports = setOptions;\n\nfunction setOptions(options) {\n  var self = this;\n  var current = self.options;\n  var key;\n  var value;\n\n  if (options == null) {\n    options = {};\n  } else if (typeof options === 'object') {\n    options = xtend(options);\n  } else {\n    throw new Error('Invalid value `' + options + '` for setting `options`');\n  }\n\n  for (key in defaults) {\n    value = options[key];\n\n    if (value == null) {\n      value = current[key];\n    }\n\n    if (key !== 'blocks' && typeof value !== 'boolean' || key === 'blocks' && typeof value !== 'object') {\n      throw new Error('Invalid value `' + value + '` for setting `options.' + key + '`');\n    }\n\n    options[key] = value;\n  }\n\n  self.options = options;\n  self.escape = escapes(options);\n  return self;\n}","'use strict';\n\nmodule.exports = wordCharacter;\nvar fromCode = String.fromCharCode;\nvar re = /\\w/; // Check if the given character code, or the character code at the first\n// character, is a word character.\n\nfunction wordCharacter(character) {\n  return re.test(typeof character === 'number' ? fromCode(character) : character.charAt(0));\n}","'use strict';\n\nmodule.exports = thematicBreak;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar asterisk = '*';\nvar dash = '-';\nvar underscore = '_';\nvar maxCount = 3;\n\nfunction thematicBreak(eat, value, silent) {\n  var index = -1;\n  var length = value.length + 1;\n  var subvalue = '';\n  var character;\n  var marker;\n  var markerCount;\n  var queue;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== tab && character !== space) {\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  if (character !== asterisk && character !== dash && character !== underscore) {\n    return;\n  }\n\n  marker = character;\n  subvalue += character;\n  markerCount = 1;\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === marker) {\n      markerCount++;\n      subvalue += queue + marker;\n      queue = '';\n    } else if (character === space) {\n      queue += character;\n    } else if (markerCount >= maxCount && (!character || character === lineFeed)) {\n      subvalue += queue;\n\n      if (silent) {\n        return true;\n      }\n\n      return eat(subvalue)({\n        type: 'thematicBreak'\n      });\n    } else {\n      return;\n    }\n  }\n}","'use strict';\n\nmodule.exports = detab;\n\nvar repeat = require('repeat-string');\n\nvar tab = 0x09;\nvar lineFeed = 0x0a;\nvar carriageReturn = 0x0d; // Replace tabs with spaces, being smart about which column the tab is at and\n// which size should be used.\n\nfunction detab(value, size) {\n  var string = typeof value === 'string';\n  var length = string && value.length;\n  var start = 0;\n  var index = -1;\n  var column = -1;\n  var tabSize = size || 4;\n  var results = [];\n  var code;\n  var add;\n\n  if (!string) {\n    throw new Error('detab expected string');\n  }\n\n  while (++index < length) {\n    code = value.charCodeAt(index);\n\n    if (code === tab) {\n      add = tabSize - (column + 1) % tabSize;\n      column += add;\n      results.push(value.slice(start, index) + repeat(' ', add));\n      start = index + 1;\n    } else if (code === lineFeed || code === carriageReturn) {\n      column = -1;\n    } else {\n      column++;\n    }\n  }\n\n  results.push(value.slice(start));\n  return results.join('');\n}","'use strict';\n/* eslint-disable max-params */\n\nvar trim = require('trim');\n\nvar repeat = require('repeat-string');\n\nvar decimal = require('is-decimal');\n\nvar getIndent = require('../util/get-indentation');\n\nvar removeIndent = require('../util/remove-indentation');\n\nvar interrupt = require('../util/interrupt');\n\nmodule.exports = list;\nvar asterisk = '*';\nvar underscore = '_';\nvar plusSign = '+';\nvar dash = '-';\nvar dot = '.';\nvar space = ' ';\nvar lineFeed = '\\n';\nvar tab = '\\t';\nvar rightParenthesis = ')';\nvar lowercaseX = 'x';\nvar tabSize = 4;\nvar looseListItemExpression = /\\n\\n(?!\\s*$)/;\nvar taskItemExpression = /^\\[([ \\t]|x|X)][ \\t]/;\nvar bulletExpression = /^([ \\t]*)([*+-]|\\d+[.)])( {1,4}(?! )| |\\t|$|(?=\\n))([^\\n]*)/;\nvar pedanticBulletExpression = /^([ \\t]*)([*+-]|\\d+[.)])([ \\t]+)/;\nvar initialIndentExpression = /^( {1,4}|\\t)?/gm;\n\nfunction list(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var pedantic = self.options.pedantic;\n  var tokenizers = self.blockTokenizers;\n  var interuptors = self.interruptList;\n  var index = 0;\n  var length = value.length;\n  var start = null;\n  var size = 0;\n  var queue;\n  var ordered;\n  var character;\n  var marker;\n  var nextIndex;\n  var startIndex;\n  var prefixed;\n  var currentMarker;\n  var content;\n  var line;\n  var prevEmpty;\n  var empty;\n  var items;\n  var allLines;\n  var emptyLines;\n  var item;\n  var enterTop;\n  var exitBlockquote;\n  var spread = false;\n  var node;\n  var now;\n  var end;\n  var indented;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === tab) {\n      size += tabSize - size % tabSize;\n    } else if (character === space) {\n      size++;\n    } else {\n      break;\n    }\n\n    index++;\n  }\n\n  if (size >= tabSize) {\n    return;\n  }\n\n  character = value.charAt(index);\n\n  if (character === asterisk || character === plusSign || character === dash) {\n    marker = character;\n    ordered = false;\n  } else {\n    ordered = true;\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!decimal(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (!queue || !(character === dot || commonmark && character === rightParenthesis)) {\n      return;\n    }\n\n    start = parseInt(queue, 10);\n    marker = character;\n  }\n\n  character = value.charAt(++index);\n\n  if (character !== space && character !== tab && (pedantic || character !== lineFeed && character !== '')) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  index = 0;\n  items = [];\n  allLines = [];\n  emptyLines = [];\n\n  while (index < length) {\n    nextIndex = value.indexOf(lineFeed, index);\n    startIndex = index;\n    prefixed = false;\n    indented = false;\n\n    if (nextIndex === -1) {\n      nextIndex = length;\n    }\n\n    end = index + tabSize;\n    size = 0;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === tab) {\n        size += tabSize - size % tabSize;\n      } else if (character === space) {\n        size++;\n      } else {\n        break;\n      }\n\n      index++;\n    }\n\n    if (size >= tabSize) {\n      indented = true;\n    }\n\n    if (item && size >= item.indent) {\n      indented = true;\n    }\n\n    character = value.charAt(index);\n    currentMarker = null;\n\n    if (!indented) {\n      if (character === asterisk || character === plusSign || character === dash) {\n        currentMarker = character;\n        index++;\n        size++;\n      } else {\n        queue = '';\n\n        while (index < length) {\n          character = value.charAt(index);\n\n          if (!decimal(character)) {\n            break;\n          }\n\n          queue += character;\n          index++;\n        }\n\n        character = value.charAt(index);\n        index++;\n\n        if (queue && (character === dot || commonmark && character === rightParenthesis)) {\n          currentMarker = character;\n          size += queue.length + 1;\n        }\n      }\n\n      if (currentMarker) {\n        character = value.charAt(index);\n\n        if (character === tab) {\n          size += tabSize - size % tabSize;\n          index++;\n        } else if (character === space) {\n          end = index + tabSize;\n\n          while (index < end) {\n            if (value.charAt(index) !== space) {\n              break;\n            }\n\n            index++;\n            size++;\n          }\n\n          if (index === end && value.charAt(index) === space) {\n            index -= tabSize - 1;\n            size -= tabSize - 1;\n          }\n        } else if (character !== lineFeed && character !== '') {\n          currentMarker = null;\n        }\n      }\n    }\n\n    if (currentMarker) {\n      if (!pedantic && marker !== currentMarker) {\n        break;\n      }\n\n      prefixed = true;\n    } else {\n      if (!commonmark && !indented && value.charAt(startIndex) === space) {\n        indented = true;\n      } else if (commonmark && item) {\n        indented = size >= item.indent || size > tabSize;\n      }\n\n      prefixed = false;\n      index = startIndex;\n    }\n\n    line = value.slice(startIndex, nextIndex);\n    content = startIndex === index ? line : value.slice(index, nextIndex);\n\n    if (currentMarker === asterisk || currentMarker === underscore || currentMarker === dash) {\n      if (tokenizers.thematicBreak.call(self, eat, line, true)) {\n        break;\n      }\n    }\n\n    prevEmpty = empty;\n    empty = !prefixed && !trim(content).length;\n\n    if (indented && item) {\n      item.value = item.value.concat(emptyLines, line);\n      allLines = allLines.concat(emptyLines, line);\n      emptyLines = [];\n    } else if (prefixed) {\n      if (emptyLines.length !== 0) {\n        spread = true;\n        item.value.push('');\n        item.trail = emptyLines.concat();\n      }\n\n      item = {\n        value: [line],\n        indent: size,\n        trail: []\n      };\n      items.push(item);\n      allLines = allLines.concat(emptyLines, line);\n      emptyLines = [];\n    } else if (empty) {\n      if (prevEmpty && !commonmark) {\n        break;\n      }\n\n      emptyLines.push(line);\n    } else {\n      if (prevEmpty) {\n        break;\n      }\n\n      if (interrupt(interuptors, tokenizers, self, [eat, line, true])) {\n        break;\n      }\n\n      item.value = item.value.concat(emptyLines, line);\n      allLines = allLines.concat(emptyLines, line);\n      emptyLines = [];\n    }\n\n    index = nextIndex + 1;\n  }\n\n  node = eat(allLines.join(lineFeed)).reset({\n    type: 'list',\n    ordered: ordered,\n    start: start,\n    spread: spread,\n    children: []\n  });\n  enterTop = self.enterList();\n  exitBlockquote = self.enterBlock();\n  index = -1;\n  length = items.length;\n\n  while (++index < length) {\n    item = items[index].value.join(lineFeed);\n    now = eat.now();\n    eat(item)(listItem(self, item, now), node);\n    item = items[index].trail.join(lineFeed);\n\n    if (index !== length - 1) {\n      item += lineFeed;\n    }\n\n    eat(item);\n  }\n\n  enterTop();\n  exitBlockquote();\n  return node;\n}\n\nfunction listItem(ctx, value, position) {\n  var offsets = ctx.offset;\n  var fn = ctx.options.pedantic ? pedanticListItem : normalListItem;\n  var checked = null;\n  var task;\n  var indent;\n  value = fn.apply(null, arguments);\n\n  if (ctx.options.gfm) {\n    task = value.match(taskItemExpression);\n\n    if (task) {\n      indent = task[0].length;\n      checked = task[1].toLowerCase() === lowercaseX;\n      offsets[position.line] += indent;\n      value = value.slice(indent);\n    }\n  }\n\n  return {\n    type: 'listItem',\n    spread: looseListItemExpression.test(value),\n    checked: checked,\n    children: ctx.tokenizeBlock(value, position)\n  };\n} // Create a list-item using overly simple mechanics.\n\n\nfunction pedanticListItem(ctx, value, position) {\n  var offsets = ctx.offset;\n  var line = position.line; // Remove the list-item’s bullet.\n\n  value = value.replace(pedanticBulletExpression, replacer); // The initial line was also matched by the below, so we reset the `line`.\n\n  line = position.line;\n  return value.replace(initialIndentExpression, replacer); // A simple replacer which removed all matches, and adds their length to\n  // `offset`.\n\n  function replacer($0) {\n    offsets[line] = (offsets[line] || 0) + $0.length;\n    line++;\n    return '';\n  }\n} // Create a list-item using sane mechanics.\n\n\nfunction normalListItem(ctx, value, position) {\n  var offsets = ctx.offset;\n  var line = position.line;\n  var max;\n  var bullet;\n  var rest;\n  var lines;\n  var trimmedLines;\n  var index;\n  var length; // Remove the list-item’s bullet.\n\n  value = value.replace(bulletExpression, replacer);\n  lines = value.split(lineFeed);\n  trimmedLines = removeIndent(value, getIndent(max).indent).split(lineFeed); // We replaced the initial bullet with something else above, which was used\n  // to trick `removeIndentation` into removing some more characters when\n  // possible.  However, that could result in the initial line to be stripped\n  // more than it should be.\n\n  trimmedLines[0] = rest;\n  offsets[line] = (offsets[line] || 0) + bullet.length;\n  line++;\n  index = 0;\n  length = lines.length;\n\n  while (++index < length) {\n    offsets[line] = (offsets[line] || 0) + lines[index].length - trimmedLines[index].length;\n    line++;\n  }\n\n  return trimmedLines.join(lineFeed);\n\n  function replacer($0, $1, $2, $3, $4) {\n    bullet = $1 + $2 + $3;\n    rest = $4; // Make sure that the first nine numbered list items can indent with an\n    // extra space.  That is, when the bullet did not receive an extra final\n    // space.\n\n    if (Number($2) < 10 && bullet.length % 2 === 1) {\n      $2 = space + $2;\n    }\n\n    max = $1 + repeat(space, $2.length) + $3;\n    return max + rest;\n  }\n}","'use strict';\n\nvar locate = require('../locate/escape');\n\nmodule.exports = escape;\nescape.locator = locate;\nvar lineFeed = '\\n';\nvar backslash = '\\\\';\n\nfunction escape(eat, value, silent) {\n  var self = this;\n  var character;\n  var node;\n\n  if (value.charAt(0) === backslash) {\n    character = value.charAt(1);\n\n    if (self.escape.indexOf(character) !== -1) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      if (character === lineFeed) {\n        node = {\n          type: 'break'\n        };\n      } else {\n        node = {\n          type: 'text',\n          value: character\n        };\n      }\n\n      return eat(backslash + character)(node);\n    }\n  }\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nmodule.exports = table;\nvar tab = '\\t';\nvar lineFeed = '\\n';\nvar space = ' ';\nvar dash = '-';\nvar colon = ':';\nvar backslash = '\\\\';\nvar graveAccent = '`';\nvar verticalBar = '|';\nvar minColumns = 1;\nvar minRows = 2;\nvar left = 'left';\nvar center = 'center';\nvar right = 'right';\n\nfunction table(eat, value, silent) {\n  var self = this;\n  var index;\n  var alignments;\n  var alignment;\n  var subvalue;\n  var row;\n  var length;\n  var lines;\n  var queue;\n  var character;\n  var hasDash;\n  var align;\n  var cell;\n  var preamble;\n  var count;\n  var opening;\n  var now;\n  var position;\n  var lineCount;\n  var line;\n  var rows;\n  var table;\n  var lineIndex;\n  var pipeIndex;\n  var first; // Exit when not in gfm-mode.\n\n  if (!self.options.gfm) {\n    return;\n  } // Get the rows.\n  // Detecting tables soon is hard, so there are some checks for performance\n  // here, such as the minimum number of rows, and allowed characters in the\n  // alignment row.\n\n\n  index = 0;\n  lineCount = 0;\n  length = value.length + 1;\n  lines = [];\n\n  while (index < length) {\n    lineIndex = value.indexOf(lineFeed, index);\n    pipeIndex = value.indexOf(verticalBar, index + 1);\n\n    if (lineIndex === -1) {\n      lineIndex = value.length;\n    }\n\n    if (pipeIndex === -1 || pipeIndex > lineIndex) {\n      if (lineCount < minRows) {\n        return;\n      }\n\n      break;\n    }\n\n    lines.push(value.slice(index, lineIndex));\n    lineCount++;\n    index = lineIndex + 1;\n  } // Parse the alignment row.\n\n\n  subvalue = lines.join(lineFeed);\n  alignments = lines.splice(1, 1)[0] || [];\n  index = 0;\n  length = alignments.length;\n  lineCount--;\n  alignment = false;\n  align = [];\n\n  while (index < length) {\n    character = alignments.charAt(index);\n\n    if (character === verticalBar) {\n      hasDash = null;\n\n      if (alignment === false) {\n        if (first === false) {\n          return;\n        }\n      } else {\n        align.push(alignment);\n        alignment = false;\n      }\n\n      first = false;\n    } else if (character === dash) {\n      hasDash = true;\n      alignment = alignment || null;\n    } else if (character === colon) {\n      if (alignment === left) {\n        alignment = center;\n      } else if (hasDash && alignment === null) {\n        alignment = right;\n      } else {\n        alignment = left;\n      }\n    } else if (!whitespace(character)) {\n      return;\n    }\n\n    index++;\n  }\n\n  if (alignment !== false) {\n    align.push(alignment);\n  } // Exit when without enough columns.\n\n\n  if (align.length < minColumns) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  } // Parse the rows.\n\n\n  position = -1;\n  rows = [];\n  table = eat(subvalue).reset({\n    type: 'table',\n    align: align,\n    children: rows\n  });\n\n  while (++position < lineCount) {\n    line = lines[position];\n    row = {\n      type: 'tableRow',\n      children: []\n    }; // Eat a newline character when this is not the first row.\n\n    if (position) {\n      eat(lineFeed);\n    } // Eat the row.\n\n\n    eat(line).reset(row, table);\n    length = line.length + 1;\n    index = 0;\n    queue = '';\n    cell = '';\n    preamble = true;\n    count = null;\n    opening = null;\n\n    while (index < length) {\n      character = line.charAt(index);\n\n      if (character === tab || character === space) {\n        if (cell) {\n          queue += character;\n        } else {\n          eat(character);\n        }\n\n        index++;\n        continue;\n      }\n\n      if (character === '' || character === verticalBar) {\n        if (preamble) {\n          eat(character);\n        } else {\n          if (character && opening) {\n            queue += character;\n            index++;\n            continue;\n          }\n\n          if ((cell || character) && !preamble) {\n            subvalue = cell;\n\n            if (queue.length > 1) {\n              if (character) {\n                subvalue += queue.slice(0, queue.length - 1);\n                queue = queue.charAt(queue.length - 1);\n              } else {\n                subvalue += queue;\n                queue = '';\n              }\n            }\n\n            now = eat.now();\n            eat(subvalue)({\n              type: 'tableCell',\n              children: self.tokenizeInline(cell, now)\n            }, row);\n          }\n\n          eat(queue + character);\n          queue = '';\n          cell = '';\n        }\n      } else {\n        if (queue) {\n          cell += queue;\n          queue = '';\n        }\n\n        cell += character;\n\n        if (character === backslash && index !== length - 2) {\n          cell += line.charAt(index + 1);\n          index++;\n        }\n\n        if (character === graveAccent) {\n          count = 1;\n\n          while (line.charAt(index + 1) === character) {\n            cell += character;\n            index++;\n            count++;\n          }\n\n          if (!opening) {\n            opening = count;\n          } else if (count >= opening) {\n            opening = 0;\n          }\n        }\n      }\n\n      preamble = false;\n      index++;\n    } // Eat the alignment row.\n\n\n    if (!position) {\n      eat(lineFeed + alignments);\n    }\n  }\n\n  return table;\n}","'use strict';\n\nmodule.exports = visitParents;\n\nvar convert = require('unist-util-is/convert');\n\nvar CONTINUE = true;\nvar SKIP = 'skip';\nvar EXIT = false;\nvisitParents.CONTINUE = CONTINUE;\nvisitParents.SKIP = SKIP;\nvisitParents.EXIT = EXIT;\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is;\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n\n  is = convert(test);\n  one(tree, null, []); // Visit a single node.\n\n  function one(node, index, parents) {\n    var result = [];\n    var subresult;\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents));\n\n      if (result[0] === EXIT) {\n        return result;\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)));\n      return subresult[0] === EXIT ? subresult : result;\n    }\n\n    return result;\n  } // Visit children in `parent`.\n\n\n  function all(children, parents) {\n    var min = -1;\n    var step = reverse ? -1 : 1;\n    var index = (reverse ? children.length : min) + step;\n    var result;\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents);\n\n      if (result[0] === EXIT) {\n        return result;\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step;\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value];\n  }\n\n  return [value];\n}","'use strict';\n\nvar assign = require('object-assign');\n\nmodule.exports = u;\n\nfunction u(type, props, value) {\n  var node;\n\n  if ((value === null || value === undefined) && (typeof props !== 'object' || Array.isArray(props))) {\n    value = props;\n    props = {};\n  }\n\n  node = assign({\n    type: String(type)\n  }, props);\n\n  if (Array.isArray(value)) {\n    node.children = value;\n  } else if (value !== null && value !== undefined) {\n    node.value = String(value);\n  }\n\n  return node;\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\nvar comma = ',';\nvar space = ' ';\nvar empty = ''; // Parse comma-separated tokens to an array.\n\nfunction parse(value) {\n  var values = [];\n  var input = String(value || empty);\n  var index = input.indexOf(comma);\n  var lastIndex = 0;\n  var end = false;\n  var val;\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n\n    val = input.slice(lastIndex, index).trim();\n\n    if (val || !end) {\n      values.push(val);\n    }\n\n    lastIndex = index + 1;\n    index = input.indexOf(comma, lastIndex);\n  }\n\n  return values;\n} // Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\n\n\nfunction stringify(values, options) {\n  var settings = options || {};\n  var left = settings.padLeft === false ? empty : space;\n  var right = settings.padRight ? space : empty; // Ensure the last empty entry is seen.\n\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty);\n  }\n\n  return values.join(right + comma + left).trim();\n}","'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/link');\n\nvar normalize = require('../util/normalize');\n\nmodule.exports = reference;\nreference.locator = locate;\nvar link = 'link';\nvar image = 'image';\nvar footnote = 'footnote';\nvar shortcut = 'shortcut';\nvar collapsed = 'collapsed';\nvar full = 'full';\nvar space = ' ';\nvar exclamationMark = '!';\nvar leftSquareBracket = '[';\nvar backslash = '\\\\';\nvar rightSquareBracket = ']';\nvar caret = '^';\n\nfunction reference(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var character = value.charAt(0);\n  var index = 0;\n  var length = value.length;\n  var subvalue = '';\n  var intro = '';\n  var type = link;\n  var referenceType = shortcut;\n  var content;\n  var identifier;\n  var now;\n  var node;\n  var exit;\n  var queue;\n  var bracketed;\n  var depth; // Check whether we’re eating an image.\n\n  if (character === exclamationMark) {\n    type = image;\n    intro = character;\n    character = value.charAt(++index);\n  }\n\n  if (character !== leftSquareBracket) {\n    return;\n  }\n\n  index++;\n  intro += character;\n  queue = ''; // Check whether we’re eating a footnote.\n\n  if (self.options.footnotes && value.charAt(index) === caret) {\n    // Exit if `![^` is found, so the `!` will be seen as text after this,\n    // and we’ll enter this function again when `[^` is found.\n    if (type === image) {\n      return;\n    }\n\n    intro += caret;\n    index++;\n    type = footnote;\n  } // Eat the text.\n\n\n  depth = 0;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === leftSquareBracket) {\n      bracketed = true;\n      depth++;\n    } else if (character === rightSquareBracket) {\n      if (!depth) {\n        break;\n      }\n\n      depth--;\n    }\n\n    if (character === backslash) {\n      queue += backslash;\n      character = value.charAt(++index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  subvalue = queue;\n  content = queue;\n  character = value.charAt(index);\n\n  if (character !== rightSquareBracket) {\n    return;\n  }\n\n  index++;\n  subvalue += character;\n  queue = '';\n\n  if (!commonmark) {\n    // The original markdown syntax definition explicitly allows for whitespace\n    // between the link text and link label; commonmark departs from this, in\n    // part to improve support for shortcut reference links\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!whitespace(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n  }\n\n  character = value.charAt(index); // Inline footnotes cannot have an identifier.\n\n  if (type !== footnote && character === leftSquareBracket) {\n    identifier = '';\n    queue += character;\n    index++;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === leftSquareBracket || character === rightSquareBracket) {\n        break;\n      }\n\n      if (character === backslash) {\n        identifier += backslash;\n        character = value.charAt(++index);\n      }\n\n      identifier += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character === rightSquareBracket) {\n      referenceType = identifier ? full : collapsed;\n      queue += identifier + character;\n      index++;\n    } else {\n      identifier = '';\n    }\n\n    subvalue += queue;\n    queue = '';\n  } else {\n    if (!content) {\n      return;\n    }\n\n    identifier = content;\n  } // Brackets cannot be inside the identifier.\n\n\n  if (referenceType !== full && bracketed) {\n    return;\n  }\n\n  subvalue = intro + subvalue;\n\n  if (type === link && self.inLink) {\n    return null;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (type === footnote && content.indexOf(space) !== -1) {\n    return eat(subvalue)({\n      type: footnote,\n      children: this.tokenizeInline(content, eat.now())\n    });\n  }\n\n  now = eat.now();\n  now.column += intro.length;\n  now.offset += intro.length;\n  identifier = referenceType === full ? identifier : content;\n  node = {\n    type: type + 'Reference',\n    identifier: normalize(identifier),\n    label: identifier\n  };\n\n  if (type === link || type === image) {\n    node.referenceType = referenceType;\n  }\n\n  if (type === link) {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  } else if (type === image) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  }\n\n  return eat(subvalue)(node);\n}","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","'use strict';\n\nvar wrap = require('./wrap.js');\n\nmodule.exports = trough;\ntrough.wrap = wrap;\nvar slice = [].slice; // Create new middleware.\n\nfunction trough() {\n  var fns = [];\n  var middleware = {};\n  middleware.run = run;\n  middleware.use = use;\n  return middleware; // Run `fns`.  Last argument must be a completion handler.\n\n  function run() {\n    var index = -1;\n    var input = slice.call(arguments, 0, -1);\n    var done = arguments[arguments.length - 1];\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done);\n    }\n\n    next.apply(null, [null].concat(input)); // Run the next `fn`, if any.\n\n    function next(err) {\n      var fn = fns[++index];\n      var params = slice.call(arguments, 0);\n      var values = params.slice(1);\n      var length = input.length;\n      var pos = -1;\n\n      if (err) {\n        done(err);\n        return;\n      } // Copy non-nully input into values.\n\n\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos];\n        }\n      }\n\n      input = values; // Next or done.\n\n      if (fn) {\n        wrap(fn, next).apply(null, input);\n      } else {\n        done.apply(null, [null].concat(input));\n      }\n    }\n  } // Add `fn` to the list.\n\n\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn);\n    }\n\n    fns.push(fn);\n    return middleware;\n  }\n}","'use strict';\n\nvar xtend = require('xtend');\n\nvar removePosition = require('unist-util-remove-position');\n\nmodule.exports = parse;\nvar lineFeed = '\\n';\nvar lineBreaksExpression = /\\r\\n|\\r/g; // Parse the bound file.\n\nfunction parse() {\n  var self = this;\n  var value = String(self.file);\n  var start = {\n    line: 1,\n    column: 1,\n    offset: 0\n  };\n  var content = xtend(start);\n  var node; // Clean non-unix newlines: `\\r\\n` and `\\r` are all changed to `\\n`.\n  // This should not affect positional information.\n\n  value = value.replace(lineBreaksExpression, lineFeed); // BOM.\n\n  if (value.charCodeAt(0) === 0xfeff) {\n    value = value.slice(1);\n    content.column++;\n    content.offset++;\n  }\n\n  node = {\n    type: 'root',\n    children: self.tokenizeBlock(value, content),\n    position: {\n      start: start,\n      end: self.eof || xtend(start)\n    }\n  };\n\n  if (!self.options.position) {\n    removePosition(node, true);\n  }\n\n  return node;\n}"],"sourceRoot":""}