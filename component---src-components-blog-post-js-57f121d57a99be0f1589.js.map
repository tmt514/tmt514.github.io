{"version":3,"sources":["webpack:///./src/components/markdown.js","webpack:///./src/components/theorem.js","webpack:///./src/components/include-problem.js","webpack:///./src/components/roadmaps.js","webpack:///./src/components/blog-post.js","webpack:///./src/components/footnote.js","webpack:///./src/components/tag.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/display-ui/ui-helpers.js","webpack:///./src/components/display-ui/anchor-info.js","webpack:///./src/components/display-ui/ui-defaults.js","webpack:///./src/components/display-ui/graph-to-svg.js","webpack:///./src/components/display-ui/graph-text-node.js","webpack:///./src/components/display-ui/graph-rectanglur-node.js","webpack:///./src/components/display-ui/shapes.js","webpack:///./src/components/data-helper.js","webpack:///./src/components/display-ui/graph-node.js","webpack:///./src/components/display-grid.js","webpack:///./src/components/display-gadgets/rectangle.js","webpack:///./src/components/display-gadgets/markers.js","webpack:///./src/components/display-linked-list.js","webpack:///./src/components/display-graph.js","webpack:///./src/components/display-input-format.js","webpack:///./src/components/display.js","webpack:///./src/components/display-ui/graph-edge.js","webpack:///./src/components/display-ui/graph-collection.js","webpack:///./src/images/cc-by-nc-sa.png","webpack:///./src/components/display-array.js","webpack:///./src/components/display-binary-tree.js","webpack:///./src/components/algorithm.js","webpack:///./src/components/display-ui/ui-controller.js"],"names":["markdown","unified","use","parse","math","inlineMathDouble","rehype","options","tree","file","visit","node","hasClass","className","properties","includes","isDisplayMath","tagNmae","tagName","value","children","reactRenderer","createElement","React","remarkReactComponents","Note","props","react_default","a","theorem_Theorem","Object","assign","c","Theorem","render","val","this","content","Array","isArray","processSync","contents","length","undefined","title","style","justifyContent","Component","numToDifficulty","Difficulty","_ref","meta","difficulty","bgclass","isNaN","d","parseInt","toLowerCase","startsWith","IncludeProblem","path","code","show_solution","title_prefix","is_inline","inline","is_linkonly","notyet","gatsby_browser_entry","query","data","e","pages","edges","filter","frontmatter","page","solution","findH2Contents","regex","i","ret","recording","child","type","match","push","apply","htmlAst","map","idx","astToReact","ukey","childrenReact","key","ojlink","link","href","target","sollink","to","md","description","Fragment","include_problem_Difficulty","theorem","_2998057797","ContentCollection","_Component","arguments","inheritsLoose_default","prototype","path_prefix","tag","builder","tags","_4001701126","ProblemListAsTags","_Component2","n","label","roadmaps_ContentCollection","j","output","_loop","l","getLabel","findPageByPath","now","Date","date","react","fontWeight","getBgclassByDifficulty","MyH1","MyH2","_ref2","MyH3","_ref3","MyCode","_ref4","MySVG","_ref5","width","height","viewbox","viewBox","ShowVariable","varname","Template","componentDidMount","window","MathJax","Hub","Queue","Prism","plugins","customClass","prefix","highlightAll","componentDidUpdate","ShowVariable2","post","markdownRemark","Helmet_default","math_font","css_title_theme","backlink","css_content_theme","_ShowVariable","_this","call","ast","dict","modifiedAst","JSON","stringify","my_counter","formatter","transformer","t","findFirstDescendantByType","replace","forEach","roadmapTransformer","goto","here","far","near","id_far","id_near","display","show","u","id","verticalAlign","fontSize","backgroundColor","borderRadius","padding","color","whiteSpace","verticalAligh","tagTransformer","rehypeReact","components","h1","h2","h3","Display","display-inner","DisplayInner","mysvg","showvariable","note","algorithm","Algorithm","mylink","Link","include-problem","problem-list-as-tags","Compiler","margin","src","CCBYNCSA","maxWidth","pageQuery","__webpack_require__","r","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","GraphNodeUIHelper","updateNodePropsByStyleRules","nodeProps","styleRules","classNames","ruleIDs","keys","_i","ruleID","rule","apply_to","z","eval","pure_predicate_fn","updateNodePropsByStyles","styles","updateNodePropsFromUIStore","uiStore","onceStyles","combineUIHelpers","contentToOptions","_arr","_i2","idToOptions","nodeOptions","makeUIStores","nextProps","uistore","uiStoreFromAlgorithm","AnchorInfo","who","angle","at","extraDistance","offset","defaultLineHeight","defaultNodeProps","defaultEdgeProps","_shapes__WEBPACK_IMPORTED_MODULE_0__","text","font","fontColor","lineHeight","minWidth","minHeight","maxHeight","boundingShapeClass","Rectangle","stroke","strokeWidth","strokeLinejoin","strokeLineCap","strokeDasharray","fill","cx","cy","cxAnchor","cyAnchor","leftAnchors","rightAnchors","upAnchors","downAnchors","pathAnchors","markerStart","markerEnd","markerMid","GraphToSVG","graph","GraphCollection","markerStore","addNode","GraphNodeClass","getMarkersFromEdgeProps","edgeProps","markers","addEdge","GraphEdgeClass","_iterator","_isArray","Symbol","iterator","next","done","marker","renderSVG","lx","Infinity","ly","rx","ry","updateViewBox","x","y","w","Math","min","h","react__WEBPACK_IMPORTED_MODULE_7___default","GraphTextNode","_GraphNode","Text","rect","_proto","updateProps","newProps","getPeripheralOffsetByAngle","degree","getAnchorPoint","anchorInfo","viewboxToBeUpdated","GraphNode","_this2","textLines","split","max","concat","s","getTextWidth","measureText","widths","charCodeAt","reduce","cur","acc","ctx","hiddenCanvas","document","getContext","_proto2","getSize","textLineHeight","textsvgs","startY","dominantBaseline","textAnchor","GraphRectangularNode","innerNode","boundingShape","getBoundingShape","paddingX","paddingY","center","GraphRectangularTextNode","_GraphRectangularNode","hasTextChanged","GraphArrayNode","_GraphRectangularNode2","collection","nodes","lastNode","nodeOrText","resetAnchors","getHeight","dataNodes","_proto3","console","warn","rad","PI","cos","sin","vline","hline","dist","abs","boxWidth","boxHeight","points","floor","ceil","DataHelper","getDataFromProps","err","readNode","readEdge","seg","v","bendleft","bendright","log","walk","ed","getWidth","positionalProps","DisplayGrid","state","getDerivedStateFromProps","prevState","newState","uiStores","n_row","n_col","ui","repeat","nodelist","_loop2","notext","newNodeProps","Quadrant","clip_id","random","toString","substring","getBoundaryPaths","parseFloat","x1","y1","x2","y2","getPath","cos_s","sin_s","cos_e","sin_e","join","b","clipPath","defaultMarkerProps","orient","Marker","markerCircle","markerWidth","markerHeight","refX","refY","markerTriangle","DisplayLinkedList","isDoublyLinkedList","double","isCircularLinkedList","circular","ptrSlot","contentArray","backedgeProps","DisplayGraph","edgelist","modifiers","edge","nodeids","_","_loop3","node_id","dir_adjust","currentX","currentY","getDist","thereX","thereY","sqrt","there","u_id","v_id","dx","p","dy","DisplayInputFormat","format","parselineno","lineno","parsetype","many","parsetypename","parsenames","array","size","index","idx_begin","idx_second","idx_end","parsedesc","desc","sameLine","_iterator2","_isArray2","ge","le","gt","lt","times","varlist","display_array","grid","display_grid","display_linked_list","display_graph_DisplayGraph","display_binary_tree","display_input_format","quadrant","rectangle_Quadrant","GraphEdge","graphCollection","nodeSet","computedNodeCenter","fromAnchor","toAnchor","fromNode","toNode","fromCenter","toCenter","dir","atan2","bang","bend","mid","stretch","midshift","toNodePosition","hasComputedPositions","NODES_COUNTER","EDGES_COUNTER","computePositions","visitedNodes","dfs","finalCX","finalCY","anchorToX","anchorToY","cxa","cya","la","ra","ua","da","nodeIDs","shiftX","shiftY","sub","shifted","slice","renderedNodes","_this$computedNodeCen","edgeIDs","renderedEdges","DisplayArray","ratios","maxUnitWidth","shouldAdjustWidth","fixedwidth","react__WEBPACK_IMPORTED_MODULE_5___default","DisplayBinaryTree","structure","complete","depth","total_nodes","numbered","nowX","x_pos","leftX","rightX","_i3","clone","dictionary","findAll","name","findFirst","generator","inputdata","alldisplays","solver","input","UIController","gen","history","uiHistory","getSnapshot","clearStyleOnce","displays","stepId","changeStepBy","numMove","nextIter","setState","snapshot","uiSnapshot","annotations","_display__WEBPACK_IMPORTED_MODULE_6__","onClick","bind","setStyle","eraseStyle","setStyleOnce","addStyleRule","rule_id","RULES_COUNTER","removeStyleRule"],"mappings":"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","file":"component---src-components-blog-post-js-57f121d57a99be0f1589.js","sourcesContent":["import React, { Component } from 'react'\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport math from 'remark-math'\nimport rehype from 'remark-rehype'\nimport reactRenderer from 'rehype-react'\nimport visit from 'unist-util-visit'\n\n\nconst addDollarSignToMath = (options) => {\n    function transformer(tree, file) {\n        visit(tree, 'element', function(node) {\n            const hasClass = (node, className) => {\n                return node.properties.className && node.properties.className.includes(className)\n            }\n            const isDisplayMath = hasClass(node, \"inlineMathDouble\") ||\n            (node.tagNmae === \"div\" && hasClass(node, 'math'))\n            const isInlineMath =\n            node.tagName === \"span\" && hasClass(node, \"inlineMath\") && !isDisplayMath\n            \n            if (isInlineMath) {\n                // handle inline math\n                const value = node.children[0].value\n                node.children[0].value = '$' + value + '$'\n            } else if (isDisplayMath) {\n                // handle display math\n                const value = node.children[0].value\n                node.children[0].value = '$$' + value + '$$'\n            }\n        })\n    }\n    return transformer\n}\n\nconst markdown = unified()\n.use(parse)\n.use(math, {\n    inlineMathDouble: true,\n})\n.use(rehype)\n.use(addDollarSignToMath)\n.use(reactRenderer,\n    {\n        createElement: React.createElement,\n        remarkReactComponents: {\n        },\n    })\n\nexport default markdown;","import React, {Component} from 'react';\n\nimport markdown from './markdown'\n\nexport const Note = (props) =>\n(<Theorem {...props} c=\"is-info\"></Theorem>);\n\nclass Theorem extends Component {\n    render() {\n        const val = this.props.children;\n        // This value could be either a string, or a parsed children array from remark.\n        // We do nothing if it's already parsed.\n        var content = val;\n        if (Array.isArray(content) === false) {\n            content = markdown.processSync(val).contents;\n        }\n        if (Array.isArray(content) === true && content.length === 1) {\n            content = markdown.processSync(content[0]).contents;\n        }\n        return (\n        <div className={`message ${this.props.c||\"is-warning\"}`}>\n        {\n            this.props.title !== undefined\n            && (\n                <div className=\"message-header\" style={{justifyContent: 'flex-start'}}>\n                {this.props.title}\n                </div>\n            )\n        }\n        <div className=\"message-body\">\n        {content}\n        </div></div>\n        )\n        \n    }\n};\n\nexport default Theorem;","import React, {Component} from 'react'\nimport Theorem from './theorem'\nimport {StaticQuery, graphql, Link} from 'gatsby'\nimport visit from 'unist-util-visit'\n\nimport markdown from './markdown'\n\nconst numToDifficulty = [\"Unknown\",\n        \"Eew\",\n        \"Easy-Peasy\",\n        \"Easy\",\n        \"Medium\",\n        \"Meaningful\",\n        \"Medium\",\n        \"Hard\",\n        \"Hazzard\",\n        \"Horrible\",\n        \"Hercules\",\n    ];\n\nexport function getBgclassByDifficulty(difficulty) {\n    if (isNaN(difficulty)) {\n        difficulty = difficulty.toLowerCase();\n        if (difficulty.startsWith(\"e\"))\n            return \"is-success\"\n        if (difficulty.startsWith(\"m\"))\n            return \"is-warning\"\n        if (difficulty.startsWith(\"h\"))\n            return \"is-danger\"\n    } else {\n        const d = parseInt(difficulty);\n        if (d <= 0) return \"\";\n        if (d <= 3) return \"is-success\";\n        if (d <= 6) return \"is-warning\";\n        if (d <= 10) return \"is-danger\";\n        return \"is-dark\";\n    }\n    return \"\";\n}\n\nconst Difficulty = ({ meta }) => {\n    var difficulty = meta.difficulty===null? \"0\": meta.difficulty;\n    var bgclass = \"\";\n    \n    if (!isNaN(difficulty)) {\n        const d = parseInt(difficulty);\n        difficulty = numToDifficulty[d];\n    }\n    \n    if (difficulty.toLowerCase().startsWith(\"e\")) {\n        bgclass = \"is-success\"\n    } else if (difficulty.toLowerCase().startsWith(\"m\")) {\n        bgclass = \"is-warning\"\n    } else if (difficulty.toLowerCase().startsWith(\"h\")) {\n        bgclass = \"is-danger\"\n    }\n    return (<span className={`tag ${bgclass} is-rounded`}><b>{difficulty}</b></span>);\n}\n\nconst findH2Contents = (node, regex) => {\n    const { children } = node;\n    const ret = [];\n    var recording = false;\n    \n    var i;\n    for (i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.type === \"element\") {\n            if (child.tagName === \"h2\") {\n                if (child.children !== undefined &&\n                    child.children[0] !== undefined &&\n                    child.children[0].value.match(regex) !== null) {\n                    recording = true;\n                    ret.push(child);\n                } else {\n                    recording = false;\n                }\n            } else if (recording === true) {\n                ret.push(child);\n            } else {\n                ret.push(...findH2Contents(child, regex))\n            }\n        } else if (recording === true) {\n            ret.push(child);\n        }\n    }\n    return ret\n}\n\nconst astToReact = (node, ukey) => {\n    const { children } = node;\n    if (node.type === \"text\") return node.value;\n\n    const childrenReact = children.map((c, idx) => astToReact(c, `${ukey}-${idx}`));\n    const props = Object.assign({}, node.properties)\n\n    if (node.tagName === \"h2\") {\n        props.className = (props.className || \"\") + \" title is-4\";\n    }\n    props.key = (props.key||ukey);\n    \n    const reactNode = React.createElement(node.tagName, props, childrenReact);\n    return reactNode;\n}\n\nexport default class IncludeProblem extends Component {\n    render() {\n        const path = this.props.path;\n        const code = this.props.code;\n        const show_solution = (this.props[\"show-solution\"]!== undefined);\n        const title_prefix = (this.props[\"title-prefix\"] || \"例題：\");\n        const is_inline = (this.props.inline !== undefined);\n        const is_linkonly = (this.props[\"linkonly\"] !== undefined);\n        \n        if (this.props.notyet !== undefined) {\n            return (<span>{this.props.path} 這題還沒準備好</span>)\n        }\n\n        return (<StaticQuery\n            query={graphql`\n            query allpages {\n                pages: allMarkdownRemark {\n                    edges {\n                        node {   \n                            frontmatter {\n                                title\n                                category\n                                path\n                                date\n                                _PARENT\n                                description\n                                link\n                                code\n                                difficulty\n                                oj\n                            }\n                            htmlAst\n                        }\n                     \n                    }\n                }\n            }`}\n\n            render={(data) => {\n                \n                const e = data.pages.edges.filter((e) => {return (\n                    e.node.frontmatter.path === path ||\n                    e.node.frontmatter.code === code) });\n                \n                if (e.length === 0) {\n                    return (<span>找不到題目</span>);\n                }\n                \n                const page = e[0].node;\n                const meta = page.frontmatter;\n                const solution = show_solution === true? \n                    findH2Contents(page.htmlAst, /(題解)|(Solution)/).map((e, idx) => astToReact(e, `T${idx}`))\n                    : \"\";\n                const ojlink = meta.link? (<a href={meta.link} className=\"open-op\" target=\"_blank\">{\" \"}<i className=\"fas fa-external-link-alt\"></i></a>):\"\";\n                const sollink = (<Link to={meta.path} className=\"open-sol\">{\" \"}<i className=\"far fa-lightbulb\"></i></Link>);\n                const md = markdown.processSync(meta.description).contents;\n                \n                // link mode\n                if (is_linkonly === true) {\n                    return (<>\n                        <Difficulty meta={meta} />{\" \"}\n                        {title_prefix}{meta.title}\n                        {ojlink}{sollink}{\" \"}\n                    </>)\n                }\n                // inline mode\n                if (is_inline === true) {\n                    return (<>\n                        <b>{meta.title}</b>\n                        {ojlink}{sollink}{\" \"}\n                        {md}\n                    </>)\n                }\n                // block mode\n                return (<>\n                    <h2 className=\"title is-4\">{title_prefix}{meta.title}{ojlink}</h2>\n                    <Theorem\n                        c=\"is-info\"\n                    >{meta.description}</Theorem>\n                    <p></p>\n                    {solution}\n                    </>\n                    )\n            }}\n            />)\n    }\n} ","import React, {Component, Fragment} from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport markdown from './markdown'\nimport { getBgclassByDifficulty } from './include-problem';\n\nconst findFirstDescendantByType = (node, type) => {\n    if (node.type === type) return node;\n    const {children} = node;\n    if (children !== undefined) {\n        for (var i = 0; i < children.length; i++) {\n            const t = findFirstDescendantByType(children[i], type);\n            if (t !== null) return t;\n        }\n    }\n    return null;\n}\n\nexport const roadmapTransformer = function(options) {\n    if (options.frontmatter !== undefined && options.frontmatter[\"roadmap_label_h3\"] !== null) {\n        var my_counter = 0;\n        const formatter = options.frontmatter[\"roadmap_label_h3\"]\n        function transformer(node, file) {\n            const {type, tagName, children} = node;\n            if (type === \"element\" && tagName === \"h3\") {\n                const t = findFirstDescendantByType(node, 'text')\n                if (t !== null) {\n                    my_counter += 1\n                    t.value = formatter.replace(/###/, `${my_counter}`) + t.value;\n                }\n            } else if (children) {\n                children.forEach(transformer);\n            }\n        }\n        return transformer;\n    }\n    return () => {};\n};\n\nexport class ContentCollection extends Component {\n    render() {\n        const path_prefix = this.props[\"path-prefix\"] || this.props.path_prefix;\n        const tag = this.props[\"tag\"]||\"dummyTag\";\n        const builder = this.props.builder;\n        return (<StaticQuery\n            query={graphql`\n            query contentcollection {\n                pages: allMarkdownRemark {\n                    edges {\n                        node {   \n                            frontmatter {\n                                title\n                                category\n                                path\n                                date\n                                _PARENT\n                                description\n                                link\n                                code\n                                difficulty\n                                oj\n                                tags\n                            }\n                            htmlAst\n                        }\n                     \n                    }\n                }\n            }\n            `}\n            render={(data) => {\n                const pages = data.pages.edges.filter((e) => {\n                    return (\n                        (e.node.frontmatter.path||\"\").startsWith(path_prefix)\n                    ||  (e.node.frontmatter.tags||[]).includes(tag));\n                })\n                return builder(pages);\n            }}\n        />);\n    }\n};\n\nexport class ProblemListAsTags extends Component {\n    render() {\n        const n = parseInt(this.props.n);\n        const label = this.props.label || \"A\"; \n        const path_prefix = this.props[\"path-prefix\"];\n        \n        const getLabel = (label, i) => {\n            if (label === \"A\") return \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[i];\n            return `P${i}`;\n        }\n        const builder = (pages) => {\n            var i, j;\n            var output = [];\n            for (i = 0; i < n; i++) {\n                const l = getLabel(label, i);\n                const link = `${path_prefix}/${l}`;\n                const findPageByPath = (path) => {\n                    for (j = 0; j < pages.length; j++) {\n                        const page = pages[j].node;\n                        if (page.frontmatter.path === `${path_prefix}/${l}`) {\n                            return page;\n                        }\n                    }\n                    return undefined;\n                }\n                const page = findPageByPath(link);\n                const now = new Date();\n                if (page !== undefined &&\n                    page.frontmatter &&\n                    new Date(page.frontmatter.date) <= now) {\n                    output.push((\n                        <Fragment key={i}>\n                        <a href={link}>\n                        <span key={`i-${i}`} style={{fontWeight: 'bold'}} className={`tag ${getBgclassByDifficulty(page.frontmatter.difficulty)}`}>{l}</span>\n                        </a>\n                        {\" \"}\n                        </Fragment>\n                        ))\n                } else {\n                    output.push((\n                        <Fragment key={i}>\n                        <span key={`i-${i}`} className=\"tag\" >{l}</span>\n                        {\" \"}\n                        </Fragment>\n                        ))\n                }\n            }\n            return output;\n        }\n\n        return (<ContentCollection\n            path_prefix={path_prefix}\n            builder={builder}\n        />)\n    }\n};\n\nclass RoadmapSectionTitle extends Component {\n    render() {\n        return (<h3></h3>);\n    }\n};\n\nexport default RoadmapSectionTitle;","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport {graphql, Link} from 'gatsby';\nimport rehypeReact from 'rehype-react';\nimport Prism from 'prismjs';\n\nimport 'prismjs/plugins/custom-class/prism-custom-class.js';\nimport 'prismjs/components/prism-c.js';\nimport 'prismjs/components/prism-cpp.js';\nimport './prism-tomorrow.css';\n\n\nimport \"bulma/css/bulma.css\"\n\nimport CCBYNCSA from '../images/cc-by-nc-sa.png';\nimport Display, {DisplayInner} from './display';\nimport Theorem, {Note} from './theorem';\nimport Algorithm from './algorithm';\n\nimport IncludeProblem from './include-problem';\nimport { roadmapTransformer, ProblemListAsTags } from './roadmaps';\nimport { footnoteTransformer } from './footnote';\nimport { tagTransformer } from './tag';\n\nimport markdown from './markdown';\n\n\nconst MyH1 = ({ children }) => (\n  <h1 className=\"title is-3\">{children}</h1>\n)\nconst MyH2 = ({ children }) => (\n  <h2 className=\"title is-4\">{children}</h2>\n)\nconst MyH3 = ({ children }) => (\n  <h3 className=\"title is-5\">{children}</h3>\n)\n\nconst MyCode = ({ className, children }) => {\n  return (<code className={className}>{children}</code>)\n}\n\nconst MySVG = ({ width, height, viewbox, children }) => {\n  return (<svg width={width} height={height} viewBox={viewbox}>{children}</svg>)\n}\n\nclass ShowVariable extends Component {\n  render() {\n    const frontmatter = this.frontmatter || {};\n    const varname = this.props.varname;\n    const val = frontmatter[varname]\n    return (<div>{markdown.processSync(val).contents}</div>);\n  }\n};\n\nclass Template extends Component {\n  componentDidMount() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  componentDidUpdate() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  render() {\n    const data = this.props.data;\n    const post = data.markdownRemark;\n\n    const statefulRenderAst = (frontmatter) => {\n      class ShowVariable2 extends ShowVariable {\n        constructor() {\n          super()\n          this.frontmatter = frontmatter;\n        }\n      }\n      \n      return (ast) => {\n        const modifiedAst = JSON.parse(JSON.stringify(ast));\n        roadmapTransformer({frontmatter: frontmatter})(modifiedAst);\n        footnoteTransformer({frontmatter: frontmatter})(modifiedAst);\n        tagTransformer({frontmatter: frontmatter})(modifiedAst);\n        return new rehypeReact({\n          createElement: React.createElement,\n          components: {\n            h1: MyH1,\n            h2: MyH2,\n            h3: MyH3,\n            code: MyCode,\n            display: Display,\n            \"display-inner\": DisplayInner, \n            mysvg: MySVG,\n            showvariable: ShowVariable2,\n            theorem: Theorem,\n            note: Note,\n            algorithm: Algorithm,\n            mylink: Link,\n            \"include-problem\": IncludeProblem,\n            \"problem-list-as-tags\": ProblemListAsTags,\n          }\n        }).Compiler(modifiedAst);\n      }\n    }\n\n    return (\n      <div>\n          <Helmet title={`tmt's blog - ${post.frontmatter.title}`}>{post.frontmatter.math_font && (<script>\n            {`\n              if (window.MathJax.Hub !== undefined) {\n                window.MathJax.Hub.Config({\n                  SVG: {\n                    font: '${post.frontmatter.math_font}'\n                  }});\n              } else {\n                window.MathJax.SVG = {\n                  font: '${post.frontmatter.math_font}'\n                };\n              }\n            `}\n          </script>)}\n          </Helmet>\n          <section className={`hero ${post.frontmatter.css_title_theme || \"is-dark\"}`}>\n          <div className=\"hero-body\">\n          <div className=\"container\">\n          <span className=\"is-pulled-right\">\n          <Link to={post.frontmatter.backlink || \"/blog\"}>\n          <span className=\"icon has-text-warning\">\n            <i className=\"fas fa-lg fa-home\"></i>\n            </span> 返回\n          </Link>\n          </span>\n          <Link to={post.frontmatter.path}>\n          <h1 className=\"title\">{post.frontmatter.title}</h1>\n          <h2 className=\"subtitle\">{post.frontmatter.date}</h2>\n          </Link>\n          </div>\n          </div>\n          </section>\n          <section className={`section ${post.frontmatter.css_content_theme || \"\"}`}>\n          <div className=\"container\">\n          <div className=\"content\">\n          { statefulRenderAst(post.frontmatter)(post.htmlAst) }\n          </div>\n          </div>\n          </section>\n          <footer className=\"footer\">\n          <div className=\"content\">\n          <div className=\"is-flex is-vcentered is-centered\">\n          <img style={{height:\"32px\", margin:\"10px\"}} src={ CCBYNCSA } /> \n          <p style={{maxWidth:\"600px\"}}>\n          本文由<b>卡恩</b>(tmt514)撰寫。\n          本站使用 <a href=\"https://www.gatsbyjs.org/\">GasbyJS</a> 搭配 {}\n          <a href=\"https://bulma.io/\">Bulma</a> 製作，其原始碼為 MIT 授權。\n          網站內容除了題源以外，若無特別說明皆為創用 CC-BY-NC-SA 4.0 授權。\n          題源部份若有版權爭議還請與我聯繫，感恩。\n          </p>\n          </div>\n          </div>\n          </footer>\n      </div>\n    );\n  }\n}\nexport default Template;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        description\n        roadmap_label_h3\n        backlink\n        css_title_theme\n        css_content_theme\n        math_font\n      }\n    }\n  }\n`\n;","\nimport React from 'react';\nimport visit from 'unist-util-visit';\nimport u from 'unist-builder';\n\nexport const footnoteTransformer = function(options) {\n    function transformer(node, file) {\n        const dict = {};\n        visit(node, 'element', function(node) {\n            const {type, tagName, properties} = node;\n            if (tagName === \"footnote\") {\n                if (properties.goto !== undefined) {\n                    dict[properties.goto] = node;\n                }\n            }\n        });\n        visit(node, 'element', function(node) {\n            const {type, tagName, properties} = node;\n            if (tagName === \"footnote\") {\n                if (properties.here !== undefined && dict[properties.here] !== undefined) {\n                    var far = dict[properties.here];\n                    var near = node;\n                    // This has to be static.\n                    var id_far = `fn-${properties.here}-far`;\n                    var id_near = `fn-${properties.here}-near`;\n                    //var id_far = Math.random().toString(36).substr(2);\n                    //var id_near = Math.random().toString(36).substr(2);\n                    var display = far.properties.show || properties.here;\n                    far.tagName = \"span\";\n                    far.children.push(u('element', {tagName: 'a', properties: {href: `#${id_near}`}}, [u('text', `[👣${display}]`)]));\n                    far.properties.id = id_far;\n                    far.properties.style = {\n                        verticalAlign: \"super\",\n                        fontSize: \"60%\",\n                    };\n                    near.tagName = \"span\";\n                    near.children.push(u('element', {tagName: 'a', properties: {href: `#${id_far}`}}, [u('text', `[🔙]`)]));\n                    near.properties.id = id_near;\n                    near.properties.style = {\n                        verticalAlign: \"super\",\n                        fontSize: \"60%\",\n                    };\n                }\n            }\n        });\n    }\n    return transformer;\n};","import React from 'react';\nimport visit from 'unist-util-visit';\nimport u from 'unist-builder';\n\nexport const tagTransformer = function(options) {\n    function transformer(node, file) {\n        visit(node, 'element', function(node) {\n            const {type, tagName, properties} = node;\n            if (tagName === \"tag\") {\n                node.tagName = \"span\";\n                node.properties.className = (node.properties.className||\"\") + \" tag is-primary\"\n            }\n            // For leetcode guide use.\n            if (tagName === \"tag-easy\") {\n                node.tagName = \"span\";\n                node.properties.style = {\n                    backgroundColor: \"#5cb85c\",\n                    borderRadius: \"1020px\",\n                    padding: \".2em .6em .3em\",\n                    fontSize: \"75%\",\n                    fontWeight: \"700\",\n                    color: \"#FFF\",\n                    whiteSpace: \"nowrap\",\n                    verticalAligh: \"baseline\",\n                }\n                node.children.push(u('text', 'Easy'));\n            }\n            if (tagName === \"tag-medium\") {\n                node.tagName = \"span\";\n                node.properties.style = {\n                    backgroundColor: \"#F0AD4E\",\n                    borderRadius: \"1020px\",\n                    padding: \".2em .6em .3em\",\n                    fontSize: \"75%\",\n                    fontWeight: \"700\",\n                    color: \"#FFF\",\n                    whiteSpace: \"nowrap\",\n                    verticalAligh: \"baseline\",\n                }\n                node.children.push(u('text', 'Medium'));\n            }\n            if (tagName === \"tag-hard\") {\n                node.tagName = \"span\";\n                node.properties.style = {\n                    backgroundColor: \"#d9534f\",\n                    borderRadius: \"1020px\",\n                    padding: \".2em .6em .3em\",\n                    fontSize: \"75%\",\n                    fontWeight: \"700\",\n                    color: \"#FFF\",\n                    whiteSpace: \"nowrap\",\n                    verticalAligh: \"baseline\",\n                }\n                node.children.push(u('text', 'Hard'));\n            }\n        });\n    }\n    return transformer;\n};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// Helper class of functions on updating ui.\nexport class GraphNodeUIHelper {\n    static updateNodePropsByStyleRules(nodeProps, styleRules, classNames) {\n        if (styleRules === undefined) return;\n        const ruleIDs = Object.keys(styleRules);\n        for (let ruleID of ruleIDs) {\n            const rule = styleRules[ruleID];\n            if (classNames.includes(rule.apply_to)) {\n                const z = eval('((' + rule.pure_predicate_fn + ')(nodeProps))');\n                if (z === true) {\n                    Object.assign(nodeProps, rule.options||{});\n                }\n            }\n        }\n    }\n    static updateNodePropsByStyles(nodeProps, styles, id) {\n        if (styles === undefined) return;\n        Object.assign(nodeProps, styles[id]||{});\n    }\n    static updateNodePropsFromUIStore(nodeProps, uiStore, id, classNames) {\n        if (uiStore === undefined) return;\n        \n        // StyleRules\n        GraphNodeUIHelper.updateNodePropsByStyleRules(nodeProps, uiStore.styleRules, classNames);\n        \n        // Styles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.styles, id);\n        \n        // OnceStyles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.onceStyles, id);\n    }\n}\n\n\nexport function combineUIHelpers(props) {\n    const uiStore = {\n        styleRules: {},\n        styles: {},\n    }\n    const contentToOptions = eval('('+(props[\"uihelper-content-map\"]||\"{}\")+')')\n    for (var content of Object.keys(contentToOptions)) {\n        uiStore.styleRules[`content-rule-${content}`] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => {return nodeProps.content === '${content}'}`,\n            options: contentToOptions[content],\n        }\n    }\n\n    const idToOptions = eval('('+(props[\"uihelper-id-map\"]||\"{}\")+')')\n    Object.assign(uiStore.styles, idToOptions)\n\n    if (props[\"uihelper-node-style\"] !== undefined) {\n        const nodeOptions = eval('('+(props[\"uihelper-node-style\"]||\"{}\")+')')\n        uiStore.styleRules['all-node-style'] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => true`,\n            options: nodeOptions,\n        }\n    }\n\n    return uiStore;\n}\n\nexport function makeUIStores(nextProps) {\n    return [\n        combineUIHelpers(nextProps),\n        eval(`(` + nextProps.uistore + `)`),\n        nextProps.uiStoreFromAlgorithm];\n}\n\nexport default combineUIHelpers;","export default class AnchorInfo {\n    constructor(who, angle, at, extraDistance, offset) {\n        this.who = who;\n        this.angle = angle;\n        this.at = at;\n        this.extraDistance = extraDistance;\n        this.offset = offset;\n    }\n};\n\n","import { Rectangle } from './shapes'\n\nexport const defaultLineHeight = 16;\n\nexport const defaultNodeProps = {\n    id: \"dummyID\",\n\n    // Defines contents.\n    text: \"\",\n    label: null,\n    font: \"12pt Roboto\",\n    fontColor: undefined,\n    lineHeight: 16,\n    padding: 8,\n\n    // Box Size\n    minWidth: undefined,\n    minHeight: undefined,\n    maxWidth: undefined,\n    maxHeight: undefined,\n\n    // Describes the surrounding shape.\n    boundingShapeClass: Rectangle,\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: \"miter\",\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: \"none\",\n\n    // Handles position.\n    cx: undefined, // X-coordinate for the center.\n    cy: undefined, // Y-coordinate for the center.\n\n    cxAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"center\", extraDistance: 123 }\n    cyAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"boundary\", extraDistance: 123 }\n    leftAnchors: [],\n    rightAnchors: [],\n    upAnchors: [],\n    downAnchors: [],\n    // TODO(tmt514): rotatedAnchors?\n}\n\nexport const defaultEdgeProps = {\n    id: \"dummyID\",\n    \n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: undefined,\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: undefined,\n    \n    pathAnchors: [],\n\n    markerStart: undefined,\n    markerEnd: undefined,\n    markerMid: undefined,\n}","import React from 'react'\nimport GraphCollection from './graph-collection'\n\n\nclass GraphToSVG {\n    constructor() {\n        this.graph = new GraphCollection()\n        this.markerStore = {}\n    }\n\n    addNode(nodeProps, GraphNodeClass) {\n        return this.graph.addNode(nodeProps, GraphNodeClass)\n    }\n\n    // Helper functions that extract markers from edge props.\n    static getMarkersFromEdgeProps(edgeProps) {\n        var markers = []\n        if (edgeProps.markerStart !== undefined) markers.push(edgeProps.markerStart);\n        if (edgeProps.markerMid !== undefined) markers.push(edgeProps.markerMid);\n        if (edgeProps.markerEnd !== undefined) markers.push(edgeProps.markerEnd);\n        return markers;\n    }\n\n    addEdge(edgeProps, GraphEdgeClass) {\n        for (let marker of GraphToSVG.getMarkersFromEdgeProps(edgeProps)) {\n            this.markerStore[marker.props.id] = marker;\n        }\n        return this.graph.addEdge(edgeProps, GraphEdgeClass)\n    }\n\n    renderSVG() {\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        \n        this.graph.updateViewBox(viewbox, {x: 0, y: 0})\n        \n        // Adds some paddings.\n        viewbox.lx -= 10;\n        viewbox.ly -= 10;\n        viewbox.rx += 10;\n        viewbox.ry += 10;\n        \n        const w = Math.min(900, viewbox.rx - viewbox.lx);\n        const h = Math.min(700, viewbox.ry - viewbox.ly);\n        \n        // Render all markers.\n        const markers = Object.keys(this.markerStore).map((id) => {\n            return this.markerStore[id].renderSVG()\n        })\n        return (<svg width={w} height={h} style={{maxWidth:\"100%\"}} viewBox={`${viewbox.lx} ${viewbox.ly} ${viewbox.rx - viewbox.lx} ${viewbox.ry - viewbox.ly}`}>\n            {markers.length > 0 && (<defs>{markers}</defs>)}\n            {this.graph.renderSVG({x: 0, y: 0})}\n        </svg>)\n    }\n}\n\nexport default GraphToSVG;","import React from 'react'\nimport { defaultNodeProps, defaultLineHeight } from './ui-defaults'\nimport GraphNode from './graph-node';\nimport { Rectangle } from './shapes';\n\nexport class GraphTextNode extends GraphNode {\n    constructor(props) {\n        super(props)\n        this.text = new Text(props.text, props);\n        this.rect = new Rectangle(this.text.width, this.text.height);\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        return this.rect.getPeripheralOffsetByAngle(degree);\n    }\n    \n    getAnchorPoint(anchorInfo) {\n        throw \"Not Implemented\";\n    }\n    \n    updateViewBox(viewboxToBeUpdated, offset) {\n        return this.rect.updateViewBox(viewboxToBeUpdated, offset);\n    }\n    \n    renderSVG(offset) {\n        return this.text.renderSVG(offset);\n    }\n};\n\nexport class Text {\n\n    // Measuring Text Width, assuming Roboto From\n    // https://bl.ocks.org/tophtucker/62f93a4658387bb61e4510c37e2e97cf\n    static measureText(string, fontSize = 10) {\n        const widths = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0734375,0.4,0.5,0.9,0.8,0.9,0.9,0.4,0.6,0.5,0.7,0.8,0.4,0.5,0.4,0.6,0.8,0.6609375,0.8,0.7,0.8,0.8,0.8,0.8,0.8,0.7,0.4,0.4,0.7,0.7,0.7,0.7,1.1,0.9,0.8,0.9,0.8,0.8,0.8,0.9,0.9,0.4,0.7,0.9,0.8,1,0.9,0.9,0.8,0.9,0.8,0.8,0.8,0.8,0.9,1.1,0.8,0.8,0.8,0.5,0.7,0.4,0.6,0.7,0.5,0.7,0.8,0.7,0.7,0.7,0.6,0.7,0.7,0.4,0.5,0.8,0.4,1.1,0.7,0.8,0.8,0.7,0.6,0.7,0.5,0.7,0.7,1,0.7,0.7,0.7,0.6,0.4,0.6,0.9]\n        const avg = 0.7098355263157895\n        return string\n          .split('')\n          .map(c => c.charCodeAt(0) < widths.length ? widths[c.charCodeAt(0)] : avg)\n          .reduce((cur, acc) => acc + cur) * fontSize\n    }\n\n    static getTextWidth(s, props) {\n        if (typeof window === `undefined`) {\n            return Text.measureText(s, (props.lineHeight || defaultNodeProps.lineHeight));\n        }\n        var canvas = Rectangle.hiddenCanvas || (Rectangle.hiddenCanvas = window.document.createElement(\"canvas\"))\n        var ctx = canvas.getContext(\"2d\");\n        ctx.font = (props.font || defaultNodeProps.font);\n        return ctx.measureText(`${s}`).width;\n    }\n\n    constructor(text, props) {\n        this.props = props\n        this.text = text\n\n        this.textLines = text.split(\"\\n\").filter((e) => e !== \"\");\n        this.width = Math.max(0, ...this.textLines.map((s) => Text.getTextWidth(s, this.props)));\n        this.height = (props.lineHeight || defaultNodeProps.lineHeight) * this.textLines.length;\n    }\n\n    getSize() {\n        return {width: this.width, height: this.height};\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        const textLineHeight = this.props.lineHeight || defaultLineHeight;\n        var textsvgs = []\n        var i;\n        var startY = cy - this.height/2 + textLineHeight/2;\n        for (i = 0; i < this.textLines.length; i++) {\n            textsvgs.push(<text key={`text-${i}`} x={cx} y={startY}>{this.textLines[i]}</text>)\n            startY += textLineHeight;\n        }\n        const style = {\n            font: this.props.font,\n            fill: this.props.fontColor,\n        }\n        return (\n            <g dominantBaseline=\"central\" textAnchor=\"middle\" style={style}>\n                {textsvgs}\n            </g>\n        );\n    }\n}","import React from 'react'\nimport GraphNode from './graph-node'\nimport { Rectangle } from './shapes'\nimport { GraphTextNode } from './graph-text-node';\nimport GraphCollection from './graph-collection';\nimport AnchorInfo from './anchor-info';\n\nexport default class GraphRectangularNode extends GraphNode {\n    // props.content should store the \"inner\" GraphNode.\n    constructor(props, updateProps) {\n        super(props)\n        this.innerNode = props.content;\n        this.boundingShape = this.getBoundingShape();\n    }\n\n    getBoundingShape() {\n        const innerNode = this.innerNode;\n        const paddingX = (this.props.paddingX || this.props.padding);\n        const paddingY = (this.props.paddingY || this.props.padding);\n        var width = innerNode.getPeripheralOffsetByAngle(0).x - innerNode.getPeripheralOffsetByAngle(180).x + paddingX*2;\n        var height = innerNode.getPeripheralOffsetByAngle(90).y - innerNode.getPeripheralOffsetByAngle(270).y + paddingY*2;\n        if (this.props.maxWidth) width = Math.min(width, this.props.maxWidth);\n        if (this.props.minWidth) width = Math.max(width, this.props.minWidth);\n        if (this.props.maxHeight) height = Math.min(height, this.props.maxHeight);\n        if (this.props.minHeight) height = Math.max(height, this.props.minHeight);\n        return new Rectangle(width, height)\n    }\n\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        return this.boundingShape.getPeripheralOffsetByAngle(degree);\n    }\n\n    // Given computed center coordinates, generate entire SVG.\n    renderSVG(offset) {\n        return (<g key={`n-${this.props.id}`}>\n            <g\n                stroke={this.props.stroke}\n                strokeWidth={this.props.strokeWidth}\n                fill={this.props.fill}>\n                {this.boundingShape.renderSVG(offset)}\n            </g>\n            { this.innerNode.renderSVG(offset) }\n        </g>)\n    }\n\n    // Visitor pattern...?\n    updateViewBox(viewbox, center) {\n        this.boundingShape.updateViewBox(viewbox, center)\n    }\n    \n};\n\nexport class GraphRectangularTextNode extends GraphRectangularNode {\n    constructor(props) {\n        super(Object.assign(props, {content: new GraphTextNode(props)}))\n    }\n\n    updateProps(newProps) {\n        const hasTextChanged = (newProps.text !== undefined);\n        Object.assign(this.props, newProps)\n        if (hasTextChanged === true) {\n            this.innerNode = new GraphTextNode(this.props);\n        }\n        this.boundingShape = this.getBoundingShape();\n    }\n}\n\nexport class GraphArrayNode extends GraphRectangularNode {\n    // props.content will be an array.\n    constructor(props) {\n        const data = props.content;\n        const collection = new GraphCollection();\n        const nodes = []\n        var lastNode = null;\n        var i;\n        for (i = 0; i < data.length; i++) {\n            const nodeOrText = data[i];\n            var node;\n            if ((typeof nodeOrText) !== \"object\") {\n                node = collection.addNode({...props, id: \"dummyID\", text: `${nodeOrText}`}, GraphRectangularTextNode);\n            } else {\n                node = collection.addNode(nodeOrText);\n            }\n            // make sure anchors are correct.\n            node.resetAnchors();\n            if (lastNode !== null) {\n                node.updateProps({\n                    leftAnchors: [new AnchorInfo(lastNode.props.id, 0, \"boundary\", 0)],\n                    cyAnchor: new AnchorInfo(lastNode.props.id, 0, \"center\", 0),\n                })\n            } else {\n                node.updateProps({\n                    cx: 0,\n                    cy: 0,\n                })\n            }\n            lastNode = node;\n            nodes.push(node);\n        }\n        // Adjust min-height\n        const minHeight = Math.max(0, ...nodes.map((node) => node.getHeight()));\n        nodes.forEach((node) => node.updateProps({ minHeight: minHeight }));\n\n        super({ ...props, padding: 0, strokeWidth: \"0\", content: collection });\n        this.collection = collection;\n        this.data = data;\n        this.dataNodes = nodes;\n    }\n\n    getAnchorPoint(anchorInfo, center) {\n        if (typeof anchorInfo.at !== \"string\")\n            return this.collection.getAnchorPoint(anchorInfo, center);\n        return GraphRectangularNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n    }\n    \n    updateProps(newProps) {\n        console.warn(\"Not Changed Yet.\", newProps);\n    }\n}\n","import React from 'react';\n\nexport class Rectangle {\n\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        if (degree === 0) return {x: this.width/2, y: 0};\n        if (degree === 90) return {x: 0, y: this.height/2};\n        if (degree === 180) return {x: -this.width/2, y: 0};\n        if (degree === 270) return {x: 0, y: -this.height/2};\n\n        const rad = degree / 180.0 * Math.PI;\n        const c = Math.cos(rad);\n        const s = Math.sin(rad);\n        var vline = this.width/2;\n        var hline = this.height/2;\n        vline = (c === 0? Infinity: vline / c);\n        hline = (s === 0? Infinity: hline / s);\n        const dist = Math.min(Math.abs(vline), Math.abs(hline));\n        return {x: c*dist, y: s*dist}\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        return (<polyline\n            points={`${cx-boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy-boxHeight}`}\n            />)\n    }\n\n    updateViewBox(viewbox, {x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        var lx = cx-boxWidth;\n        var ly = cy-boxHeight;\n        var rx = cx+boxWidth;\n        var ry = cy+boxHeight;\n        lx = Math.floor(lx);\n        ly = Math.floor(ly);\n        rx = Math.ceil(rx);\n        ry = Math.ceil(ry);\n        \n        viewbox.lx = Math.min(viewbox.lx, lx);\n        viewbox.ly = Math.min(viewbox.ly, ly);\n        viewbox.rx = Math.max(viewbox.rx, rx);\n        viewbox.ry = Math.max(viewbox.ry, ry);\n    }\n};\n","\n// Helper functions converting different data fields into canonical internal formats.\nclass DataHelper {\n    static getDataFromProps(props) {\n        var data = undefined;\n\n        // The simplest format is a JSON string.\n        if (props.data !== undefined) {\n            if (props.data instanceof Array || props.data instanceof Object) {\n                return props.data;\n            }\n            try {\n                data = JSON.parse(props.data);\n            } catch(err) {\n                data = eval(`(${props.data})`);\n            }\n            return data;\n        }\n        \n        // Handles different types.\n        if (props.graph !== undefined) {\n            // Collects nodes and edges information.\n            data = {\n                nodes: [],\n                edges: [],\n            }\n            const readNode = (props) => {\n                return props.id;\n            }\n            const readEdge = (props) => {\n                // u, v, modifiers\n                var ret = [0, 0, {}]\n                if (props.data !== undefined) {\n                    var seg = [0, 0]\n                    try {\n                        seg = JSON.parse(props.data);\n                    } catch(err) {\n                        seg = eval(`(${props.data})`);\n                    }\n                    ret[0] = seg[0]\n                    ret[1] = seg[1]\n                    Object.assign(ret[2], seg[2]||{});\n                }\n                if (props.u !== undefined) ret[0] = props.u;\n                if (props.v !== undefined) ret[1] = props.v;\n                if (props.bendleft !== undefined) ret[2].bendleft = true;\n                if (props.bendright !== undefined) ret[2].bendright = true;\n                console.log(ret)\n                return ret;\n            }\n            const walk = (children) => {\n                console.log(children)\n                for (let child of children) {\n                    if (child instanceof Object) {\n                        if (child.type === \"node\") {\n                            data.nodes.push(readNode(child.props));\n                        }\n                        if (child.type === \"edge\") {\n                            data.edges.push(readEdge(child.props));\n                        }\n                    }\n                }\n            }\n            walk(props.children)\n            return data;\n        }\n    }\n};\n\nexport default DataHelper;","import React from 'react';\nimport { defaultLineHeight, defaultNodeProps } from './ui-defaults'\n\nexport default class GraphNode {\n    constructor(props) {\n        this.props = Object.assign({}, defaultNodeProps)\n        this.props = Object.assign(this.props, props)\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        Object.assign(this.props, newProps);\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        throw \"Not Implemented\";\n    }\n    \n    // Computes the anchor point by anchor information.\n    getAnchorPoint(anchorInfo, center={x: 0, y: 0}) {\n\n        // Handle single array wrapper.\n        // This enables indirect access for GraphCollections.\n        var at = anchorInfo.at;\n        if (Array.isArray(at) === true) {\n            at = at[0];\n        }\n\n        // Helper function to compute anchor to offset.\n        var angle = anchorInfo.angle || 0;\n        var rad = anchorInfo.angle / 180.0 * Math.PI;\n        var ed = anchorInfo.extraDistance || 0;\n        \n        var cx = center.x;\n        var cy = center.y;\n        if (at === \"boundary\") {\n            const offset = this.getPeripheralOffsetByAngle(angle);\n            cx += offset.x;\n            cy += offset.y;\n        }\n        \n        if (anchorInfo.offset !== undefined) {\n            cx += anchorInfo.offset.x;\n            cy += anchorInfo.offset.y;\n        }\n\n        cx += Math.cos(rad) * ed;\n        cy += Math.sin(rad) * ed;\n        return {x:cx, y:cy}\n    }\n    \n    // Visitor pattern...?\n    updateViewBox(viewboxToBeUpdated, offset) {\n        throw \"Not Implemented\";\n    }\n    \n    // Given the transition offsets {x, y}.\n    renderSVG(offset) {\n        throw \"Not Implemented\";\n    }\n\n    getWidth() {\n        return this.getPeripheralOffsetByAngle(0).x - this.getPeripheralOffsetByAngle(180).x\n    }\n    getHeight() {\n        return this.getPeripheralOffsetByAngle(90).y - this.getPeripheralOffsetByAngle(270).y\n    }\n    \n    // Helper function that resets anchor functions correctly.\n    resetAnchors() {\n        const positionalProps = [\"cx\", \"cy\", \"cxAnchor\", \"cyAnchor\"];\n        for (let key of positionalProps) {\n            this.props[key] = undefined;\n        }\n        Object.assign(this.props, {\n            leftAnchors: [],\n            rightAnchors: [],\n            upAnchors: [],\n            downAnchors: [],\n        });\n    }\n};\n","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\n\nclass DisplayGrid extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n\n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || []\n        newState.n_row = (nextProps.n_row && parseInt(nextProps.n_row)) || data.length\n        newState.n_col = (nextProps.n_col && parseInt(nextProps.n_col)) || (data[0] && data[0].length) || 0\n        \n        newState.ui = new GraphToSVG;\n        while (newState.data.length < newState.n_row) {\n            newState.data.push(\" \".repeat(newState.n_col))\n        } \n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n_row; i++) {\n            for (let j = 0; j < newState.n_col; j++) {\n                const nodeProps = {\n                    id: `grid-${i}-${j}`,\n                    text: `${newState.data[i][j]}`,\n                    content: newState.data[i][j],\n                    font: `12pt Courier New`,\n                    padding: 4,\n                    lineHeight: 12,\n                };\n\n                if (nextProps.notext !== undefined) {\n                    nodeProps.text = ``;\n                    nodeProps.padding = 10;\n                }\n                \n\n                if (i === 0 && j === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else if (j > 0) {\n                    nodeProps.leftAnchors = [new AnchorInfo(`grid-${i}-${j-1}`, 0, 'boundary', 0)];\n                    nodeProps.cyAnchor = new AnchorInfo(`grid-${i}-${j-1}`, 0, 'center', 0);\n                } else { // i > 0.\n                    nodeProps.downAnchors = [new AnchorInfo(`grid-${i-1}-${j}`, 90, 'boundary', 0)];\n                    nodeProps.cxAnchor = new AnchorInfo(`grid-${i-1}-${j}`, 0, 'center', 0);\n                }\n                // Id corresponds to Coordinates in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, JSON.stringify([i, j]), ['all', 'node'])\n                });\n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n\n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayGrid;","import React, { Component } from 'react';\n\nexport class Quadrant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clip_id: \"clip\" + Math.random().toString(36).substring(2),\n        }\n    }\n\n    getBoundaryPaths() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n\n        return [\n            {x1: cx, y1: cy, x2: cx+r*cos_s, y2: cy+r*sin_s},\n            {x1: cx, y1: cy, x2: cx+r*cos_e, y2: cy+r*sin_e}\n        ]\n    }\n    \n    getPath() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n        \n        console.log(s, e);\n        const largeArcFlag = (e >= s + Math.PI? 1 : 0);\n        \n        const path = [\n            `M ${cx} ${cy}`,\n            `L ${cx+r*cos_s} ${cy+r*sin_s}`,\n            `A ${r} ${r} 0 ${largeArcFlag} 1 ${cx+r*cos_e} ${cy+r*sin_e}`,\n        ];\n        \n        return path.join(\" \");\n    }\n    \n    render() {\n        const d = this.getPath();\n        const b = this.getBoundaryPaths();\n        console.log(d, b);\n        \n        \n        const href = this.props[\"clip-href\"];\n        console.log(this.props.c);\n\n        \n        return (<>\n        <clipPath id={this.state.clip_id}>\n            <use href={href||\"\"} />\n        </clipPath>\n        {\n            this.props[\"boundary-at-start\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary start`}\n                {...b[0]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        {\n            this.props[\"boundary-at-end\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary end`}\n                {...b[1]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        <path\n            className={`${this.props.c} quadrant region`}\n            d={d}\n            clipPath={`url(#${this.state.clip_id})`}\n            />\n        {\n            this.props[\"dot-at-origin\"] !== undefined &&\n            <circle\n                cx={this.props.x} cy={this.props.y}\n                r=\"5\"\n                className={`${this.props.c} quadrant origin`}\n            />\n        }\n        </>)\n    }\n};","import React from 'react'\n\nconst defaultMarkerProps = {\n    id: \"dummyID\",\n    orient: \"auto\"\n}\n\nexport default class Marker {\n    constructor(props) {\n        this.props = Object.assign({}, defaultMarkerProps, props);\n    }\n    renderSVG() {\n        return (<marker {...this.props} key={this.props.id} />)\n    }\n};\n\nexport const markerSquare = new Marker({\n    id: \"markerSquare\",\n    markerWidth: 7,\n    markerHeight: 7,\n    refX: 4,\n    refY: 4,\n    children: (<rect x=\"1\" y=\"1\" width=\"5\" height=\"5\" style={{stroke: \"none\", fill: \"black\"}}/>),\n})\n\nexport const markerCircle = new Marker({\n    id: \"markerCircle\",\n    markerWidth: 12,\n    markerHeight: 12,\n    refX: 4,\n    refY: 4,\n    children: (<circle cx=\"4\" cy=\"4\" r=\"4\" />),\n})\n\nexport const markerTriangle = new Marker({\n    id: \"markerTriangle\",\n    markerWidth: 10,\n    markerHeight: 10,\n    refX: 10,\n    refY: 5,\n    children: (<path d=\"M 0 0 L 10 5 L 0 10 z\" />),\n})","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode, GraphArrayNode } from './display-ui/graph-rectanglur-node';\nimport { markerCircle, markerTriangle } from './display-gadgets/markers';\n\nclass DisplayLinkedList extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        const data = DataHelper.getDataFromProps(nextProps);\n        const isDoublyLinkedList = nextProps.double !== undefined;\n        const isCircularLinkedList = nextProps.circular !== undefined;\n        newState.data = data || []\n        newState.n = data.length;\n        newState.ui = new GraphToSVG;\n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n; i++) {\n            const ptrSlot = new GraphRectangularTextNode({id: `ptr-next`, text: \"  \"});\n            var contentArray = [newState.data[i], ptrSlot];\n            if (isDoublyLinkedList) {\n                contentArray = [new GraphRectangularTextNode({id: `ptr-prev`, text: \"  \"}), ...contentArray]\n            }\n            const nodeProps = {\n                id: `linked-list-${i}`,\n                text: `${newState.data[i]}`,\n                content: contentArray,\n            }\n            \n            if (i == 0) {\n                nodeProps.cx = 0;\n                nodeProps.cy = 0;\n            } else {\n                nodeProps.leftAnchors = [new AnchorInfo(`linked-list-${i-1}`, 0, 'boundary', 50)];\n                nodeProps.cyAnchor = new AnchorInfo(`linked-list-${i-1}`, 0, 'center', 0);\n            }\n             \n            // Id corresponds to Coordinates in the array.\n            uiStores.forEach((uiStore) => {\n                GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n            });\n            const node = newState.ui.addNode(nodeProps, GraphArrayNode);\n            nodelist.push(node);\n\n            // create edges.\n            if (i === 0) continue;\n            \n            if (isDoublyLinkedList) {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 4}),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0, {x: 0, y: 4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n                const backedgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i}`, 0, ['ptr-prev', 'center'], 0, {x: 0, y: -4}),\n                              new AnchorInfo(`linked-list-${i-1}`, 0, 'entire-node', 0, {x: 0, y: -4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(backedgeProps)\n            } else {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0)],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n            }\n        }\n        if (isCircularLinkedList) {\n            const edgeProps = {\n                pathAnchors: [new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0),\n                              new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 30}),\n                              new AnchorInfo(`linked-list-${0}`, 90, 'boundary', 0, {x: 0, y: 15}),\n                              new AnchorInfo(`linked-list-${0}`, 0, 'entire-node', 0)],\n                markerStart: markerCircle,\n                markerEnd: markerTriangle,\n                fill: \"none\",\n            }\n            newState.ui.addEdge(edgeProps);\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayLinkedList;","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\nimport { defaultNodeProps } from './display-ui/ui-defaults';\n\nexport default class DisplayGraph extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        \n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || {};\n        \n        if (newState.ui === undefined) {\n            newState.ui = new GraphToSVG;\n            newState.nodelist = {};\n            newState.edgelist = {};\n        }\n        const nodelist = newState.nodelist;\n        const edgelist = newState.edgelist;\n        for (let i = 0; i < data.nodes.length; i++) {\n            if (nodelist[`node-${data.nodes[i]}`] === undefined) {\n                const nodeProps = {\n                    id: `node-${data.nodes[i]}`,\n                    cx: Math.random() * 600,\n                    cy: Math.random() * 480,\n                    text: \"\",\n                    content: \"\",\n                };\n                \n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${data.nodes[i]}`, ['all', 'node'])\n                });\n\n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist[nodeProps.id] = node;\n            }\n            // TODO: update uiStores here. (maybe by copying a node?)\n        }\n        for (let i = 0; i < data.edges.length; i++) {\n            const e = data.edges[i];\n            const modifiers = e[2];\n            if (edgelist[`edge-${i}-${e[0]}-${e[1]}`] === undefined) {\n                const edgeProps = {\n                    id: `edge-${i}-${e[0]}-${e[1]}`,\n                    pathAnchors: [new AnchorInfo(`node-${e[0]}`, 0, 'entire-node', 0),\n                                    new AnchorInfo(`node-${e[1]}`, 0, 'entire-node', 0)],\n                    modifiers,\n                }\n\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(edgeProps, uiStore, `[${e[0]},${e[1]}]`, ['all', 'edge'])\n                });\n\n                const edge = newState.ui.addEdge(edgeProps);\n                edgelist[edgeProps.id] = edge;\n            }\n            // TODO: need to reset UI properties.\n        }\n        const nodeids = Object.keys(nodelist);\n        for (let _ = 0; _ < 100; _++) {\n            for (let i = 0; i < nodeids.length; i++) {\n                const node = nodelist[nodeids[i]];\n                const node_id = node.props.id;\n                var dir_adjust = [];\n                const currentX = node.props.cx;\n                const currentY = node.props.cy;\n                \n                const getDist = (thereX, thereY) => {\n                    return Math.sqrt((currentX - thereX) * (currentX - thereX)\n                    + (currentY - thereY) * (currentY - thereY));\n                }\n                for (let j = 0; j < nodeids.length; j++) {\n                    const there = nodelist[nodeids[j]];\n                    if (there.props.id === node_id) continue;\n                    const thereX = there.props.cx;\n                    const thereY = there.props.cy;\n                    const dist = getDist(thereX, thereY);\n                    if (dist < 75) {\n                        dir_adjust.push([ (thereX - currentX) * (dist-75)/dist,\n                                        (thereY - currentY) * (dist-75)/dist]);\n                    }\n                }\n                \n                for (let j = 0; j < data.edges.length; j++) {\n                    const e = data.edges[j];\n                    const u_id = `node-${e[0]}`;\n                    const v_id = `node-${e[1]}`;\n                    var thereX, thereY;\n                    if (node_id === u_id) {\n                        thereX = nodelist[v_id].props.cx;\n                        thereY = nodelist[v_id].props.cy;\n                    } else if (node_id === v_id) {\n                        thereX = nodelist[u_id].props.cx;\n                        thereY = nodelist[u_id].props.cy;\n                    } else {\n                        continue;\n                    }\n                    const dist = getDist(thereX, thereY);\n                    if (dist < 95 || dist >= 105) {\n                        dir_adjust.push([ (thereX - currentX) * (dist-100)/dist,\n                                            (thereY - currentY) * (dist-100)/dist]);\n                    } else {\n                        dir_adjust.push([0, 0]);\n                    }\n                }\n                if (dir_adjust.length > 0) {\n                    const dx = dir_adjust.map((d) => d[0]).reduce((p, c) => p+c) / dir_adjust.length;\n                    const dy = dir_adjust.map((d) => d[1]).reduce((p, c) => p+c) / dir_adjust.length;\n                    node.updateProps({\n                        cx: currentX + dx,\n                        cy: currentY + dy,\n                    });\n                }\n            }\n        }\n        return newState;\n    }\n    render() {\n        return (\n        <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        );\n    }\n};","import React, {Component} from 'react';\nclass DisplayInputFormat extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const {format, children} = nextProps;\n        const parselineno = (lineno) => {\n            if (lineno === 1) {\n                return \"一\"\n            } else if (lineno === 2) {\n                return \"二\"\n            } else {\n                return ` ${lineno} `\n            }\n        }\n        const parsetypename = (type) => {\n            var ret = \"\";\n            if (type === 'int') ret += \"整數\"\n            return ret;\n        }\n        const parsetype = (type, many=1) => {\n            var ret = \"\";\n            if (many === 1) ret = \"一個\"\n            else if (many === 2) ret = \"兩個\"\n            else ret = ` $${many}$ 個`\n\n            ret += parsetypename(type);\n            return ret;\n        }\n        const parsenames = (props) => {\n            if (props.array !== undefined) {\n                const size = (isNaN(props.size)? props.size : parseInt(props.size))\n                const idx = (isNaN(props.index)? props.index : parseInt(props.index))\n                const idx_begin = (idx === undefined? 1 : idx)\n                const idx_second = (isNaN(idx_begin)? idx_begin + \"+1\" : idx_begin+1)\n                const idx_end = (idx === 0? size + (-1) : size)\n                if ((typeof(size) === \"string\") || size >= 10) {\n                    return ` $${props.id}_{${idx_begin}}, ${props.id}_{${idx_second}}, \\\\ldots, ${props.id}_{${idx_end}}$`\n                } else {\n                    var ret = ` $${props.id}_{${idx_begin}}`\n                    for (var i = idx_begin+1; i <= idx_end; i++) {\n                        ret += `, ${props.id}_{${i}}`;\n                    }\n                    ret += \"$\"\n                    return ret;\n                }\n            } else {\n                return ` $${props.id}$`\n            }\n            \n        }\n        const parserange = (props) => {\n            if (props.id && props.ge && props.le) {\n                return ` ($${props.ge} \\\\le $ ${parsenames(props)} $ \\\\le ${props.le}$)`\n            }\n            if (props.id && props.gt && props.lt) {\n                return ` ($${props.gt} < $ ${parsenames(props)} $ < ${props.lt}$)`\n            }\n            return \"\";\n        }\n        const parsedesc = (props) => {\n            if (props.desc)\n                return ` ${props.desc}`\n            if (props.id === \"T\" && format === 'multi-input')\n                return \" 代表測試資料組數\"\n            return \"\";\n        }\n        var ret = \"輸入的\";\n        const walk = (children, lineno, sameLine) => {\n            if (children === undefined) return;\n\n            if (sameLine === true) {\n                const varlist = [];\n                for (let child of children) {\n                    if (child instanceof Object) {\n                        if (child.type === \"variable\") {\n                            varlist.push(child);\n                        }\n                    }\n                }\n                return;\n            }\n\n            for (let child of children) {\n                if (child instanceof Object) {\n                    if (child.type === \"variable\") {\n                        console.log(child)\n                        ++lineno;\n                        const type = child.props.type\n                        const id = child.props.id\n                        ret += `第${parselineno(lineno)}列`\n                        ret += `包含${parsetype(type, child.props.size)}`\n                        ret += ` ${parsenames(child.props)}`\n                        ret += ` ${parserange(child.props)}`\n                        ret += `${parsedesc(child.props)}。`\n                    } else if (child.type === \"repeat\") {\n                        const times = child.props.times;\n                        if (times === \"T\" && format === 'multi-input') {\n                            ret += `對於每一組測試資料：`\n                        }\n                        walk(child.props.children, 0);\n                    } else if (child.type === \"singleline\") {\n                        walk(child.props.children, lineno, true)\n                    }\n                }\n            }\n        }\n        walk(children, 0);\n        const newState = {\n            text: `${ret}`,\n        }\n        return newState;\n    }\n    \n    render() {\n        return (\n            <p>{this.state.text}</p>\n        )\n    }\n}\n\nexport default DisplayInputFormat;","import React, {Component} from 'react';\nimport DisplayArray from './display-array';\nimport DisplayGrid from './display-grid';\nimport { Quadrant } from './display-gadgets/rectangle'\nimport DisplayLinkedList from './display-linked-list';\nimport DisplayGraph from './display-graph';\nimport DisplayBinaryTree from './display-binary-tree';\nimport DisplayInputFormat from './display-input-format';\n\nclass Display extends Component {\n    render() {\n        if (this.props.array !== undefined) {\n            return (<DisplayArray {...this.props}></DisplayArray>);\n        }\n        if (this.props.grid !== undefined) {\n            return (<DisplayGrid {...this.props}></DisplayGrid>);\n        }\n        if (this.props[\"linked-list\"] !== undefined) {\n            return (<DisplayLinkedList {...this.props}></DisplayLinkedList>);\n        }\n        if (this.props.graph !== undefined) {\n            return (<DisplayGraph {...this.props}></DisplayGraph>);\n        }\n        if (this.props[\"binary-tree\"] !== undefined) {\n            return (<DisplayBinaryTree {...this.props}></DisplayBinaryTree>);\n        }\n        if (this.props[\"input-format\"] !== undefined) {\n            return (<DisplayInputFormat {...this.props}></DisplayInputFormat>);\n        }\n        \n        \n        return (<div>\n            <span style={{color:\"red\"}}>\n            Error: Displayer of this type Not Implemented.\n            </span>\n        </div>);\n    }\n};\n\nexport class DisplayInner extends Component {\n    // This should be rendered inside some SVG tag.\n    render() {\n        if (this.props.quadrant !== undefined) {\n            return (<Quadrant {...this.props}></Quadrant>);\n        }\n        return (\n        <text fill=\"red\" x=\"0\" y=\"0\">\n            Error: Displayer of this type Not Implemented.\n        </text>\n        );\n    }\n};\n\nexport default Display;","import React from 'react'\n\nimport AnchorInfo from './anchor-info';\nimport { defaultEdgeProps } from './ui-defaults';\n\nexport default class GraphEdge {\n    constructor(props) {\n        this.props = Object.assign({}, defaultEdgeProps, props);\n    }\n    \n    renderSVG(graphCollection) {\n        var i;\n        var d = [];\n        const nodeSet = graphCollection.nodes;\n        const computedNodeCenter = graphCollection.computedNodeCenter;\n        for (i = 0; i+1 < this.props.pathAnchors.length; i++) {\n            // \"entire-node\"\n            const fromAnchor = Object.assign({}, this.props.pathAnchors[i]);\n            const toAnchor = Object.assign({}, this.props.pathAnchors[i+1]);\n\n            const fromNode = nodeSet[fromAnchor.who];\n            const toNode = nodeSet[toAnchor.who];\n\n            var fromCenter = (fromAnchor.at === \"entire-node\"?\n                computedNodeCenter[fromNode.props.id] :\n                fromNode.getAnchorPoint(fromAnchor, computedNodeCenter[fromNode.props.id]))\n\n            var toCenter = (toAnchor.at === \"entire-node\"?\n                computedNodeCenter[toNode.props.id] :\n                toNode.getAnchorPoint(toAnchor, computedNodeCenter[toNode.props.id]))\n            \n            const dir = {x: toCenter.x - fromCenter.x, y: toCenter.y - fromCenter.y};\n            const degree = Math.atan2(dir.y, dir.x) * 180 / Math.PI;\n            \n            // bending angle\n            var bang = 0;\n            if (this.props.modifiers && this.props.modifiers.bendleft !== undefined) bang=15;\n            if (this.props.modifiers && this.props.modifiers.bendright !== undefined) bang=-15;\n            if (this.props.modifiers && this.props.modifiers.bend !== undefined) bang=this.props.modifiers.bend;\n            \n            const mid = {x: (toCenter.x + fromCenter.x)/2, y: (toCenter.y + fromCenter.y)/2 };\n            const stretch = Math.sin(bang/180*Math.PI);\n            const midshift = {x: dir.y*stretch, y: -dir.x*stretch};\n            \n            if (fromAnchor.at === \"entire-node\") {\n                fromAnchor.angle = degree - 2*bang;\n                fromAnchor.at = \"boundary\";\n                d.push([\"M\", fromNode.getAnchorPoint(fromAnchor, fromCenter)]);\n            } else if (i === 0) {\n                d.push([\"M\", fromCenter]);\n            } else {\n                // do nothing when i > 0.\n            }\n\n            var toNodePosition = toCenter;\n            \n            if (toAnchor.at === \"entire-node\") {\n                toAnchor.angle = 180 + degree + bang*2;\n                toAnchor.at = \"boundary\";\n                toNodePosition = toNode.getAnchorPoint(toAnchor, toCenter)\n            }\n            \n            if (this.props.modifiers &&\n            (this.props.modifiers.bendleft !== undefined ||\n             this.props.modifiers.bendright !== undefined ||\n             this.props.modifiers.bend !== undefined)) {\n                d.push([\"Q\", { x: mid.x + midshift.x, y: mid.y + midshift.y }])\n                d.push([\"\", toNodePosition])\n            } else {\n                d.push([\"L\", toNodePosition]);\n            }\n            \n        }\n\n        var s = \"\";\n        for (i = 0; i < d.length; i++) {\n            s += `${d[i][0]} ${d[i][1].x} ${d[i][1].y} `;\n        }\n        \n        const style = {\n            stroke: this.props.stroke,\n            strokeWidth: this.props.strokeWidth,\n            fill: this.props.fill||\"none\",\n        }\n        if (this.props.markerStart !== undefined) style.markerStart = `url(#${this.props.markerStart.props.id})`\n        if (this.props.markerMid !== undefined) style.markerMid = `url(#${this.props.markerMid.props.id})`\n        if (this.props.markerEnd !== undefined) style.markerEnd = `url(#${this.props.markerEnd.props.id})`\n        \n        return (<path key={this.props.id} d={s} style={style}></path>);\n    }\n}\n","import React from 'react'\nimport GraphNode from './graph-node';\nimport GraphEdge from './graph-edge';\nimport { Rectangle } from './shapes';\n\nexport default class GraphCollection extends GraphNode {\n    static NODES_COUNTER = 0;\n    static EDGES_COUNTER = 0;\n    constructor(props) {\n        super(props);\n        this.nodes = {};\n        this.edges = {};\n        this.hasComputedPositions = false;\n    }\n\n    // Adds a new node to the graph by props, return the node.\n    addNode(nodeProps, GraphNodeClass = GraphNode) {\n        // If the input is already a node object, just added it into the dictionary.\n        if (nodeProps instanceof GraphNode) {\n            this.nodes[nodeProps.props.id] = nodeProps;\n            this.hasComputedPositions = false;\n            return nodeProps;\n        }\n        \n        // Otherwise, create a new node.\n        const node = new GraphNodeClass(nodeProps);\n        if (node.props.id === \"dummyID\") {\n            node.props.id = `n-${GraphCollection.NODES_COUNTER}`;\n            GraphCollection.NODES_COUNTER += 1;\n        }\n        this.nodes[node.props.id] = node;\n        this.hasComputedPositions = false;\n        return node;\n    }\n\n    // Adds an edge to two existing nodes, return the edge.\n    addEdge(edgeProps, GraphEdgeClass = GraphEdge) {\n        const edge = new GraphEdgeClass(edgeProps);\n        if (edge.props.id === \"dummyID\") {\n            edge.props.id = `e-${GraphCollection.EDGES_COUNTER}`;\n            GraphCollection.EDGES_COUNTER += 1;\n        }\n        this.edges[edge.props.id] = edge;\n        this.hasComputedPositions = false;\n        return edge;\n    }\n\n\n    \n    computePositions() {\n        if (this.hasComputedPositions === true) return;\n        this.hasComputedPositions = true;\n        \n        \n        const computedNodeCenter = {}\n        const visitedNodes = {}\n        const dfs = (id) => {\n            const node = this.nodes[id];\n            if (node === undefined) {\n                console.warn(\"Node is not found in this collection: \", id);\n                return;\n            }\n            visitedNodes[id] = true;\n\n            var finalCX = 0;\n            var finalCY = 0;\n\n            const anchorToX = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).x;\n            }\n            const anchorToY = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).y;\n            }\n\n            const cxa = anchorToX(node.props.cxAnchor)\n            const cya = anchorToY(node.props.cyAnchor)\n            const la = node.props.leftAnchors.map(anchorToX)\n            const ra = node.props.rightAnchors.map(anchorToX)\n            const ua = node.props.upAnchors.map(anchorToY)\n            const da = node.props.downAnchors.map(anchorToY)\n\n            if (node.props.cx !== undefined) {\n                finalCX = node.props.cx;\n            } else if (cxa !== undefined) {\n                finalCX = cxa;\n            } else if (la.length > 0) {\n                finalCX = Math.max(...la) - node.getPeripheralOffsetByAngle(180).x;\n            } else if (ra.length > 0) {\n                finalCX = Math.min(...ra) - node.getPeripheralOffsetByAngle(0).x;\n            } else {\n                console.warn(`Missing X-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            if (node.props.cy !== undefined) {\n                finalCY = node.props.cy;\n            } else if (cya !== undefined) {\n                finalCY = cya;\n            } else if (da.length > 0) {\n                finalCY = Math.max(...da) - node.getPeripheralOffsetByAngle(270).y;\n            } else if (ua.length > 0) {\n                finalCY = Math.min(...ua) - node.getPeripheralOffsetByAngle(90).y;\n            } else {\n                console.warn(`Missing Y-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            computedNodeCenter[id] = {x:finalCX, y:finalCY};\n        };\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        for (i = 0; i < nodeIDs.length; i++) {\n            if (visitedNodes[nodeIDs[i]] === undefined) {\n                dfs(nodeIDs[i]);\n            }\n        }\n        \n        // Store the computed results.\n        this.computedNodeCenter = computedNodeCenter;\n\n        // find viewbox\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const center = this.computedNodeCenter[node.props.id];\n            node.updateViewBox(viewbox, center);\n        }        \n        this.viewbox = viewbox;\n        \n        // We should shift everything so that the \"center\" of the entire\n        // collection stays at center.\n        var shiftX = (viewbox.rx + viewbox.lx)/2;\n        var shiftY = (viewbox.ry + viewbox.ly)/2;\n        for (i = 0; i < nodeIDs.length; i++) {\n            const c = computedNodeCenter[nodeIDs[i]];\n            c.x -= shiftX;\n            c.y -= shiftY;\n        }\n        viewbox.lx -= shiftX;\n        viewbox.rx -= shiftX;\n        viewbox.ly -= shiftY;\n        viewbox.ry -= shiftY;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        this.computePositions();\n        const width = Math.max(0, this.viewbox.rx - this.viewbox.lx);\n        const height = Math.max(0, this.viewbox.ry - this.viewbox.ly);\n        const shape = new Rectangle(width, height);\n        return shape.getPeripheralOffsetByAngle(degree);\n    }\n\n    updateViewBox(viewbox, offset) {\n        this.computePositions();\n        viewbox.lx = Math.min(viewbox.lx, this.viewbox.lx + offset.x);\n        viewbox.rx = Math.max(viewbox.rx, this.viewbox.rx + offset.x);\n        viewbox.ly = Math.min(viewbox.ly, this.viewbox.ly + offset.y);\n        viewbox.ry = Math.max(viewbox.ry, this.viewbox.ry + offset.y);\n    }\n    \n    getAnchorPoint(anchorInfo, center={x:0, y:0}) {\n        if (typeof anchorInfo.at === \"string\" || anchorInfo.at.length === 1) {\n            // Fallback to default.\n            return GraphNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n        }\n\n        // Make sure we have position information.\n        this.computePositions();\n\n        // Support indirect anchorInfo: use array.\n        const at = anchorInfo.at;\n        const sub = this.nodes[at[0]];\n        const shifted =\n            {x: center.x + this.computedNodeCenter[at[0]].x,\n            y: center.y + this.computedNodeCenter[at[0]].y};\n        return sub.getAnchorPoint(Object.assign({}, anchorInfo, {at: at.slice(1)}), shifted);\n    }\n    \n    renderSVG(offset) {\n        this.computePositions();\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        var renderedNodes = [];\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const {x, y} = this.computedNodeCenter[node.props.id];\n            const center = {x: x+offset.x, y: y+offset.y};\n            renderedNodes.push(node.renderSVG(center));\n        }\n        const edgeIDs = Object.keys(this.edges);\n        var renderedEdges = [];\n        for (i = 0; i < edgeIDs.length; i++) {\n            var edge = this.edges[edgeIDs[i]];\n            renderedEdges.push(edge.renderSVG(this));\n        }\n        //console.log(renderedEdges);\n\n        return (<>\n            {renderedEdges}\n            {renderedNodes}\n        </>)\n    }\n};\n","module.exports = __webpack_public_path__ + \"static/cc-by-nc-sa-982c531432c4ad7e8dbf3cf52a1dc6d0.png\";","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\nimport { defaultNodeProps } from './display-ui/ui-defaults';\n\nclass DisplayArray extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        \n        // TODO(tmt514): find correct way to detect whether to update.\n        if (true) {\n            const data = JSON.parse(nextProps.data);\n            newState.data = data || []\n            newState.n = (nextProps.n && parseInt(nextProps.n)) || data.length\n\n            newState.ui = new GraphToSVG;\n            while (newState.data.length < newState.n) {\n                newState.data.push(\"\")\n            }\n            \n            const nodelist = [];\n            for (let i = 0; i < newState.data.length; i++) {\n                const nodeProps = {\n                    id: `arr-${i}`,\n                    text: `${newState.data[i]}`,\n                    content: newState.data[i],\n                };\n                if (i === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else {\n                    nodeProps.leftAnchors = [new AnchorInfo(`arr-${i-1}`, 0, 'boundary', 0)]\n                    nodeProps.cyAnchor = new AnchorInfo(`arr-${i-1}`, 0, 'center', 0);\n                }\n                \n                // Id corresponds to Index in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n                });\n                \n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n            \n            \n            // Fixed width by given ratio.\n            var ratios = Array(newState.n).fill(1);\n            var maxUnitWidth = -Infinity;\n            var h = -Infinity;\n            // width could be overrided by min-width property.\n            var minWidth = nextProps[\"min-width\"];\n            const shouldAdjustWidth = (nextProps.fixedwidth !== undefined\n                || nextProps[\"fixedwidth-ratios\"] !== undefined\n                || minWidth !== undefined);\n            \n            if (nextProps[\"fixedwidth-ratios\"] !== undefined) {\n                ratios = eval(`(${nextProps[\"fixedwidth-ratios\"]})`);\n                while (ratios.length < newState.n) ratios.push(1);\n            }\n            nodelist.forEach((node, idx) => {\n                maxUnitWidth = Math.max(maxUnitWidth, node.getWidth() / ratios[idx]);\n                h = Math.max(h, node.getHeight());\n            });\n            if (minWidth !== undefined) {\n                maxUnitWidth = Math.max(maxUnitWidth, parseFloat(minWidth));\n            }\n            \n            nodelist.forEach((node, idx) => {\n                const newNodeProps = {\n                    minHeight: h,\n                }\n                if (shouldAdjustWidth) {\n                    newNodeProps.minWidth = maxUnitWidth * ratios[idx];\n                }\n                node.updateProps(newNodeProps)\n            });\n        }\n        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayArray;","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\nimport { defaultNodeProps } from './display-ui/ui-defaults';\nimport DataHelper from './data-helper';\n\nclass DisplayBinaryTree extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n    \n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || {\n            structure: [],\n            value: [],\n        }\n        \n        // Generate a complete binary tree.\n        if (nextProps.complete !== undefined && nextProps.depth !== undefined) {\n            const d = parseInt(nextProps.depth);\n            const structure = [];\n            const value = [];\n            const total_nodes = (1<<d)-1;\n            for (let i = 0; i < total_nodes; i++) {\n                const l = ((i+1)*2 <= total_nodes? (i+1)*2-1 : -1);\n                const r = ((i+1)*2+1 <= total_nodes? (i+1)*2 : -1);\n                \n                structure.push([l, r])\n                value.push(`${i+1}`);\n            }\n            Object.assign(newState.data, {\n                structure: structure,\n            })\n            if (nextProps.numbered !== undefined) {\n                Object.assign(newState.data, {\n                    value: value\n                })\n            }\n        }\n        \n        const n = newState.data.structure.length;\n        newState.n = n;\n        newState.ui = new GraphToSVG();\n        const nodelist = [];\n        \n        for (let i = 0; i < n; i++) {\n            const nodeProps = {\n                id: `tree-node-${i}`,\n                text: `${newState.data.value[i]}`,\n                content: newState.data.value[i],\n            };\n            // Id corresponds to Index in the array.\n            uiStores.forEach((uiStore) => {\n                GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n            });\n            \n            const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n            nodelist.push(node);\n        }\n        \n        var nowX = 0;\n        const dfs = (i, depth) => {\n            nodelist[i].depth = depth;\n            console.log(nodelist[i]);\n            const l = newState.data.structure[i][0];\n            const r = newState.data.structure[i][1];\n            const isLeaf = (l === -1 && r === -1);\n            if (isLeaf) {\n                nodelist[i].x_pos = nowX;\n                nowX++;\n                return ;\n            }\n            var leftX = 0;\n            var rightX = 0;\n            if (l !== -1) {\n                dfs(l, depth+1);\n                leftX = nodelist[l].x_pos;\n            } else {\n                leftX = nowX;\n                nowX++;\n            }\n            if (r !== -1) {\n                dfs(r, depth+1);\n                rightX = nodelist[r].x_pos;\n            } else {\n                rightX = nowX;\n                nowX++;\n            }\n            nodelist[i].x_pos = (leftX + rightX) / 2;\n        }\n        dfs(0, 0);\n           \n        // Fixed width by given ratio.\n        var ratios = Array(newState.n).fill(1);\n        var maxUnitWidth = -Infinity;\n        var h = -Infinity;\n        // width could be overrided by min-width property.\n        var minWidth = nextProps[\"min-width\"];\n        const shouldAdjustWidth = (nextProps.fixedwidth !== undefined\n            || nextProps[\"fixedwidth-ratios\"] !== undefined\n            || minWidth !== undefined);\n        \n        if (nextProps[\"fixedwidth-ratios\"] !== undefined) {\n            ratios = eval(`(${nextProps[\"fixedwidth-ratios\"]})`);\n            while (ratios.length < newState.n) ratios.push(1);\n        }\n        nodelist.forEach((node, idx) => {\n            maxUnitWidth = Math.max(maxUnitWidth, node.getWidth() / ratios[idx]);\n            h = Math.max(h, node.getHeight());\n        });\n        if (minWidth !== undefined) {\n            maxUnitWidth = Math.max(maxUnitWidth, parseFloat(minWidth));\n        }\n        console.log(maxUnitWidth);\n        \n        nodelist.forEach((node, idx) => {\n            const newNodeProps = {\n                minHeight: h,\n                cx: (maxUnitWidth + 10) * node.x_pos,\n                cy: h*2 * node.depth,\n            }\n            console.log(node, newNodeProps);\n            if (shouldAdjustWidth) {\n                newNodeProps.minWidth = maxUnitWidth * ratios[idx];\n            }\n            node.updateProps(newNodeProps)\n        });\n        \n        const edgelist = {};\n        for (let i = 0; i < newState.data.structure.length; i++) {\n            const l = newState.data.structure[i][0];\n            const r = newState.data.structure[i][1];\n            for (let x of [l, r]) {\n                if (x !== -1) {\n                    const edgeProps = {\n                        id: `edge-${i}-${x}`,\n                        pathAnchors: [new AnchorInfo(`tree-node-${i}`, 0, 'entire-node', 0),\n                                        new AnchorInfo(`tree-node-${x}`, 0, 'entire-node', 0)],\n                    }\n                    uiStores.forEach((uiStore) => {\n                        GraphNodeUIHelper.updateNodePropsFromUIStore(edgeProps, uiStore, `[${i},${x}]`, ['all', 'edge'])\n                    });\n\n                    const edge = newState.ui.addEdge(edgeProps);\n                    edgelist[edgeProps.id] = edge;\n                }\n            }\n        }\n    \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayBinaryTree;","import React, { Component } from 'react';\nimport Display from './display';\nimport UIController from './display-ui/ui-controller';\n\nconst clone = (dictionary) => {\n    return JSON.parse(JSON.stringify(dictionary))\n}\n\nclass Algorithm extends Component {\n    constructor(props) {\n        super(props);\n        \n        const findAll = function(name) {\n            return props.children.filter((x) => x.type === name);\n        }\n        const findFirst = function(name) {\n            return findAll(name)[0];\n        }\n        const generator = findFirst(\"generator\");\n        const inputdata = findFirst(\"inputdata\");\n        const alldisplays = findAll(\"indirectdisplay\");\n        \n        // function*(input) {}\n        const code = generator\n            .props\n            .children\n            .filter((x) => x.type === \"pre\")[0]\n            .props\n            .children[0];\n        const solver = eval(\"(\" + code + \")\");\n\n        // Parse input.\n        const input = JSON.parse(inputdata.props.data);\n        \n        // Creates UI environment.\n        const ui = new UIController();\n\n        // Creates Generator and history storing all intermediate steps for the\n        // algorithm.\n        var gen = solver(input, ui);\n        var history = [clone(gen.next())];\n        var uiHistory = [ui.getSnapshot()];\n        ui.clearStyleOnce();\n\n        // Set States.\n        this.state = {\n            solver: solver,\n            input: input,\n            displays: alldisplays,\n            generator: gen,\n            stepId: 0,\n            history: history,\n            ui: ui,\n            uiHistory: uiHistory,\n        }\n        \n    }\n\n    changeStepBy(numMove) {\n        const newState = Object.assign({}, this.state);\n        newState.stepId += numMove;\n        while (newState.history.length <= newState.stepId\n            && newState.history[newState.history.length-1].done === false) {\n            const nextIter = newState.generator.next();\n            newState.history.push(clone(nextIter));\n            newState.uiHistory.push(newState.ui.getSnapshot());\n            newState.ui.clearStyleOnce();\n        }\n        newState.stepId = Math.max(0, newState.stepId);\n        newState.stepId = Math.min(newState.history.length-1, newState.stepId);\n        this.setState(newState);\n    }\n\n    render() {\n        const stepId = this.state.stepId;\n        const snapshot = this.state.history[stepId];\n        const uiSnapshot = this.state.uiHistory[stepId];\n        const displays = this.state.displays.map((e, idx) => {\n            const varname = e.props.varname;\n            const uiStore = {\n                styleRules: uiSnapshot.styleRules[varname],\n                styles: uiSnapshot.styles[varname],\n                onceStyles: uiSnapshot.onceStyles[varname],\n                annotations: uiSnapshot.annotations[varname],\n            };\n\n            return (\n                <Display\n                    key={idx}\n                    {...e.props}\n                    uiStoreFromAlgorithm={uiStore}\n                    data={JSON.stringify(snapshot.value[e.props.varname])}\n                />\n        )})\n        return (\n            <div>\n                <div className=\"has-text-centered\">\n                <button onClick={this.changeStepBy.bind(this, -1)}>Prev</button>\n                <span> Step: {this.state.stepId} </span>\n                <button onClick={this.changeStepBy.bind(this, 1)}>Next</button>\n                </div>\n                {displays}\n            </div>\n        )\n    }\n};\n\nexport default Algorithm;","export default class UIController {\n    \n    static RULES_COUNTER = 0;\n    \n    constructor() {\n        this.styleRules = {};\n        this.styles = {};\n        this.onceStyles = {};\n        this.annotations = {};\n    }\n    \n    getSnapshot() {\n        return JSON.parse(JSON.stringify(this));\n    }\n    \n    setStyle(varname, id, options) {\n        if (this.styles[varname] === undefined)\n            this.styles[varname] = {};\n        if (this.styles[varname][id] === undefined)\n            this.styles[varname][id] = {};\n        Object.assign(this.styles[varname][id], options);\n    }\n    \n    eraseStyle(varname, id, options) {\n        if (this.styles[varname] !== undefined)\n            this.styles[varname][id] = undefined;\n    }\n    \n    setStyleOnce(varname, id, options) {\n        if (this.onceStyles[varname] === undefined)\n            this.onceStyles[varname] = {};\n        if (this.onceStyles[varname][id] === undefined)\n            this.onceStyles[varname][id] = {};\n        Object.assign(this.onceStyles[varname][id], options);\n    }\n    \n    clearStyleOnce() {\n        this.onceStyles = {};\n    }\n    \n    addStyleRule(varname, apply_to, pure_predicate_fn, options) {\n        if (this.styleRules[varname] === undefined)\n            this.styleRules[varname] = {}\n        const rule_id = `ui-rule-${UIController.RULES_COUNTER}`;\n        UIController.RULES_COUNTER ++;\n        \n        this.styleRules[varname][rule_id] = {\n            apply_to: apply_to,\n            pure_predicate_fn: pure_predicate_fn.toString(),\n            options: options,\n        };\n        return rule_id;\n    }\n    \n    removeStyleRule(varname, rule_id) {\n        if (this.styleRules[varname] !== undefined) \n            this.styleRules[varname][rule_id] = undefined;\n    }\n    \n       \n};"],"sourceRoot":""}