{"componentChunkName":"component---src-components-blog-post-js","path":"/problem/icpc/asia_jakarta_2018/F","result":{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"題目敘述"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"showvariable","properties":{"varname":"description"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸入說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"輸入的第一列包含兩個正整數 $N, M$ （$1\\le N\\le 100000; 1\\le M\\le 10^9$）依序代表題目的數量與比賽的時間長度。第二列包含 $N$ 個整數 $A_i$（$1\\le A_i\\le 10^9$），第三列包含 $N$ 個整數 $B_i$（$1\\le B_i\\le 10^9$）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸出說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果不存在任何方法使得 Ayu 最終題數嚴格大於 Budi 的題數，輸出 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-1"}]},{"type":"text","value":"。否則的話輸出一個整數 $K$，然後在第二列輸出 $K$ 個嚴格遞增的數字：Ayu 只要在這些時間點戳破氣球，就可以贏過 Budi。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 1"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"4 30\n9 10 10 10\n4 10 5 10\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 1"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2\n12 19\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"5 50\n10 10 10 10 10\n15 12 19 17 20\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"5 10\n15 10 5 5 5\n9 10 10 10 10\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-1\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"OJ 連結"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://codeforces.com/gym/102001/problem/F"},"children":[{"type":"text","value":"Codeforces Gym 102001 - F"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"解法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"俗話說得好："},{"type":"element","tagName":"s","properties":{},"children":[{"type":"text","value":"氣球恆久遠，一顆永流傳。"}]},{"type":"text","value":"如果 Ayu 在 Budi 解題目解到一半的時候戳破氣球嚇嚇他，倒不如多等一下，在 Budi 即將解出來的那剎那"},{"type":"element","tagName":"s","properties":{},"children":[{"type":"text","value":"說時遲那時快"}]},{"type":"text","value":"再把氣球戳破，讓 Budi 重來感覺豈不是更好嗎！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"假設我們有個答案，那我們可以把 Budi 的解題心路歷程記錄下來，比方說（紅色的字代表被嚇到所以沒有解出該題）："}]},{"type":"text","value":"\n$$\nB_1, B_2, \\red{B_3}, \\red{B_3}, B_3, \\red{B_4}, B_4, B_5, ...\n$$\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果今天 $B_3 < B_4$，那麼 Ayu 總是可以再多等一下，讓 Budi 重做 $B_4$ 總是比重做 $B_3$ 賺更多！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以上的觀察引導我們使用「堆疊」的解法，去模擬 Ayu 的選擇，把得到的氣球花在 Budi 的哪些題目上頭。我們維護一個堆疊，從堆疊底部到頂部，永遠是「任務編號遞增、所花費時間嚴格遞減」並且紀錄有多少顆氣球花在這題上面。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以下面這個例子而言，假設 Ayu 可以在以下時間 8, 20, 40, 48, 56, 65, 109, 114, 117, 118 分別獲得氣球，那堆疊的改變看起來會像這樣："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"algorithm","properties":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tagName":"generator","properties":{},"children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"        function*(input, ui) {\n            var B = input.B;\n            var C = input.C;\n            var n = B.length;\n            var s = [];\n            var show = function(stack) {\n                return stack.map((x) => `B[${x[0]}] = ${B[x[0]]}\\n重做=${x[1]}`);\n            };\n            var bshow = function(b, s) {\n                var bmsg = [];\n                var i;\n                var v = 0;\n                for (i = 0; i < b.length; i++) {\n                    var msg = '-';\n                    v += b[i];\n                    for (j = 0; j < s.length; j++) {\n                        if (s[j][0] === i) {\n                            msg = `重做 ${s[j][1]} 次`;\n                            v += s[j][1] * b[i];\n                        }\n                    }\n                    bmsg.push(`${b[i]}\\n${msg}\\n完成時間=${v}`);\n                }\n                return bmsg;\n            };\n            var i, j;\n            for (i = 0; i < n; i++) {\n                s.push([i, C[i]]);\n                for (j = 0; j < s.length-1; j++) {\n                        ui.setStyleOnce('arr', `${j}`, {fill: 'lightyellow'});\n                        ui.setStyleOnce('B', `${s[j][0]}`, {fill: 'lightyellow'});\n                    }\n                ui.setStyleOnce('B', `${i}`, {fill: 'cyan'});\n                ui.setStyleOnce('arr', `${s.length-1}`, {fill: 'cyan'});\n                yield ({B: bshow(B,s), arr: show(s)});\n                while (s.length >= 2 &&\n                    B[s[s.length-1][0]] >=\n                    B[s[s.length-2][0]]) {\n                        s[s.length-2][1] += s[s.length-1][1];\n                        s[s.length-2][0] = s[s.length-1][0];\n                        s.pop();\n                    for (j = 0; j < s.length-1; j++) {\n                        ui.setStyleOnce('arr', `${j}`, {fill: 'lightyellow'});\n                        ui.setStyleOnce('B', `${s[j][0]}`, {fill: 'lightyellow'});\n                    }\n                    ui.setStyleOnce('B', `${i}`, {fill: 'cyan'});\n                    ui.setStyleOnce('arr', `${s.length-1}`, {fill: 'cyan'});\n                    yield ({B: bshow(B,s), arr: show(s)});\n                }\n            }\n            for (j = 0; j < s.length; j++) {\n                        ui.setStyleOnce('arr', `${j}`, {fill: 'lightyellow'});\n                        ui.setStyleOnce('B', `${s[j][0]}`, {fill: 'lightyellow'});\n                    }\n            return {B: bshow(B,s), arr: show(s)};\n        }\n        "}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"inputdata","properties":{"data":"{\"B\": [8, 10, 5, 3, 1, 9, 6, 7, 4, 2],\n               \"C\": [1, 1, 2, 1, 0, 1, 0, 0, 1, 3]}"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tagName":"indirectdisplay","properties":{"array":"","fixedwidth":"","minwidth":"30","highlightdiff":"","varname":"B"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tagName":"indirectdisplay","properties":{"array":"","fixedwidth":"","n":"5","minwidth":"30","highlightdiff":"","varname":"arr"},"children":[]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果總比賽時間 $M=119$，那麼 Ayu 能讓 Budi 在第 119 分鐘的時候還做不出最後一題，因此 Ayu 能夠獲勝。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"參考程式碼"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-cpp"]},"children":[{"type":"text","value":"#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int N, M;\n  cin.sync_with_stdio(false);\n  cin >> N >> M;\n  vector<long long> A(N), B(N);\n\n  for (int i = 0; i < N; i++) cin >> A[i];\n  for (int i = 0; i < N; i++) cin >> B[i];\n\n  // 先算出 Ayu 拿到每顆氣球的時間點，並算出 Ayu 可以解幾題。\n  int nsolved = 0;\n  for (int i = 1; i < N; i++) A[i] += A[i - 1];\n  for (int i = 0; i < N; i++) nsolved += (A[i] <= M);\n\n  // 我們目標就是要讓 Budi 解出第 nsolved 的時間嚴格大於 M。\n  long long t = 0;\n  vector<pair<int, int>> stack;\n  for (int i = 0, j = 0; i < nsolved; i++) {\n    int balloons = 0;\n    while (!stack.empty() && B[stack.back().first] <= B[i]) {\n      balloons += stack.back().second;\n      t -= stack.back().second * B[stack.back().first];\n      stack.pop_back();\n    }\n    t += B[i] * (balloons + 1);\n    while (j < nsolved && A[j] <= t) {\n      ++j;\n      ++balloons;\n      t += B[i];\n    }\n    stack.push_back(make_pair(i, balloons));\n  }\n\n  // 如果還是在 M 分鐘內解出來了，就輸出 -1。\n  if (t <= M) {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n\n  // 計算每顆氣球被戳破的時間。\n  t = 0;\n  int j = 0;\n  vector<long long> ans;\n  for (auto [i, b] : stack) {\n    while (j < i) t += B[j++];\n    for (int l = 0; l < b; l++)\n      ans.push_back(t += B[i]);\n  }\n\n  // 輸出答案。\n  while (!ans.empty() && ans.back() > M) ans.pop_back();\n  cout << ans.size() << endl;\n  for (auto x : ans) cout << x << \" \";\n  cout << endl;\n  return 0;\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"關於競程日記"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🍅 如果您想到更多有趣漂亮簡單乾淨的解法話歡迎留言給競程日記小編群！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ℹ️ 這是一篇投稿給"},{"type":"element","tagName":"a","properties":{"href":"https://www.facebook.com/%E7%AB%B6%E7%A8%8B%E6%97%A5%E8%A8%98-1514973425463954/"},"children":[{"type":"text","value":"競程日記"}]},{"type":"text","value":"的文章，歡迎大家投稿、交流與分享程式解題競賽的點點滴滴！"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"January 03, 2019","path":"/problem/icpc/asia_jakarta_2018/F","title":"Popping Balloons","description":"Ayu 和 Budi 正在一場類似 ICPC 的比賽上面決鬥。這樣的比賽題目總共有 $N$ 題，然而，參賽者比須按照指定順序依序解題。\n\nAyu 熟知她自己與 Budi 解每一題的能力，因此，Ayu 能夠事先得知兩個陣列 $A_{1, \\ldots, N}$ 以及 $B_{1, \\ldots, N}$，其中 $A_i$ 與 $B_i$ 分別表示 Ayu 和 Budi 解出第 $i$ 題所需要的時間。\n\n故事是這樣的，Ayu 知道 Budi 對突然的巨大聲響相當敏感，比方說當氣球爆炸的時刻。一旦 Budi 受到驚嚇，他手邊的工作就會立即停擺，而且當下解的題目必須**重頭開始**解。如果在恰好要解出一題的當下被嚇到，Budi 也得從頭開始才行。\n\nAyu 想利用這點勝過 Budi，她唯一能夠利用的，就是自己解出題目的當下所獲得的氣球。你可以假設 Ayu 一旦解出題目就可以立即獲得氣球，也可以立即戳破氣球（如果 Budi 同時即將解完，可憐的 Budi 就得重頭開始）。請問 Ayu 是否有戳氣球的策略使得在時間 $M$ 結束的當下，Ayu 解出的題數**嚴格大於** Budi 的呢？\n","roadmap_label_h3":null,"backlink":"/icpcblog-weekly-2019","css_title_theme":null,"css_content_theme":null,"math_font":null}}},"pageContext":{}},"staticQueryHashes":["1470849938","511501522"]}