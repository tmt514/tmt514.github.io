{"version":3,"sources":["webpack:///./src/components/markdown.js","webpack:///./src/components/theorem.js","webpack:///./src/components/include-problem.js","webpack:///./src/components/roadmaps.js","webpack:///./src/components/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/display-ui/ui-helpers.js","webpack:///./src/components/display-ui/shapes.js","webpack:///./src/components/display-ui/ui-defaults.js","webpack:///./src/components/display-ui/graph-node.js","webpack:///./src/components/display-ui/anchor-info.js","webpack:///./src/components/display-ui/graph-edge.js","webpack:///./src/components/display-ui/graph-collection.js","webpack:///./src/components/display-ui/graph-to-svg.js","webpack:///./src/components/display-ui/graph-text-node.js","webpack:///./src/components/display-ui/graph-rectanglur-node.js","webpack:///./src/components/display-array.js","webpack:///./src/components/data-helper.js","webpack:///./src/components/display-grid.js","webpack:///./src/components/display-gadgets/rectangle.js","webpack:///./src/components/display-gadgets/markers.js","webpack:///./src/components/display-linked-list.js","webpack:///./src/components/display.js","webpack:///./src/images/cc-by-nc-sa.png","webpack:///./src/components/algorithm.js","webpack:///./src/components/display-ui/ui-controller.js"],"names":["markdown","unified","use","parse","math","inlineMathDouble","rehype","options","tree","file","visit","node","hasClass","className","properties","includes","isDisplayMath","tagNmae","tagName","value","children","reactRenderer","createElement","React","remarkReactComponents","Theorem","render","val","this","props","content","Array","isArray","processSync","contents","length","react_default","a","c","undefined","title","style","justifyContent","Component","Difficulty","_ref","meta","difficulty","bgclass","isNaN","parseInt","toLowerCase","startsWith","IncludeProblem","path","code","show_solution","title_prefix","is_inline","inline","is_linkonly","notyet","gatsby_browser_entry","query","data","e","pages","edges","filter","frontmatter","page","solution","findH2Contents","regex","i","ret","recording","child","type","match","push","apply","htmlAst","map","idx","astToReact","ukey","childrenReact","Object","assign","key","ojlink","link","href","target","sollink","to","md","description","Fragment","include_problem_Difficulty","theorem","_2998057797","MyH1","MyH2","_ref2","MyH3","_ref3","MyCode","_ref4","MySVG","_ref5","width","height","viewbox","viewBox","ShowVariable","varname","Template","componentDidMount","window","MathJax","Hub","Queue","Prism","plugins","customClass","prefix","highlightAll","componentDidUpdate","ShowVariable2","post","markdownRemark","Helmet_default","backlink","date","_ShowVariable","_this","call","inheritsLoose_default","ast","modifiedAst","JSON","stringify","my_counter","formatter","transformer","t","findFirstDescendantByType","replace","forEach","roadmapTransformer","rehypeReact","components","h1","h2","h3","display","Display","display-inner","DisplayInner","mysvg","showvariable","algorithm","Algorithm","mylink","Link","include-problem","Compiler","margin","src","CCBYNCSA","maxWidth","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","GraphNodeUIHelper","updateNodePropsByStyleRules","nodeProps","styleRules","classNames","ruleIDs","keys","_i","ruleID","rule","apply_to","z","eval","pure_predicate_fn","updateNodePropsByStyles","styles","id","updateNodePropsFromUIStore","uiStore","onceStyles","combineUIHelpers","contentToOptions","_arr","_i2","nodeOptions","makeUIStores","nextProps","uistore","uiStoreFromAlgorithm","Rectangle","_proto","prototype","getPeripheralOffsetByAngle","degree","x","y","rad","Math","PI","cos","s","sin","vline","hline","Infinity","dist","min","abs","renderSVG","cx","cy","boxWidth","boxHeight","points","updateViewBox","lx","ly","rx","ry","floor","ceil","max","defaultNodeProps","text","label","font","fontColor","lineHeight","padding","minWidth","minHeight","maxHeight","boundingShapeClass","stroke","strokeWidth","strokeLinejoin","strokeLineCap","strokeDasharray","fill","cxAnchor","cyAnchor","leftAnchors","rightAnchors","upAnchors","downAnchors","defaultEdgeProps","pathAnchors","markerStart","markerEnd","markerMid","GraphNode","updateProps","newProps","getAnchorPoint","anchorInfo","center","at","angle","ed","extraDistance","offset","viewboxToBeUpdated","getWidth","getHeight","resetAnchors","positionalProps","AnchorInfo","who","GraphEdge","graphCollection","nodeSet","nodes","computedNodeCenter","fromAnchor","toAnchor","fromNode","toNode","fromCenter","toCenter","dir","atan2","console","log","GraphCollection","_GraphNode","hasComputedPositions","addNode","GraphNodeClass","NODES_COUNTER","addEdge","edgeProps","GraphEdgeClass","edge","EDGES_COUNTER","computePositions","_this2","visitedNodes","dfs","finalCX","finalCY","anchorToX","anchorToY","cxa","cya","la","ra","ua","da","warn","nodeIDs","shiftX","shiftY","sub","shifted","slice","renderedNodes","_this$computedNodeCen","edgeIDs","renderedEdges","GraphToSVG","graph","markerStore","getMarkersFromEdgeProps","markers","_iterator","_isArray","Symbol","iterator","next","done","marker","w","h","GraphTextNode","Text","rect","textLines","split","concat","getTextWidth","ctx","hiddenCanvas","document","getContext","measureText","_proto2","getSize","textLineHeight","textsvgs","startY","dominantBaseline","textAnchor","GraphRectangularNode","innerNode","boundingShape","getBoundingShape","paddingX","paddingY","GraphRectangularTextNode","_GraphRectangularNode","hasTextChanged","GraphArrayNode","_GraphRectangularNode2","collection","lastNode","nodeOrText","dataNodes","_proto3","DisplayArray","_Component","state","getDerivedStateFromProps","prevState","newState","uiStores","ui","nodelist","_loop","newNodeProps","fixedwidth","DataHelper","getDataFromProps","DisplayGrid","n_row","n_col","repeat","_loop2","j","notext","Quadrant","clip_id","random","toString","substring","getBoundaryPaths","parseFloat","x1","y1","x2","y2","getPath","cos_s","sin_s","cos_e","sin_e","join","b","clipPath","defaultMarkerProps","orient","Marker","markerCircle","markerWidth","markerHeight","refX","refY","markerTriangle","DisplayLinkedList","isDoublyLinkedList","double","isCircularLinkedList","circular","ptrSlot","contentArray","backedgeProps","array","display_array","grid","display_grid","display_linked_list","color","_Component2","arguments","quadrant","rectangle_Quadrant","p","clone","dictionary","findAll","name","findFirst","generator","inputdata","alldisplays","solver","input","UIController","gen","history","uiHistory","getSnapshot","clearStyleOnce","displays","stepId","changeStepBy","numMove","nextIter","setState","snapshot","uiSnapshot","annotations","react__WEBPACK_IMPORTED_MODULE_5___default","_display__WEBPACK_IMPORTED_MODULE_6__","onClick","bind","setStyle","eraseStyle","setStyleOnce","addStyleRule","rule_id","RULES_COUNTER","removeStyleRule"],"mappings":"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","file":"component---src-components-blog-post-js-e7ddfc1903f98ed493e3.js","sourcesContent":["import React, { Component } from 'react'\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport math from 'remark-math'\nimport rehype from 'remark-rehype'\nimport reactRenderer from 'rehype-react'\nimport visit from 'unist-util-visit'\n\n\nconst addDollarSignToMath = (options) => {\n    function transformer(tree, file) {\n        visit(tree, 'element', function(node) {\n            const hasClass = (node, className) => {\n                return node.properties.className && node.properties.className.includes(className)\n            }\n            const isDisplayMath = hasClass(node, \"inlineMathDouble\") ||\n            (node.tagNmae === \"div\" && hasClass(node, 'math'))\n            const isInlineMath =\n            node.tagName === \"span\" && hasClass(node, \"inlineMath\") && !isDisplayMath\n            \n            if (isInlineMath) {\n                // handle inline math\n                const value = node.children[0].value\n                node.children[0].value = '$' + value + '$'\n            } else if (isDisplayMath) {\n                // handle display math\n                const value = node.children[0].value\n                node.children[0].value = '$$' + value + '$$'\n            }\n        })\n    }\n    return transformer\n}\n\nconst markdown = unified()\n.use(parse)\n.use(math, {\n    inlineMathDouble: true,\n})\n.use(rehype)\n.use(addDollarSignToMath)\n.use(reactRenderer,\n    {\n        createElement: React.createElement,\n        remarkReactComponents: {\n        },\n    })\n\nexport default markdown;","import React, {Component} from 'react';\n\nimport markdown from './markdown'\n\nclass Theorem extends Component {\n    render() {\n        const val = this.props.children;\n        // This value could be either a string, or a parsed children array from remark.\n        // We do nothing if it's already parsed.\n        var content = val;\n        if (Array.isArray(content) === false) {\n            content = markdown.processSync(val).contents;\n        }\n        if (Array.isArray(content) === true && content.length === 1) {\n            content = markdown.processSync(content[0]).contents;\n        }\n        return (\n        <div className={`message ${this.props.c||\"is-warning\"}`}>\n        {\n            this.props.title !== undefined\n            && (\n                <div className=\"message-header\" style={{justifyContent: 'flex-start'}}>\n                {this.props.title}\n                </div>\n            )\n        }\n        <div className=\"message-body\">\n        {content}\n        </div></div>\n        )\n        \n    }\n};\n\nexport default Theorem;","import React, {Component} from 'react'\nimport Theorem from './theorem'\nimport {StaticQuery, graphql, Link} from 'gatsby'\nimport visit from 'unist-util-visit'\n\nimport markdown from './markdown'\n\nconst Difficulty = ({ meta }) => {\n    var difficulty = meta.difficulty===null? \"0\": meta.difficulty;\n    var bgclass = \"\";\n    const numToDifficulty = [\"Unknown\",\n        \"Eew\",\n        \"Easy-Peasy\",\n        \"Easy\",\n        \"Medium\",\n        \"Meaningful\",\n        \"Medium\",\n        \"Hard\",\n        \"Hazzard\",\n        \"Horrible\",\n        \"Hercules\",\n    ];\n    if (!isNaN(difficulty)) {\n        const d = parseInt(difficulty);\n        difficulty = numToDifficulty[d];\n    }\n    \n    if (difficulty.toLowerCase().startsWith(\"e\")) {\n        bgclass = \"is-success\"\n    } else if (difficulty.toLowerCase().startsWith(\"m\")) {\n        bgclass = \"is-warning\"\n    } else if (difficulty.toLowerCase().startsWith(\"h\")) {\n        bgclass = \"is-danger\"\n    }\n    return (<span className={`tag ${bgclass} is-rounded`}><b>{difficulty}</b></span>);\n}\n\nconst findH2Contents = (node, regex) => {\n    const { children } = node;\n    const ret = [];\n    var recording = false;\n    \n    var i;\n    for (i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.type === \"element\") {\n            if (child.tagName === \"h2\") {\n                if (child.children !== undefined &&\n                    child.children[0] !== undefined &&\n                    child.children[0].value.match(regex) !== null) {\n                    recording = true;\n                    ret.push(child);\n                } else {\n                    recording = false;\n                }\n            } else if (recording === true) {\n                ret.push(child);\n            } else {\n                ret.push(...findH2Contents(child, regex))\n            }\n        } else if (recording === true) {\n            ret.push(child);\n        }\n    }\n    return ret\n}\n\nconst astToReact = (node, ukey) => {\n    const { children } = node;\n    if (node.type === \"text\") return node.value;\n\n    const childrenReact = children.map((c, idx) => astToReact(c, `${ukey}-${idx}`));\n    const props = Object.assign({}, node.properties)\n\n    if (node.tagName === \"h2\") {\n        props.className = (props.className || \"\") + \" title is-4\";\n    }\n    props.key = (props.key||ukey);\n    \n    const reactNode = React.createElement(node.tagName, props, childrenReact);\n    return reactNode;\n}\n\nexport default class IncludeProblem extends Component {\n    render() {\n        const path = this.props.path;\n        const code = this.props.code;\n        const show_solution = (this.props[\"show-solution\"]!== undefined);\n        const title_prefix = (this.props[\"title-prefix\"] || \"例題：\");\n        const is_inline = (this.props.inline !== undefined);\n        const is_linkonly = (this.props[\"linkonly\"] !== undefined);\n        \n        if (this.props.notyet !== undefined) {\n            return (<span>{this.props.path} 這題還沒準備好</span>)\n        }\n\n        return (<StaticQuery\n            query={graphql`\n            query allpages {\n                pages: allMarkdownRemark {\n                    edges {\n                        node {   \n                            frontmatter {\n                                title\n                                category\n                                path\n                                date\n                                _PARENT\n                                description\n                                link\n                                code\n                                difficulty\n                                oj\n                            }\n                            htmlAst\n                        }\n                     \n                    }\n                }\n            }`}\n\n            render={(data) => {\n                \n                const e = data.pages.edges.filter((e) => {return (\n                    e.node.frontmatter.path === path ||\n                    e.node.frontmatter.code === code) });\n                \n                if (e.length === 0) {\n                    return (<span>找不到題目</span>);\n                }\n                \n                const page = e[0].node;\n                const meta = page.frontmatter;\n                const solution = show_solution === true? \n                    findH2Contents(page.htmlAst, /(題解)|(Solution)/).map((e, idx) => astToReact(e, `T${idx}`))\n                    : \"\";\n                const ojlink = meta.link? (<a href={meta.link} className=\"open-op\" target=\"_blank\">{\" \"}<i className=\"fas fa-external-link-alt\"></i></a>):\"\";\n                const sollink = (<Link to={meta.path} className=\"open-sol\">{\" \"}<i className=\"far fa-lightbulb\"></i></Link>);\n                const md = markdown.processSync(meta.description).contents;\n                \n                // link mode\n                if (is_linkonly === true) {\n                    return (<>\n                        <Difficulty meta={meta} />{\" \"}\n                        {title_prefix}{meta.title}\n                        {ojlink}{sollink}{\" \"}\n                    </>)\n                }\n                // inline mode\n                if (is_inline === true) {\n                    return (<>\n                        <b>{meta.title}</b>\n                        {ojlink}{sollink}{\" \"}\n                        {md}\n                    </>)\n                }\n                // block mode\n                return (<>\n                    <h2 className=\"title is-4\">{title_prefix}{meta.title}{ojlink}</h2>\n                    <Theorem\n                        c=\"is-info\"\n                    >{meta.description}</Theorem>\n                    <p></p>\n                    {solution}\n                    </>\n                    )\n            }}\n            />)\n    }\n} ","import React, {Component} from 'react';\n\nimport markdown from './markdown'\n\nconst findFirstDescendantByType = (node, type) => {\n    if (node.type === type) return node;\n    const {children} = node;\n    if (children !== undefined) {\n        for (var i = 0; i < children.length; i++) {\n            const t = findFirstDescendantByType(children[i], type);\n            if (t !== null) return t;\n        }\n    }\n    return null;\n}\n\nexport const roadmapTransformer = function(options) {\n    if (options.frontmatter !== undefined && options.frontmatter[\"roadmap_label_h3\"] !== null) {\n        var my_counter = 0;\n        const formatter = options.frontmatter[\"roadmap_label_h3\"]\n        function transformer(node, file) {\n            const {type, tagName, children} = node;\n            if (type === \"element\" && tagName === \"h3\") {\n                const t = findFirstDescendantByType(node, 'text')\n                if (t !== null) {\n                    my_counter += 1\n                    t.value = formatter.replace(/###/, `${my_counter}`) + t.value;\n                }\n            } else if (children) {\n                children.forEach(transformer);\n            }\n        }\n        return transformer;\n    }\n    return () => {};\n};\n\nclass RoadmapSectionTitle extends Component {\n    render() {\n        return (<h3></h3>);\n    }\n};\n\nexport default RoadmapSectionTitle;","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport {graphql, Link} from 'gatsby';\nimport rehypeReact from 'rehype-react';\nimport Prism from 'prismjs';\n\nimport 'prismjs/plugins/custom-class/prism-custom-class.js';\nimport 'prismjs/components/prism-c.js';\nimport 'prismjs/components/prism-cpp.js';\nimport './prism-tomorrow.css';\n\n\nimport \"bulma/css/bulma.css\"\n\nimport CCBYNCSA from '../images/cc-by-nc-sa.png';\nimport Display, {DisplayInner} from './display';\nimport Theorem from './theorem';\nimport Algorithm from './algorithm';\n\nimport IncludeProblem from './include-problem';\nimport { roadmapTransformer } from './roadmaps';\n\nimport markdown from './markdown';\n\n\nconst MyH1 = ({ children }) => (\n  <h1 className=\"title is-3\">{children}</h1>\n)\nconst MyH2 = ({ children }) => (\n  <h1 className=\"title is-4\">{children}</h1>\n)\nconst MyH3 = ({ children }) => (\n  <h1 className=\"title is-5\">{children}</h1>\n)\n\nconst MyCode = ({ className, children }) => {\n  return (<code className={className}>{children}</code>)\n}\n\nconst MySVG = ({ width, height, viewbox, children }) => {\n  return (<svg width={width} height={height} viewBox={viewbox}>{children}</svg>)\n}\n\nclass ShowVariable extends Component {\n  render() {\n    const frontmatter = this.frontmatter || {};\n    const varname = this.props.varname;\n    const val = frontmatter[varname]\n    return (<div>{markdown.processSync(val).contents}</div>);\n  }\n};\n\nclass Template extends Component {\n  componentDidMount() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  componentDidUpdate() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  render() {\n    const data = this.props.data;\n    const post = data.markdownRemark;\n\n    const statefulRenderAst = (frontmatter) => {\n      class ShowVariable2 extends ShowVariable {\n        constructor() {\n          super()\n          this.frontmatter = frontmatter;\n        }\n      }\n      \n      return (ast) => {\n        const modifiedAst = JSON.parse(JSON.stringify(ast));\n        roadmapTransformer({frontmatter: frontmatter})(modifiedAst);\n        return new rehypeReact({\n          createElement: React.createElement,\n          components: {\n            h1: MyH1,\n            h2: MyH2,\n            h3: MyH3,\n            code: MyCode,\n            display: Display,\n            \"display-inner\": DisplayInner, \n            mysvg: MySVG,\n            showvariable: ShowVariable2,\n            theorem: Theorem,\n            algorithm: Algorithm,\n            mylink: Link,\n            \"include-problem\": IncludeProblem,\n          }\n        }).Compiler(modifiedAst);\n      }\n    }\n\n    return (\n      <div>\n          <Helmet title={`CodeStack - ${post.frontmatter.title}`} />\n          <section className=\"hero is-dark\">\n          <div className=\"hero-body\">\n          <div className=\"container\">\n          <span className=\"is-pulled-right\">\n          <Link to={post.frontmatter.backlink || \"/blog\"}>\n          <span className=\"icon has-text-warning\">\n            <i className=\"fas fa-lg fa-home\"></i>\n            </span> 返回\n          </Link>\n          </span>\n          <Link to={post.frontmatter.path}>\n          <h1 className=\"title\">{post.frontmatter.title}</h1>\n          <h2 className=\"subtitle\">{post.frontmatter.date}</h2>\n          </Link>\n          </div>\n          </div>\n          </section>\n          <section className=\"section\">\n          <div className=\"container\">\n          <div className=\"content\">\n          { statefulRenderAst(post.frontmatter)(post.htmlAst) }\n          </div>\n          </div>\n          </section>\n          <footer className=\"footer\">\n          <div className=\"content\">\n          <div className=\"is-flex is-vcentered is-centered\">\n          <img style={{height:\"32px\", margin:\"10px\"}} src={ CCBYNCSA } /> \n          <p style={{maxWidth:\"600px\"}}>\n          本文由<b>卡恩</b>(tmt514)撰寫。\n          本站使用 <a href=\"https://www.gatsbyjs.org/\">GasbyJS</a> 搭配 {}\n          <a href=\"https://bulma.io/\">Bulma</a> 製作，其原始碼為 MIT 授權。\n          網站內容除了題源以外，若無特別說明皆為創用 CC-BY-NC-SA 4.0 授權。\n          題源部份若有版權爭議還請與我聯繫，感恩。\n          </p>\n          </div>\n          </div>\n          </footer>\n      </div>\n    );\n  }\n}\nexport default Template;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        description\n        roadmap_label_h3\n        backlink\n      }\n    }\n  }\n`\n;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// Helper class of functions on updating ui.\nexport class GraphNodeUIHelper {\n    static updateNodePropsByStyleRules(nodeProps, styleRules, classNames) {\n        if (styleRules === undefined) return;\n        const ruleIDs = Object.keys(styleRules);\n        for (let ruleID of ruleIDs) {\n            const rule = styleRules[ruleID];\n            if (classNames.includes(rule.apply_to)) {\n                const z = eval('((' + rule.pure_predicate_fn + ')(nodeProps))');\n                if (z === true) {\n                    Object.assign(nodeProps, rule.options||{});\n                }\n            }\n        }\n    }\n    static updateNodePropsByStyles(nodeProps, styles, id) {\n        if (styles === undefined) return;\n        Object.assign(nodeProps, styles[id]||{});\n    }\n    static updateNodePropsFromUIStore(nodeProps, uiStore, id, classNames) {\n        if (uiStore === undefined) return;\n        \n        // StyleRules\n        GraphNodeUIHelper.updateNodePropsByStyleRules(nodeProps, uiStore.styleRules, classNames);\n        \n        // Styles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.styles, id);\n        \n        // OnceStyles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.onceStyles, id);\n    }\n}\n\n\nexport function combineUIHelpers(props) {\n    const uiStore = {\n        styleRules: {},\n    }\n    const contentToOptions = eval('('+(props[\"uihelper-content-map\"]||\"{}\")+')')\n    for (var content of Object.keys(contentToOptions)) {\n        uiStore.styleRules[`content-rule-${content}`] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => {return nodeProps.content === '${content}'}`,\n            options: contentToOptions[content],\n        }\n    }\n\n    \n    if (props[\"uihelper-node-style\"] !== undefined) {\n        const nodeOptions = eval('('+(props[\"uihelper-node-style\"]||\"{}\")+')')\n        uiStore.styleRules['all-node-style'] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => true`,\n            options: nodeOptions,\n        }\n    }\n    return uiStore;\n}\n\nexport function makeUIStores(nextProps) {\n    return [\n        combineUIHelpers(nextProps),\n        eval(`(` + nextProps.uistore + `)`),\n        nextProps.uiStoreFromAlgorithm];\n}\n\nexport default combineUIHelpers;","import React from 'react';\n\nexport class Rectangle {\n\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        if (degree === 0) return {x: this.width/2, y: 0};\n        if (degree === 90) return {x: 0, y: this.height/2};\n        if (degree === 180) return {x: -this.width/2, y: 0};\n        if (degree === 270) return {x: 0, y: -this.height/2};\n\n        const rad = degree / 180.0 * Math.PI;\n        const c = Math.cos(rad);\n        const s = Math.sin(rad);\n        var vline = this.width/2;\n        var hline = this.height/2;\n        vline = (c === 0? Infinity: vline / c);\n        hline = (s === 0? Infinity: hline / s);\n        const dist = Math.min(Math.abs(vline), Math.abs(hline));\n        return {x: c*dist, y: s*dist}\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        return (<polyline\n            points={`${cx-boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy-boxHeight}`}\n            />)\n    }\n\n    updateViewBox(viewbox, {x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        var lx = cx-boxWidth;\n        var ly = cy-boxHeight;\n        var rx = cx+boxWidth;\n        var ry = cy+boxHeight;\n        lx = Math.floor(lx);\n        ly = Math.floor(ly);\n        rx = Math.ceil(rx);\n        ry = Math.ceil(ry);\n        \n        viewbox.lx = Math.min(viewbox.lx, lx);\n        viewbox.ly = Math.min(viewbox.ly, ly);\n        viewbox.rx = Math.max(viewbox.rx, rx);\n        viewbox.ry = Math.max(viewbox.ry, ry);\n    }\n};\n","import { Rectangle } from './shapes'\n\nexport const defaultLineHeight = 16;\n\nexport const defaultNodeProps = {\n    id: \"dummyID\",\n\n    // Defines contents.\n    text: \"\",\n    label: null,\n    font: \"12pt Roboto\",\n    fontColor: undefined,\n    lineHeight: 16,\n    padding: 8,\n\n    // Box Size\n    minWidth: undefined,\n    minHeight: undefined,\n    maxWidth: undefined,\n    maxHeight: undefined,\n\n    // Describes the surrounding shape.\n    boundingShapeClass: Rectangle,\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: \"miter\",\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: \"none\",\n\n    // Handles position.\n    cx: undefined, // X-coordinate for the center.\n    cy: undefined, // Y-coordinate for the center.\n\n    cxAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"center\", extraDistance: 123 }\n    cyAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"boundary\", extraDistance: 123 }\n    leftAnchors: [],\n    rightAnchors: [],\n    upAnchors: [],\n    downAnchors: [],\n    // TODO(tmt514): rotatedAnchors?\n}\n\nexport const defaultEdgeProps = {\n    id: \"dummyID\",\n    \n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: undefined,\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: undefined,\n    \n    pathAnchors: [],\n\n    markerStart: undefined,\n    markerEnd: undefined,\n    markerMid: undefined,\n}","import React from 'react';\nimport { defaultLineHeight, defaultNodeProps } from './ui-defaults'\n\nexport default class GraphNode {\n    constructor(props) {\n        this.props = Object.assign({}, defaultNodeProps)\n        this.props = Object.assign(this.props, props)\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        Object.assign(this.props, newProps);\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        throw \"Not Implemented\";\n    }\n    \n    // Computes the anchor point by anchor information.\n    getAnchorPoint(anchorInfo, center={x: 0, y: 0}) {\n\n        // Handle single array wrapper.\n        // This enables indirect access for GraphCollections.\n        var at = anchorInfo.at;\n        if (Array.isArray(at) === true) {\n            at = at[0];\n        }\n\n        // Helper function to compute anchor to offset.\n        var angle = anchorInfo.angle || 0;\n        var rad = anchorInfo.angle / 180.0 * Math.PI;\n        var ed = anchorInfo.extraDistance || 0;\n        \n        var cx = center.x;\n        var cy = center.y;\n        if (at === \"boundary\") {\n            const offset = this.getPeripheralOffsetByAngle(angle);\n            cx += offset.x;\n            cy += offset.y;\n        }\n        \n        if (anchorInfo.offset !== undefined) {\n            cx += anchorInfo.offset.x;\n            cy += anchorInfo.offset.y;\n        }\n\n        cx += Math.cos(rad) * ed;\n        cy += Math.sin(rad) * ed;\n        return {x:cx, y:cy}\n    }\n    \n    // Visitor pattern...?\n    updateViewBox(viewboxToBeUpdated, offset) {\n        throw \"Not Implemented\";\n    }\n    \n    // Given the transition offsets {x, y}.\n    renderSVG(offset) {\n        throw \"Not Implemented\";\n    }\n\n    getWidth() {\n        return this.getPeripheralOffsetByAngle(0).x - this.getPeripheralOffsetByAngle(180).x\n    }\n    getHeight() {\n        return this.getPeripheralOffsetByAngle(90).y - this.getPeripheralOffsetByAngle(270).y\n    }\n    \n    // Helper function that resets anchor functions correctly.\n    resetAnchors() {\n        const positionalProps = [\"cx\", \"cy\", \"cxAnchor\", \"cyAnchor\"];\n        for (let key of positionalProps) {\n            this.props[key] = undefined;\n        }\n        Object.assign(this.props, {\n            leftAnchors: [],\n            rightAnchors: [],\n            upAnchors: [],\n            downAnchors: [],\n        });\n    }\n};\n","export default class AnchorInfo {\n    constructor(who, angle, at, extraDistance, offset) {\n        this.who = who;\n        this.angle = angle;\n        this.at = at;\n        this.extraDistance = extraDistance;\n        this.offset = offset;\n    }\n};\n\n","import React from 'react'\n\nimport AnchorInfo from './anchor-info';\nimport { defaultEdgeProps } from './ui-defaults';\n\nexport default class GraphEdge {\n    constructor(props) {\n        this.props = Object.assign({}, defaultEdgeProps, props);\n    }\n    \n    renderSVG(graphCollection) {\n        var i;\n        var d = [];\n        const nodeSet = graphCollection.nodes;\n        const computedNodeCenter = graphCollection.computedNodeCenter;\n        for (i = 0; i+1 < this.props.pathAnchors.length; i++) {\n            // \"entire-node\"\n            const fromAnchor = Object.assign({}, this.props.pathAnchors[i]);\n            const toAnchor = Object.assign({}, this.props.pathAnchors[i+1]);\n\n            const fromNode = nodeSet[fromAnchor.who];\n            const toNode = nodeSet[toAnchor.who];\n\n            var fromCenter = (fromAnchor.at === \"entire-node\"?\n                computedNodeCenter[fromNode.props.id] :\n                fromNode.getAnchorPoint(fromAnchor, computedNodeCenter[fromNode.props.id]))\n\n            var toCenter = (toAnchor.at === \"entire-node\"?\n                computedNodeCenter[toNode.props.id] :\n                toNode.getAnchorPoint(toAnchor, computedNodeCenter[toNode.props.id]))\n            \n            const dir = {x: toCenter.x - fromCenter.x, y: toCenter.y - fromCenter.y};\n            const degree = Math.atan2(dir.y, dir.x) * 180 / Math.PI;\n            \n            if (fromAnchor.at === \"entire-node\") {\n                fromAnchor.angle = degree;\n                fromAnchor.at = \"boundary\";\n                d.push([\"M\", fromNode.getAnchorPoint(fromAnchor, fromCenter)]);\n            } else if (i === 0) {\n                d.push([\"M\", fromCenter]);\n            } else {\n                // do nothing when i > 0.\n            }\n\n            if (toAnchor.at === \"entire-node\") {\n                toAnchor.angle = 180+degree;\n                toAnchor.at = \"boundary\";\n                d.push([\"L\", toNode.getAnchorPoint(toAnchor, toCenter)]);\n            } else {\n                d.push([\"L\", toCenter]);\n            }\n            \n        }\n\n        var s = \"\";\n        for (i = 0; i < d.length; i++) {\n            s += `${d[i][0]} ${d[i][1].x} ${d[i][1].y} `;\n        }\n        \n        const style = {\n            stroke: this.props.stroke,\n            strokeWidth: this.props.strokeWidth,\n            fill: this.props.fill,\n        }\n        console.log(this.props)\n        if (this.props.markerStart !== undefined) style.markerStart = `url(#${this.props.markerStart.props.id})`\n        if (this.props.markerMid !== undefined) style.markerMid = `url(#${this.props.markerMid.props.id})`\n        if (this.props.markerEnd !== undefined) style.markerEnd = `url(#${this.props.markerEnd.props.id})`\n        console.log(style)\n        return (<path key={this.props.id} d={s} style={style}></path>);\n    }\n}\n","import React from 'react'\nimport GraphNode from './graph-node';\nimport GraphEdge from './graph-edge';\nimport { Rectangle } from './shapes';\n\nexport default class GraphCollection extends GraphNode {\n    static NODES_COUNTER = 0;\n    static EDGES_COUNTER = 0;\n    constructor(props) {\n        super(props);\n        this.nodes = {};\n        this.edges = {};\n        this.hasComputedPositions = false;\n    }\n\n    // Adds a new node to the graph by props, return the node.\n    addNode(nodeProps, GraphNodeClass = GraphNode) {\n        // If the input is already a node object, just added it into the dictionary.\n        if (nodeProps instanceof GraphNode) {\n            this.nodes[nodeProps.props.id] = nodeProps;\n            this.hasComputedPositions = false;\n            return nodeProps;\n        }\n        \n        // Otherwise, create a new node.\n        const node = new GraphNodeClass(nodeProps);\n        if (node.props.id === \"dummyID\") {\n            node.props.id = `n-${GraphCollection.NODES_COUNTER}`;\n            GraphCollection.NODES_COUNTER += 1;\n        }\n        this.nodes[node.props.id] = node;\n        this.hasComputedPositions = false;\n        return node;\n    }\n\n    // Adds an edge to two existing nodes, return the edge.\n    addEdge(edgeProps, GraphEdgeClass = GraphEdge) {\n        const edge = new GraphEdgeClass(edgeProps);\n        if (edge.props.id === \"dummyID\") {\n            edge.props.id = `e-${GraphCollection.EDGES_COUNTER}`;\n            GraphCollection.EDGES_COUNTER += 1;\n        }\n        this.edges[edge.props.id] = edge;\n        this.hasComputedPositions = false;\n        return edge;\n    }\n\n\n    \n    computePositions() {\n        if (this.hasComputedPositions === true) return;\n        this.hasComputedPositions = true;\n        \n        \n        const computedNodeCenter = {}\n        const visitedNodes = {}\n        const dfs = (id) => {\n            const node = this.nodes[id];\n            if (node === undefined) {\n                console.warn(\"Node is not found in this collection: \", id);\n                return;\n            }\n            visitedNodes[id] = true;\n\n            var finalCX = 0;\n            var finalCY = 0;\n\n            const anchorToX = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).x;\n            }\n            const anchorToY = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).y;\n            }\n\n            const cxa = anchorToX(node.props.cxAnchor)\n            const cya = anchorToY(node.props.cyAnchor)\n            const la = node.props.leftAnchors.map(anchorToX)\n            const ra = node.props.rightAnchors.map(anchorToX)\n            const ua = node.props.upAnchors.map(anchorToY)\n            const da = node.props.downAnchors.map(anchorToY)\n\n            if (node.props.cx !== undefined) {\n                finalCX = node.props.cx;\n            } else if (cxa !== undefined) {\n                finalCX = cxa;\n            } else if (la.length > 0) {\n                finalCX = Math.max(...la) - node.getPeripheralOffsetByAngle(180).x;\n            } else if (ra.length > 0) {\n                finalCX = Math.min(...ra) - node.getPeripheralOffsetByAngle(0).x;\n            } else {\n                console.warn(`Missing X-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            if (node.props.cy !== undefined) {\n                finalCY = node.props.cy;\n            } else if (cya !== undefined) {\n                finalCY = cya;\n            } else if (da.length > 0) {\n                finalCY = Math.max(...da) - node.getPeripheralOffsetByAngle(270).y;\n            } else if (ua.length > 0) {\n                finalCY = Math.min(...ua) - node.getPeripheralOffsetByAngle(90).y;\n            } else {\n                console.warn(`Missing Y-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            computedNodeCenter[id] = {x:finalCX, y:finalCY};\n        };\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        for (i = 0; i < nodeIDs.length; i++) {\n            if (visitedNodes[nodeIDs[i]] === undefined) {\n                dfs(nodeIDs[i]);\n            }\n        }\n        \n        // Store the computed results.\n        this.computedNodeCenter = computedNodeCenter;\n\n        // find viewbox\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const center = this.computedNodeCenter[node.props.id];\n            node.updateViewBox(viewbox, center);\n        }        \n        this.viewbox = viewbox;\n        \n        // We should shift everything so that the \"center\" of the entire\n        // collection stays at center.\n        var shiftX = (viewbox.rx + viewbox.lx)/2;\n        var shiftY = (viewbox.ry + viewbox.ly)/2;\n        for (i = 0; i < nodeIDs.length; i++) {\n            const c = computedNodeCenter[nodeIDs[i]];\n            c.x -= shiftX;\n            c.y -= shiftY;\n        }\n        viewbox.lx -= shiftX;\n        viewbox.rx -= shiftX;\n        viewbox.ly -= shiftY;\n        viewbox.ry -= shiftY;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        this.computePositions();\n        const width = Math.max(0, this.viewbox.rx - this.viewbox.lx);\n        const height = Math.max(0, this.viewbox.ry - this.viewbox.ly);\n        const shape = new Rectangle(width, height);\n        return shape.getPeripheralOffsetByAngle(degree);\n    }\n\n    updateViewBox(viewbox, offset) {\n        this.computePositions();\n        viewbox.lx = Math.min(viewbox.lx, this.viewbox.lx + offset.x);\n        viewbox.rx = Math.max(viewbox.rx, this.viewbox.rx + offset.x);\n        viewbox.ly = Math.min(viewbox.ly, this.viewbox.ly + offset.y);\n        viewbox.ry = Math.max(viewbox.ry, this.viewbox.ry + offset.y);\n    }\n    \n    getAnchorPoint(anchorInfo, center={x:0, y:0}) {\n        if (typeof anchorInfo.at === \"string\" || anchorInfo.at.length === 1) {\n            // Fallback to default.\n            return GraphNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n        }\n\n        // Make sure we have position information.\n        this.computePositions();\n\n        // Support indirect anchorInfo: use array.\n        const at = anchorInfo.at;\n        const sub = this.nodes[at[0]];\n        const shifted =\n            {x: center.x + this.computedNodeCenter[at[0]].x,\n            y: center.y + this.computedNodeCenter[at[0]].y};\n        return sub.getAnchorPoint(Object.assign({}, anchorInfo, {at: at.slice(1)}), shifted);\n    }\n    \n    renderSVG(offset) {\n        this.computePositions();\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        var renderedNodes = [];\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const {x, y} = this.computedNodeCenter[node.props.id];\n            const center = {x: x+offset.x, y: y+offset.y};\n            renderedNodes.push(node.renderSVG(center));\n        }\n        const edgeIDs = Object.keys(this.edges);\n        var renderedEdges = [];\n        for (i = 0; i < edgeIDs.length; i++) {\n            var edge = this.edges[edgeIDs[i]];\n            renderedEdges.push(edge.renderSVG(this));\n        }\n        //console.log(renderedEdges);\n\n        return (<>\n            {renderedEdges}\n            {renderedNodes}\n        </>)\n    }\n};\n","import React from 'react'\nimport GraphCollection from './graph-collection'\n\n\nclass GraphToSVG {\n    constructor() {\n        this.graph = new GraphCollection()\n        this.markerStore = {}\n    }\n\n    addNode(nodeProps, GraphNodeClass) {\n        return this.graph.addNode(nodeProps, GraphNodeClass)\n    }\n\n    // Helper functions that extract markers from edge props.\n    static getMarkersFromEdgeProps(edgeProps) {\n        var markers = []\n        if (edgeProps.markerStart !== undefined) markers.push(edgeProps.markerStart);\n        if (edgeProps.markerMid !== undefined) markers.push(edgeProps.markerMid);\n        if (edgeProps.markerEnd !== undefined) markers.push(edgeProps.markerEnd);\n        return markers;\n    }\n\n    addEdge(edgeProps, GraphEdgeClass) {\n        for (let marker of GraphToSVG.getMarkersFromEdgeProps(edgeProps)) {\n            this.markerStore[marker.props.id] = marker;\n        }\n        return this.graph.addEdge(edgeProps, GraphEdgeClass)\n    }\n\n    renderSVG() {\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        \n        this.graph.updateViewBox(viewbox, {x: 0, y: 0})\n        \n        // Adds some paddings.\n        viewbox.lx -= 10;\n        viewbox.ly -= 10;\n        viewbox.rx += 10;\n        viewbox.ry += 10;\n        \n        const w = Math.min(900, viewbox.rx - viewbox.lx);\n        const h = Math.min(700, viewbox.ry - viewbox.ly);\n        \n        // Render all markers.\n        const markers = Object.keys(this.markerStore).map((id) => {\n            return this.markerStore[id].renderSVG()\n        })\n        return (<svg width={w} height={h} style={{maxWidth:\"100%\"}} viewBox={`${viewbox.lx} ${viewbox.ly} ${viewbox.rx - viewbox.lx} ${viewbox.ry - viewbox.ly}`}>\n            {markers.length > 0 && (<defs>{markers}</defs>)}\n            {this.graph.renderSVG({x: 0, y: 0})}\n        </svg>)\n    }\n}\n\nexport default GraphToSVG;","import React from 'react'\nimport { defaultNodeProps, defaultLineHeight } from './ui-defaults'\nimport GraphNode from './graph-node';\nimport { Rectangle } from './shapes';\n\nexport class GraphTextNode extends GraphNode {\n    constructor(props) {\n        super(props)\n        this.text = new Text(props.text, props);\n        this.rect = new Rectangle(this.text.width, this.text.height);\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        return this.rect.getPeripheralOffsetByAngle(degree);\n    }\n    \n    getAnchorPoint(anchorInfo) {\n        throw \"Not Implemented\";\n    }\n    \n    updateViewBox(viewboxToBeUpdated, offset) {\n        return this.rect.updateViewBox(viewboxToBeUpdated, offset);\n    }\n    \n    renderSVG(offset) {\n        return this.text.renderSVG(offset);\n    }\n};\n\nexport class Text {\n    static getTextWidth(s, props) {\n        if (typeof window === `undefined`) {\n            return `${s}`.length*7;\n        }\n        var canvas = Rectangle.hiddenCanvas || (Rectangle.hiddenCanvas = window.document.createElement(\"canvas\"))\n        var ctx = canvas.getContext(\"2d\");\n        ctx.font = (props.font || defaultNodeProps.font);\n        return ctx.measureText(`${s}`).width;\n    }\n\n    constructor(text, props) {\n        this.props = props\n        this.text = text\n\n        this.textLines = text.split(\"\\n\").filter((e) => e !== \"\");\n        this.width = Math.max(0, ...this.textLines.map((s) => Text.getTextWidth(s, this.props)));\n        this.height = (props.lineHeight || defaultNodeProps.lineHeight) * this.textLines.length;\n    }\n\n    getSize() {\n        return {width: this.width, height: this.height};\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        const textLineHeight = this.props.lineHeight || defaultLineHeight;\n        var textsvgs = []\n        var i;\n        var startY = cy - this.height/2 + textLineHeight/2;\n        for (i = 0; i < this.textLines.length; i++) {\n            textsvgs.push(<text key={`text-${i}`} x={cx} y={startY}>{this.textLines[i]}</text>)\n            startY += textLineHeight;\n        }\n        const style = {\n            font: this.props.font,\n            fill: this.props.fontColor,\n        }\n        return (\n            <g dominantBaseline=\"central\" textAnchor=\"middle\" style={style}>\n                {textsvgs}\n            </g>\n        );\n    }\n}","import React from 'react'\nimport GraphNode from './graph-node'\nimport { Rectangle } from './shapes'\nimport { GraphTextNode } from './graph-text-node';\nimport GraphCollection from './graph-collection';\nimport AnchorInfo from './anchor-info';\n\nexport default class GraphRectangularNode extends GraphNode {\n    // props.content should store the \"inner\" GraphNode.\n    constructor(props, updateProps) {\n        super(props)\n        this.innerNode = props.content;\n        this.boundingShape = this.getBoundingShape();\n    }\n\n    getBoundingShape() {\n        const innerNode = this.innerNode;\n        const paddingX = (this.props.paddingX || this.props.padding);\n        const paddingY = (this.props.paddingY || this.props.padding);\n        var width = innerNode.getPeripheralOffsetByAngle(0).x - innerNode.getPeripheralOffsetByAngle(180).x + paddingX*2;\n        var height = innerNode.getPeripheralOffsetByAngle(90).y - innerNode.getPeripheralOffsetByAngle(270).y + paddingY*2;\n        if (this.props.maxWidth) width = Math.min(width, this.props.maxWidth);\n        if (this.props.minWidth) width = Math.max(width, this.props.minWidth);\n        if (this.props.maxHeight) height = Math.min(height, this.props.maxHeight);\n        if (this.props.minHeight) height = Math.max(height, this.props.minHeight);\n        return new Rectangle(width, height)\n    }\n\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        return this.boundingShape.getPeripheralOffsetByAngle(degree);\n    }\n\n    // Given computed center coordinates, generate entire SVG.\n    renderSVG(offset) {\n        return (<g key={`n-${this.props.id}`}>\n            <g\n                stroke={this.props.stroke}\n                strokeWidth={this.props.strokeWidth}\n                fill={this.props.fill}>\n                {this.boundingShape.renderSVG(offset)}\n            </g>\n            { this.innerNode.renderSVG(offset) }\n        </g>)\n    }\n\n    // Visitor pattern...?\n    updateViewBox(viewbox, center) {\n        this.boundingShape.updateViewBox(viewbox, center)\n    }\n    \n};\n\nexport class GraphRectangularTextNode extends GraphRectangularNode {\n    constructor(props) {\n        super(Object.assign(props, {content: new GraphTextNode(props)}))\n    }\n\n    updateProps(newProps) {\n        const hasTextChanged = (newProps.text !== undefined);\n        Object.assign(this.props, newProps)\n        if (hasTextChanged === true) {\n            this.innerNode = new GraphTextNode(this.props);\n        }\n        this.boundingShape = this.getBoundingShape();\n    }\n}\n\nexport class GraphArrayNode extends GraphRectangularNode {\n    // props.content will be an array.\n    constructor(props) {\n        const data = props.content;\n        const collection = new GraphCollection();\n        const nodes = []\n        var lastNode = null;\n        var i;\n        for (i = 0; i < data.length; i++) {\n            const nodeOrText = data[i];\n            var node;\n            if ((typeof nodeOrText) !== \"object\") {\n                node = collection.addNode({...props, id: \"dummyID\", text: `${nodeOrText}`}, GraphRectangularTextNode);\n            } else {\n                node = collection.addNode(nodeOrText);\n            }\n            // make sure anchors are correct.\n            node.resetAnchors();\n            if (lastNode !== null) {\n                node.updateProps({\n                    leftAnchors: [new AnchorInfo(lastNode.props.id, 0, \"boundary\", 0)],\n                    cyAnchor: new AnchorInfo(lastNode.props.id, 0, \"center\", 0),\n                })\n            } else {\n                node.updateProps({\n                    cx: 0,\n                    cy: 0,\n                })\n            }\n            lastNode = node;\n            nodes.push(node);\n        }\n        // Adjust min-height\n        const minHeight = Math.max(0, ...nodes.map((node) => node.getHeight()));\n        nodes.forEach((node) => node.updateProps({ minHeight: minHeight }));\n\n        super({ ...props, padding: 0, strokeWidth: \"0\", content: collection });\n        this.collection = collection;\n        this.data = data;\n        this.dataNodes = nodes;\n    }\n\n    getAnchorPoint(anchorInfo, center) {\n        if (typeof anchorInfo.at !== \"string\")\n            return this.collection.getAnchorPoint(anchorInfo, center);\n        return GraphRectangularNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n    }\n    \n    updateProps(newProps) {\n        console.log(newProps);\n    }\n}\n","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\n\nclass DisplayArray extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        \n        // TODO(tmt514): find correct way to detect whether to update.\n        if (true) {\n            const data = JSON.parse(nextProps.data);\n            newState.data = data || []\n            newState.n = (nextProps.n && parseInt(nextProps.n)) || data.length\n\n            newState.ui = new GraphToSVG;\n            while (newState.data.length < newState.n) {\n                newState.data.push(\"\")\n            }\n            \n            const nodelist = [];\n            for (let i = 0; i < newState.data.length; i++) {\n                const nodeProps = {\n                    id: `arr-${i}`,\n                    text: `${newState.data[i]}`,\n                    content: newState.data[i],\n                };\n                if (i === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else {\n                    nodeProps.leftAnchors = [new AnchorInfo(`arr-${i-1}`, 0, 'boundary', 0)]\n                    nodeProps.cyAnchor = new AnchorInfo(`arr-${i-1}`, 0, 'center', 0);\n                }\n                \n                // Id corresponds to Index in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n                });\n                \n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n\n            var w = -Infinity;\n            var h = -Infinity;\n            nodelist.forEach((node) => {\n                w = Math.max(w, node.getWidth());\n                h = Math.max(h, node.getHeight());\n            })\n            \n            const newNodeProps = {\n                minHeight: h,\n            };\n            if (nextProps.fixedwidth !== undefined) {\n                newNodeProps.minWidth = w;\n            }\n            \n            nodelist.forEach((node) => {\n                node.updateProps(newNodeProps)\n            })\n            \n        }\n        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayArray;","\n// Helper functions converting different data fields into canonical internal formats.\nclass DataHelper {\n    static getDataFromProps(props) {\n        var data = undefined;\n\n        // The simplest format is a JSON string.\n        if (props.data !== undefined) {\n            if (props.data instanceof Array) {\n                return props.data;\n            }\n            return JSON.parse(props.data);\n        }\n    }\n};\n\nexport default DataHelper;","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\n\nclass DisplayGrid extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n\n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || []\n        newState.n_row = (nextProps.n_row && parseInt(nextProps.n_row)) || data.length\n        newState.n_col = (nextProps.n_col && parseInt(nextProps.n_col)) || (data[0] && data[0].length) || 0\n        \n        newState.ui = new GraphToSVG;\n        while (newState.data.length < newState.n_row) {\n            newState.data.push(\" \".repeat(newState.n_col))\n        } \n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n_row; i++) {\n            for (let j = 0; j < newState.n_col; j++) {\n                const nodeProps = {\n                    id: `grid-${i}-${j}`,\n                    text: `${newState.data[i][j]}`,\n                    content: newState.data[i][j],\n                    font: `12pt Courier New`,\n                    padding: 4,\n                    lineHeight: 12,\n                };\n\n                if (nextProps.notext !== undefined) {\n                    nodeProps.text = ``;\n                    nodeProps.padding = 10;\n                }\n                \n\n                if (i === 0 && j === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else if (j > 0) {\n                    nodeProps.leftAnchors = [new AnchorInfo(`grid-${i}-${j-1}`, 0, 'boundary', 0)];\n                    nodeProps.cyAnchor = new AnchorInfo(`grid-${i}-${j-1}`, 0, 'center', 0);\n                } else { // i > 0.\n                    nodeProps.downAnchors = [new AnchorInfo(`grid-${i-1}-${j}`, 90, 'boundary', 0)];\n                    nodeProps.cxAnchor = new AnchorInfo(`grid-${i-1}-${j}`, 0, 'center', 0);\n                }\n                // Id corresponds to Coordinates in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, JSON.stringify([i, j]), ['all', 'node'])\n                });\n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n\n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayGrid;","import React, { Component } from 'react';\n\nexport class Quadrant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clip_id: \"clip\" + Math.random().toString(36).substring(2),\n        }\n    }\n\n    getBoundaryPaths() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n\n        return [\n            {x1: cx, y1: cy, x2: cx+r*cos_s, y2: cy+r*sin_s},\n            {x1: cx, y1: cy, x2: cx+r*cos_e, y2: cy+r*sin_e}\n        ]\n    }\n    \n    getPath() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n        \n        console.log(s, e);\n        const largeArcFlag = (e >= s + Math.PI? 1 : 0);\n        \n        const path = [\n            `M ${cx} ${cy}`,\n            `L ${cx+r*cos_s} ${cy+r*sin_s}`,\n            `A ${r} ${r} 0 ${largeArcFlag} 1 ${cx+r*cos_e} ${cy+r*sin_e}`,\n        ];\n        \n        return path.join(\" \");\n    }\n    \n    render() {\n        const d = this.getPath();\n        const b = this.getBoundaryPaths();\n        console.log(d, b);\n        \n        \n        const href = this.props[\"clip-href\"];\n        console.log(this.props.c);\n\n        \n        return (<>\n        <clipPath id={this.state.clip_id}>\n            <use href={href||\"\"} />\n        </clipPath>\n        {\n            this.props[\"boundary-at-start\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary start`}\n                {...b[0]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        {\n            this.props[\"boundary-at-end\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary end`}\n                {...b[1]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        <path\n            className={`${this.props.c} quadrant region`}\n            d={d}\n            clipPath={`url(#${this.state.clip_id})`}\n            />\n        {\n            this.props[\"dot-at-origin\"] !== undefined &&\n            <circle\n                cx={this.props.x} cy={this.props.y}\n                r=\"5\"\n                className={`${this.props.c} quadrant origin`}\n            />\n        }\n        </>)\n    }\n};","import React from 'react'\n\nconst defaultMarkerProps = {\n    id: \"dummyID\",\n    orient: \"auto\"\n}\n\nexport default class Marker {\n    constructor(props) {\n        this.props = Object.assign({}, defaultMarkerProps, props);\n    }\n    renderSVG() {\n        return (<marker {...this.props} key={this.props.id} />)\n    }\n};\n\nexport const markerSquare = new Marker({\n    id: \"markerSquare\",\n    markerWidth: 7,\n    markerHeight: 7,\n    refX: 4,\n    refY: 4,\n    children: (<rect x=\"1\" y=\"1\" width=\"5\" height=\"5\" style={{stroke: \"none\", fill: \"black\"}}/>),\n})\n\nexport const markerCircle = new Marker({\n    id: \"markerCircle\",\n    markerWidth: 12,\n    markerHeight: 12,\n    refX: 4,\n    refY: 4,\n    children: (<circle cx=\"4\" cy=\"4\" r=\"4\" />),\n})\n\nexport const markerTriangle = new Marker({\n    id: \"markerTriangle\",\n    markerWidth: 10,\n    markerHeight: 10,\n    refX: 10,\n    refY: 5,\n    children: (<path d=\"M 0 0 L 10 5 L 0 10 z\" />),\n})","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode, GraphArrayNode } from './display-ui/graph-rectanglur-node';\nimport { markerCircle, markerTriangle } from './display-gadgets/markers';\n\nclass DisplayLinkedList extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        const data = DataHelper.getDataFromProps(nextProps);\n        const isDoublyLinkedList = nextProps.double !== undefined;\n        const isCircularLinkedList = nextProps.circular !== undefined;\n        newState.data = data || []\n        newState.n = data.length;\n        newState.ui = new GraphToSVG;\n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n; i++) {\n            const ptrSlot = new GraphRectangularTextNode({id: `ptr-next`, text: \"  \"});\n            var contentArray = [newState.data[i], ptrSlot];\n            if (isDoublyLinkedList) {\n                contentArray = [new GraphRectangularTextNode({id: `ptr-prev`, text: \"  \"}), ...contentArray]\n            }\n            const nodeProps = {\n                id: `linked-list-${i}`,\n                text: `${newState.data[i]}`,\n                content: contentArray,\n            }\n            \n            if (i == 0) {\n                nodeProps.cx = 0;\n                nodeProps.cy = 0;\n            } else {\n                nodeProps.leftAnchors = [new AnchorInfo(`linked-list-${i-1}`, 0, 'boundary', 50)];\n                nodeProps.cyAnchor = new AnchorInfo(`linked-list-${i-1}`, 0, 'center', 0);\n            }\n             \n            // Id corresponds to Coordinates in the array.\n            uiStores.forEach((uiStore) => {\n                GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n            });\n            const node = newState.ui.addNode(nodeProps, GraphArrayNode);\n            nodelist.push(node);\n\n            // create edges.\n            if (i === 0) continue;\n            \n            if (isDoublyLinkedList) {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 4}),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0, {x: 0, y: 4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n                const backedgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i}`, 0, ['ptr-prev', 'center'], 0, {x: 0, y: -4}),\n                              new AnchorInfo(`linked-list-${i-1}`, 0, 'entire-node', 0, {x: 0, y: -4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(backedgeProps)\n            } else {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0)],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n            }\n        }\n        if (isCircularLinkedList) {\n            const edgeProps = {\n                pathAnchors: [new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0),\n                              new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 30}),\n                              new AnchorInfo(`linked-list-${0}`, 90, 'boundary', 0, {x: 0, y: 15}),\n                              new AnchorInfo(`linked-list-${0}`, 0, 'entire-node', 0)],\n                markerStart: markerCircle,\n                markerEnd: markerTriangle,\n                fill: \"none\",\n            }\n            newState.ui.addEdge(edgeProps);\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            console.warn(node);\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayLinkedList;","import React, {Component} from 'react';\nimport DisplayArray from './display-array';\nimport DisplayGrid from './display-grid';\nimport { Quadrant } from './display-gadgets/rectangle'\nimport DisplayLinkedList from './display-linked-list';\n\nclass Display extends Component {\n    render() {\n        if (this.props.array !== undefined) {\n            return (<DisplayArray {...this.props}></DisplayArray>);\n        }\n        if (this.props.grid !== undefined) {\n            return (<DisplayGrid {...this.props}></DisplayGrid>);\n        }\n        if (this.props[\"linked-list\"] !== undefined) {\n            return (<DisplayLinkedList {...this.props}></DisplayLinkedList>);\n        }\n        \n        \n        return (<div>\n            <span style={{color:\"red\"}}>\n            Error: Displayer of this type Not Implemented.\n            </span>\n        </div>);\n    }\n};\n\nexport class DisplayInner extends Component {\n    // This should be rendered inside some SVG tag.\n    render() {\n        if (this.props.quadrant !== undefined) {\n            return (<Quadrant {...this.props}></Quadrant>);\n        }\n        return (\n        <text fill=\"red\" x=\"0\" y=\"0\">\n            Error: Displayer of this type Not Implemented.\n        </text>\n        );\n    }\n};\n\nexport default Display;","module.exports = __webpack_public_path__ + \"static/cc-by-nc-sa-982c531432c4ad7e8dbf3cf52a1dc6d0.png\";","import React, { Component } from 'react';\nimport Display from './display';\nimport UIController from './display-ui/ui-controller';\n\nconst clone = (dictionary) => {\n    return JSON.parse(JSON.stringify(dictionary))\n}\n\nclass Algorithm extends Component {\n    constructor(props) {\n        super(props);\n        \n        const findAll = function(name) {\n            return props.children.filter((x) => x.type === name);\n        }\n        const findFirst = function(name) {\n            return findAll(name)[0];\n        }\n        const generator = findFirst(\"generator\");\n        const inputdata = findFirst(\"inputdata\");\n        const alldisplays = findAll(\"indirectdisplay\");\n        \n        // function*(input) {}\n        const code = generator\n            .props\n            .children\n            .filter((x) => x.type === \"pre\")[0]\n            .props\n            .children[0];\n        const solver = eval(\"(\" + code + \")\");\n\n        // Parse input.\n        const input = JSON.parse(inputdata.props.data);\n        \n        // Creates UI environment.\n        const ui = new UIController();\n\n        // Creates Generator and history storing all intermediate steps for the\n        // algorithm.\n        var gen = solver(input, ui);\n        var history = [clone(gen.next())];\n        var uiHistory = [ui.getSnapshot()];\n        ui.clearStyleOnce();\n\n        // Set States.\n        this.state = {\n            solver: solver,\n            input: input,\n            displays: alldisplays,\n            generator: gen,\n            stepId: 0,\n            history: history,\n            ui: ui,\n            uiHistory: uiHistory,\n        }\n        \n    }\n\n    changeStepBy(numMove) {\n        const newState = Object.assign({}, this.state);\n        newState.stepId += numMove;\n        while (newState.history.length <= newState.stepId\n            && newState.history[newState.history.length-1].done === false) {\n            const nextIter = newState.generator.next();\n            newState.history.push(clone(nextIter));\n            newState.uiHistory.push(newState.ui.getSnapshot());\n            newState.ui.clearStyleOnce();\n        }\n        newState.stepId = Math.max(0, newState.stepId);\n        newState.stepId = Math.min(newState.history.length-1, newState.stepId);\n        this.setState(newState);\n    }\n\n    render() {\n        const stepId = this.state.stepId;\n        const snapshot = this.state.history[stepId];\n        const uiSnapshot = this.state.uiHistory[stepId];\n        const displays = this.state.displays.map((e, idx) => {\n            const varname = e.props.varname;\n            const uiStore = {\n                styleRules: uiSnapshot.styleRules[varname],\n                styles: uiSnapshot.styles[varname],\n                onceStyles: uiSnapshot.onceStyles[varname],\n                annotations: uiSnapshot.annotations[varname],\n            };\n\n            return (\n                <Display\n                    key={idx}\n                    {...e.props}\n                    uiStoreFromAlgorithm={uiStore}\n                    data={JSON.stringify(snapshot.value[e.props.varname])}\n                />\n        )})\n        return (\n            <div>\n                <div className=\"has-text-centered\">\n                <button onClick={this.changeStepBy.bind(this, -1)}>Prev</button>\n                <span> Step: {this.state.stepId} </span>\n                <button onClick={this.changeStepBy.bind(this, 1)}>Next</button>\n                </div>\n                {displays}\n            </div>\n        )\n    }\n};\n\nexport default Algorithm;","export default class UIController {\n    \n    static RULES_COUNTER = 0;\n    \n    constructor() {\n        this.styleRules = {};\n        this.styles = {};\n        this.onceStyles = {};\n        this.annotations = {};\n    }\n    \n    getSnapshot() {\n        return JSON.parse(JSON.stringify(this));\n    }\n    \n    setStyle(varname, id, options) {\n        if (this.styles[varname] === undefined)\n            this.styles[varname] = {};\n        if (this.styles[varname][id] === undefined)\n            this.styles[varname][id] = {};\n        Object.assign(this.styles[varname][id], options);\n    }\n    \n    eraseStyle(varname, id, options) {\n        if (this.styles[varname] !== undefined)\n            this.styles[varname][id] = undefined;\n    }\n    \n    setStyleOnce(varname, id, options) {\n        if (this.onceStyles[varname] === undefined)\n            this.onceStyles[varname] = {};\n        if (this.onceStyles[varname][id] === undefined)\n            this.onceStyles[varname][id] = {};\n        Object.assign(this.onceStyles[varname][id], options);\n    }\n    \n    clearStyleOnce() {\n        this.onceStyles = {};\n    }\n    \n    addStyleRule(varname, apply_to, pure_predicate_fn, options) {\n        if (this.styleRules[varname] === undefined)\n            this.styleRules[varname] = {}\n        const rule_id = `ui-rule-${UIController.RULES_COUNTER}`;\n        UIController.RULES_COUNTER ++;\n        \n        this.styleRules[varname][rule_id] = {\n            apply_to: apply_to,\n            pure_predicate_fn: pure_predicate_fn.toString(),\n            options: options,\n        };\n        return rule_id;\n    }\n    \n    removeStyleRule(varname, rule_id) {\n        if (this.styleRules[varname] !== undefined) \n            this.styleRules[varname][rule_id] = undefined;\n    }\n    \n       \n};"],"sourceRoot":""}