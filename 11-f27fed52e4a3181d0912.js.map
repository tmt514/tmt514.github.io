{"version":3,"sources":["webpack:///./node_modules/rehype-react/index.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.js","webpack:///./node_modules/prismjs/components/prism-c.js","webpack:///./node_modules/prismjs/components/prism-cpp.js","webpack:///./node_modules/remark-math/index.js","webpack:///./node_modules/remark-math/inline.js","webpack:///./node_modules/remark-math/block.js","webpack:///./node_modules/remark-rehype/index.js"],"names":["has","__webpack_require__","toH","module","exports","options","settings","createElement","components","h","name","props","children","component","this","Compiler","node","type","length","tagName","properties","prefix","bind","call","Function","Object","prototype","hasOwnProperty","implementation","slice","Array","toStr","toString","that","target","TypeError","bound","args","arguments","boundLength","Math","max","boundArgs","i","push","join","result","apply","concat","Empty","_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","map","replace","o","match","objId","obj","defineProperty","value","clone","visited","key","forEach","v","languages","extend","id","redef","insertBefore","inside","before","insert","root","grammar","newToken","ret","token","DFS","callback","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","test","className","parentNode","toLowerCase","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","after","wrapped","splice","rest","all","add","callbacks","matchedStr","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","xml","html","mathml","svg","css","atrule","rule","url","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","constant","template-string","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","tex","pre","getAttribute","extension","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","toolbar","registerButton","a","setAttribute","href","classMap","customClass","cm","prefixString","c","macro","directive","cpp","raw-string","inlinePlugin","blockPlugin","opts","locator","fromIndex","indexOf","ESCAPED_INLINE_MATH","INLINE_MATH","INLINE_MATH_DOUBLE","inlineTokenizer","eat","silent","isDouble","escaped","includes","toEat","trimmedContent","trim","hName","hProperties","inlineMathDouble","hChildren","Parser","inlineTokenizers","inlineMethods","math","visitors","inlineMath","C_NEWLINE","C_TAB","C_SPACE","C_DOLLAR","MIN_FENCE_COUNT","CODE_INDENT_COUNT","blockTokenizers","blockMethods","fenceCount","marker","character","queue","exdentedContent","closing","exdentedClosing","indent","now","subvalue","charAt","column","offset","interruptParagraph","interruptList","interruptBlockquote","mdast2hast","destination","process","file","next","err","bridge","mutate"],"mappings":"2FAGA,IAAAA,EAAUC,EAAQ,KAClBC,EAAUD,EAAQ,KAGlBE,EAAAC,QAcA,SAAAC,GACA,IAAAC,EAAAD,GAAA,GACAE,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,YAAA,GAuBA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAb,EAAAQ,EAAAE,GAAAF,EAAAE,KACA,OAAAH,EAAAM,EAAAF,EAAAC,GAvBAE,KAAAC,SAGA,SAAAC,GACA,SAAAA,EAAAC,OAEAD,EADA,IAAAA,EAAAJ,SAAAM,QAAA,YAAAF,EAAAJ,SAAA,GAAAK,KACAD,EAAAJ,SAAA,GAEA,CACAK,KAAA,UACAE,QAAA,MACAC,WAAA,GACAR,SAAAI,EAAAJ,WAKA,OAAAV,EAAAO,EAAAO,EAAAV,EAAAe,4CCzCA,IAAAC,EAAWrB,EAAQ,KAEnBE,EAAAC,QAAAkB,EAAAC,KAAAC,SAAAD,KAAAE,OAAAC,UAAAC,kDCFA,IAAAC,EAAqB3B,EAAQ,KAE7BE,EAAAC,QAAAoB,SAAAE,UAAAJ,MAAAM,oCCAA,IACAC,EAAAC,MAAAJ,UAAAG,MACAE,EAAAN,OAAAC,UAAAM,SAGA7B,EAAAC,QAAA,SAAA6B,GACA,IAAAC,EAAApB,KACA,sBAAAoB,GAJA,sBAIAH,EAAAR,KAAAW,GACA,UAAAC,UARA,kDAQAD,GAyBA,IAvBA,IAEAE,EAFAC,EAAAR,EAAAN,KAAAe,UAAA,GAqBAC,EAAAC,KAAAC,IAAA,EAAAP,EAAAhB,OAAAmB,EAAAnB,QACAwB,EAAA,GACAC,EAAA,EAAmBA,EAAAJ,EAAiBI,IACpCD,EAAAE,KAAA,IAAAD,GAKA,GAFAP,EAAAZ,SAAA,6BAAAkB,EAAAG,KAAA,iDAAArB,CAxBA,WACA,GAAAV,gBAAAsB,EAAA,CACA,IAAAU,EAAAZ,EAAAa,MACAjC,KACAuB,EAAAW,OAAAnB,EAAAN,KAAAe,aAEA,OAAAb,OAAAqB,OACAA,EAEAhC,KAEA,OAAAoB,EAAAa,MACAd,EACAI,EAAAW,OAAAnB,EAAAN,KAAAe,eAaAJ,EAAAR,UAAA,CACA,IAAAuB,EAAA,aACAA,EAAAvB,UAAAQ,EAAAR,UACAU,EAAAV,UAAA,IAAAuB,EACAA,EAAAvB,UAAA,KAGA,OAAAU,qCC7CA,IAAAc,EAAA,oBAAAC,OACAA,OAEA,oBAAAC,mBAAAC,gBAAAD,kBACAC,KACA,GASAC,EAAA,WAGA,IAAAC,EAAA,8BACAC,EAAA,EAEAC,EAAAP,EAAAI,MAAA,CACAI,OAAAR,EAAAI,OAAAJ,EAAAI,MAAAI,OACAC,4BAAAT,EAAAI,OAAAJ,EAAAI,MAAAK,4BACAC,KAAA,CACAC,OAAA,SAAAC,GACA,OAAAA,aAAAC,EACA,IAAAA,EAAAD,EAAA7C,KAAAwC,EAAAG,KAAAC,OAAAC,EAAAE,SAAAF,EAAAG,OACI,UAAAR,EAAAG,KAAA3C,KAAA6C,GACJA,EAAAI,IAAAT,EAAAG,KAAAC,QAEAC,EAAAK,QAAA,cAAsCA,QAAA,aAAsBA,QAAA,gBAI5DlD,KAAA,SAAAmD,GACA,OAAA3C,OAAAC,UAAAM,SAAAT,KAAA6C,GAAAC,MAAA,wBAGAC,MAAA,SAAAC,GAIA,OAHAA,EAAA,MACA9C,OAAA+C,eAAAD,EAAA,QAAwCE,QAAAjB,IAExCe,EAAA,MAIAG,MAAA,SAAAN,EAAAO,GACA,IAAA1D,EAAAwC,EAAAG,KAAA3C,KAAAmD,GAGA,OAFAO,KAAA,GAEA1D,GACA,aACA,GAAA0D,EAAAlB,EAAAG,KAAAU,MAAAF,IACA,OAAAO,EAAAlB,EAAAG,KAAAU,MAAAF,IAEA,IAAAM,EAAA,GAGA,QAAAE,KAFAD,EAAAlB,EAAAG,KAAAU,MAAAF,IAAAM,EAEAN,EACAA,EAAAzC,eAAAiD,KACAF,EAAAE,GAAAnB,EAAAG,KAAAc,MAAAN,EAAAQ,GAAAD,IAIA,OAAAD,EAEA,YACA,GAAAC,EAAAlB,EAAAG,KAAAU,MAAAF,IACA,OAAAO,EAAAlB,EAAAG,KAAAU,MAAAF,IAEAM,EAAA,GAOA,OANAC,EAAAlB,EAAAG,KAAAU,MAAAF,IAAAM,EAEAN,EAAAS,QAAA,SAAAC,EAAAnC,GACA+B,EAAA/B,GAAAc,EAAAG,KAAAc,MAAAI,EAAAH,KAGAD,EAGA,OAAAN,IAIAW,UAAA,CACAC,OAAA,SAAAC,EAAAC,GACA,IAAA3B,EAAAE,EAAAG,KAAAc,MAAAjB,EAAAsB,UAAAE,IAEA,QAAAL,KAAAM,EACA3B,EAAAqB,GAAAM,EAAAN,GAGA,OAAArB,GAYA4B,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,GADAD,KAAA9B,EAAAsB,WACAK,GAEA,MAAA9C,UAAApB,OAAA,CAGA,QAAAuE,KAFAH,EAAAhD,UAAA,GAGAgD,EAAA3D,eAAA8D,KACAD,EAAAC,GAAAH,EAAAG,IAIA,OAAAD,EAGA,IAAAE,EAAA,GAEA,QAAAC,KAAAH,EAEA,GAAAA,EAAA7D,eAAAgE,GAAA,CAEA,GAAAA,GAAAN,EAEA,QAAAI,KAAAH,EAEAA,EAAA3D,eAAA8D,KACAC,EAAAD,GAAAH,EAAAG,IAKAC,EAAAC,GAAAH,EAAAG,GAWA,OANAlC,EAAAsB,UAAAa,IAAAnC,EAAAsB,UAAA,SAAAH,EAAAH,GACAA,IAAAc,EAAAH,IAAAR,GAAAQ,IACAtE,KAAA8D,GAAAc,KAIAH,EAAAH,GAAAM,GAIAE,IAAA,SAAAxB,EAAAyB,EAAA5E,EAAA0D,GAEA,QAAAhC,KADAgC,KAAA,GACAP,EACAA,EAAAzC,eAAAgB,KACAkD,EAAAtE,KAAA6C,EAAAzB,EAAAyB,EAAAzB,GAAA1B,GAAA0B,GAEA,WAAAc,EAAAG,KAAA3C,KAAAmD,EAAAzB,KAAAgC,EAAAlB,EAAAG,KAAAU,MAAAF,EAAAzB,KAIA,UAAAc,EAAAG,KAAA3C,KAAAmD,EAAAzB,KAAAgC,EAAAlB,EAAAG,KAAAU,MAAAF,EAAAzB,OACAgC,EAAAlB,EAAAG,KAAAU,MAAAF,EAAAzB,MAAA,EACAc,EAAAsB,UAAAa,IAAAxB,EAAAzB,GAAAkD,EAAAlD,EAAAgC,KALAA,EAAAlB,EAAAG,KAAAU,MAAAF,EAAAzB,MAAA,EACAc,EAAAsB,UAAAa,IAAAxB,EAAAzB,GAAAkD,EAAA,KAAAlB,OAUAmB,QAAA,GAEAC,aAAA,SAAAC,EAAAH,GACApC,EAAAwC,kBAAAC,SAAAF,EAAAH,IAGAI,kBAAA,SAAAE,EAAAH,EAAAH,GACA,IAAAO,EAAA,CACAP,WACAQ,SAAA,oGAGA5C,EAAA6C,MAAAC,IAAA,sBAAAH,GAIA,IAFA,IAEAI,EAFAC,EAAAL,EAAAK,UAAAN,EAAAO,iBAAAN,EAAAC,UAEA1D,EAAA,EAAwB6D,EAAAC,EAAA9D,MACxBc,EAAAkD,iBAAAH,GAAA,IAAAR,EAAAI,EAAAP,WAIAc,iBAAA,SAAAH,EAAAR,EAAAH,GAIA,IAFA,IAAAe,EAAApB,EAAAqB,EAAAL,EAEAK,IAAAtD,EAAAuD,KAAAD,EAAAE,YACAF,IAAAG,WAGAH,IACAD,GAAAC,EAAAE,UAAA1C,MAAAd,IAAA,UAAA0D,cACAzB,EAAA/B,EAAAsB,UAAA6B,IAIAJ,EAAAO,UAAAP,EAAAO,UAAA5C,QAAAZ,EAAA,IAAAY,QAAA,yBAAAyC,EAEAJ,EAAAQ,aAEAH,EAAAL,EAAAQ,WAEA,OAAAF,KAAAD,EAAAK,YACAL,EAAAE,UAAAF,EAAAE,UAAA5C,QAAAZ,EAAA,IAAAY,QAAA,yBAAAyC,IAIA,IAEAR,EAAA,CACAI,UACAI,WACApB,UACA2B,KANAX,EAAAY,aAWA,GAFA3D,EAAA6C,MAAAC,IAAA,sBAAAH,IAEAA,EAAAe,OAAAf,EAAAZ,QAOA,OANAY,EAAAe,OACA1D,EAAA6C,MAAAC,IAAA,mBAAAH,GACAA,EAAAI,QAAAY,YAAAhB,EAAAe,KACA1D,EAAA6C,MAAAC,IAAA,kBAAAH,SAEA3C,EAAA6C,MAAAC,IAAA,WAAAH,GAMA,GAFA3C,EAAA6C,MAAAC,IAAA,mBAAAH,GAEAJ,GAAA9C,EAAAmE,OAAA,CACA,IAAAC,EAAA,IAAAD,OAAA5D,EAAA8D,UAEAD,EAAAE,UAAA,SAAAC,GACArB,EAAAsB,gBAAAD,EAAAE,KAEAlE,EAAA6C,MAAAC,IAAA,gBAAAH,GAEAA,EAAAI,QAAAoB,UAAAxB,EAAAsB,gBAEA7B,KAAAtE,KAAA6E,EAAAI,SACA/C,EAAA6C,MAAAC,IAAA,kBAAAH,GACA3C,EAAA6C,MAAAC,IAAA,WAAAH,IAGAkB,EAAAO,YAAAC,KAAAC,UAAA,CACAnB,SAAAR,EAAAQ,SACAO,KAAAf,EAAAe,KACAa,gBAAA,UAIA5B,EAAAsB,gBAAAjE,EAAAwE,UAAA7B,EAAAe,KAAAf,EAAAZ,QAAAY,EAAAQ,UAEAnD,EAAA6C,MAAAC,IAAA,gBAAAH,GAEAA,EAAAI,QAAAoB,UAAAxB,EAAAsB,gBAEA7B,KAAAtE,KAAAiF,GAEA/C,EAAA6C,MAAAC,IAAA,kBAAAH,GACA3C,EAAA6C,MAAAC,IAAA,WAAAH,IAIA6B,UAAA,SAAAC,EAAA1C,EAAAoB,GACA,IAAAR,EAAA,CACAe,KAAAe,EACA1C,UACAoB,YAKA,OAHAnD,EAAA6C,MAAAC,IAAA,kBAAAH,GACAA,EAAAtC,OAAAL,EAAA0E,SAAA/B,EAAAe,KAAAf,EAAAZ,SACA/B,EAAA6C,MAAAC,IAAA,iBAAAH,GACArC,EAAAgE,UAAAtE,EAAAG,KAAAC,OAAAuC,EAAAtC,QAAAsC,EAAAQ,WAGAwB,aAAA,SAAAF,EAAAG,EAAA7C,EAAA8C,EAAAC,EAAAC,EAAAtG,GACA,IAAA6B,EAAAN,EAAAM,MAEA,QAAA4B,KAAAH,EACA,GAAAA,EAAA7D,eAAAgE,IAAAH,EAAAG,GAAA,CAIA,GAAAA,GAAAzD,EACA,OAGA,IAAAuG,EAAAjD,EAAAG,GACA8C,EAAA,UAAAhF,EAAAG,KAAA3C,KAAAwH,KAAA,CAAAA,GAEA,QAAAC,EAAA,EAAkBA,EAAAD,EAAAvH,SAAqBwH,EAAA,CACvC,IAAAC,EAAAF,EAAAC,GACAtD,EAAAuD,EAAAvD,OACAwD,IAAAD,EAAAC,WACAC,IAAAF,EAAAE,OACAC,EAAA,EACA7E,EAAA0E,EAAA1E,MAEA,GAAA4E,IAAAF,UAAAI,OAAA,CAEA,IAAAC,EAAAL,UAAA3G,WAAAqC,MAAA,eACAsE,UAAAM,OAAAN,UAAAO,OAAAF,EAAA,KAGAL,eAGA,QAAAhG,EAAA2F,EAAAa,EAAAZ,EAAuC5F,EAAA0F,EAAAnH,OAAmBiI,GAAAd,EAAA1F,GAAAzB,SAAAyB,EAAA,CAE1D,IAAAyG,EAAAf,EAAA1F,GAEA,GAAA0F,EAAAnH,OAAAgH,EAAAhH,OAEA,OAGA,KAAAkI,aAAArF,GAAA,CAIA,GAAA8E,GAAAlG,GAAA0F,EAAAnH,OAAA,GAGA,GAFAyH,EAAAU,UAAAF,IACA9E,EAAAsE,EAAAW,KAAApB,IAEA,MAQA,IALA,IAAAqB,EAAAlF,EAAAiE,OAAAM,EAAAvE,EAAA,GAAAnD,OAAA,GACAsI,EAAAnF,EAAAiE,MAAAjE,EAAA,GAAAnD,OACAuI,EAAA9G,EACA+G,EAAAP,EAEAQ,EAAAtB,EAAAnH,OAAmCuI,EAAAE,IAAAD,EAAAF,IAAAnB,EAAAoB,GAAAxI,OAAAoH,EAAAoB,EAAA,GAAAZ,UAAmEY,EAGtGF,IAFAG,GAAArB,EAAAoB,GAAAvI,YAGAyB,EACAwG,EAAAO,GAKA,GAAArB,EAAA1F,aAAAoB,EACA,SAIA6F,EAAAH,EAAA9G,EACAyG,EAAAlB,EAAArG,MAAAsH,EAAAO,GACArF,EAAAiE,OAAAa,MACM,CACNR,EAAAU,UAAA,EAEA,IAAAhF,EAAAsE,EAAAW,KAAAF,GACAQ,EAAA,EAGA,GAAAvF,EAAA,CAQAuE,IACAE,EAAAzE,EAAA,GAAAA,EAAA,GAAAnD,OAAA,GAKAsI,GAFAD,EAAAlF,EAAAiE,MAAAQ,IACAzE,IAAA,GAAAxC,MAAAiH,IACA5H,OAFA,IAGAmE,EAAA+D,EAAAvH,MAAA,EAAA0H,GACAM,EAAAT,EAAAvH,MAAA2H,GAEAnH,EAAA,CAAAM,EAAAiH,GAEAvE,MACA1C,EACAwG,GAAA9D,EAAAnE,OACAmB,EAAAO,KAAAyC,IAGA,IAAAyE,EAAA,IAAA/F,EAAA4B,EAAAP,EAAA3B,EAAA0E,SAAA9D,EAAAe,GAAAf,EAAAJ,EAAAI,EAAAwE,GAaA,GAXAxG,EAAAO,KAAAkH,GAEAD,GACAxH,EAAAO,KAAAiH,GAGA/H,MAAAJ,UAAAqI,OAAAhH,MAAAsF,EAAAhG,GAEA,GAAAuH,GACAnG,EAAA2E,aAAAF,EAAAG,EAAA7C,EAAA7C,EAAAwG,GAAA,EAAAxD,GAEA6C,EACA,WAvCA,GAAAA,EACA,WA4CAL,SAAA,SAAAD,EAAA1C,EAAAoB,GACA,IAAAyB,EAAA,CAAAH,GAEA8B,EAAAxE,EAAAwE,KAEA,GAAAA,EAAA,CACA,QAAArE,KAAAqE,EACAxE,EAAAG,GAAAqE,EAAArE,UAGAH,EAAAwE,KAKA,OAFAvG,EAAA2E,aAAAF,EAAAG,EAAA7C,EAAA,QAEA6C,GAGA/B,MAAA,CACA2D,IAAA,GAEAC,IAAA,SAAAxJ,EAAAmF,GACA,IAAAS,EAAA7C,EAAA6C,MAAA2D,IAEA3D,EAAA5F,GAAA4F,EAAA5F,IAAA,GAEA4F,EAAA5F,GAAAkC,KAAAiD,IAGAU,IAAA,SAAA7F,EAAA0F,GACA,IAAA+D,EAAA1G,EAAA6C,MAAA2D,IAAAvJ,GAEA,GAAAyJ,KAAAjJ,OAIA,QAAA2E,EAAAlD,EAAA,EAA0BkD,EAAAsE,EAAAxH,MAC1BkD,EAAAO,MAMArC,EAAAN,EAAAM,MAAA,SAAA9C,EAAA+C,EAAAC,EAAAmG,EAAAvB,GACA/H,KAAAG,OACAH,KAAAkD,UACAlD,KAAAmD,QAEAnD,KAAAI,OAAA,GAAAkJ,GAAA,IAAAlJ,OACAJ,KAAA+H,YAuCA,GApCA9E,EAAAgE,UAAA,SAAA3D,EAAAwC,EAAAC,GACA,oBAAAzC,EACA,OAAAA,EAGA,aAAAX,EAAAG,KAAA3C,KAAAmD,GACA,OAAAA,EAAAF,IAAA,SAAAsC,GACA,OAAAzC,EAAAgE,UAAAvB,EAAAI,EAAAxC,KACGvB,KAAA,IAGH,IAAAuD,EAAA,CACAnF,KAAAmD,EAAAnD,KACA+C,QAAAD,EAAAgE,UAAA3D,EAAAJ,QAAA4C,EAAAC,GACAwD,IAAA,OACAC,QAAA,SAAAlG,EAAAnD,MACAsJ,WAAA,GACA3D,WACAC,UAGA,GAAAzC,EAAAH,MAAA,CACA,IAAAuG,EAAA,UAAA/G,EAAAG,KAAA3C,KAAAmD,EAAAH,OAAAG,EAAAH,MAAA,CAAAG,EAAAH,OACAnC,MAAAJ,UAAAkB,KAAAG,MAAAqD,EAAAkE,QAAAE,GAGA/G,EAAA6C,MAAAC,IAAA,OAAAH,GAEA,IAAAmE,EAAA9I,OAAAgJ,KAAArE,EAAAmE,YAAArG,IAAA,SAAAxD,GACA,OAAAA,EAAA,MAAA0F,EAAAmE,WAAA7J,IAAA,IAAAyD,QAAA,eAAyE,MACvEtB,KAAA,KAEF,UAAAuD,EAAAiE,IAAA,WAAAjE,EAAAkE,QAAAzH,KAAA,UAAA0H,EAAA,IAAAA,EAAA,QAAAnE,EAAApC,QAAA,KAAAoC,EAAAiE,IAAA,MAIAnH,EAAAgD,SACA,OAAAhD,EAAAwH,kBAKAjH,EAAAE,6BAEAT,EAAAwH,iBAAA,mBAAAjD,GACA,IAAAkD,EAAA7C,KAAA8C,MAAAnD,EAAAE,MACApE,EAAAoH,EAAA/D,SACAO,EAAAwD,EAAAxD,KACAa,EAAA2C,EAAA3C,eAEA9E,EAAA2E,YAAApE,EAAAwE,UAAAd,EAAA1D,EAAAsB,UAAAxB,OACAyE,GACA9E,EAAA2H,UAEG,GAGH3H,EAAAI,OAlBAJ,EAAAI,MAsBA,IAAAwH,EAAA5E,SAAA6E,eAAA,GAAAlJ,MAAAN,KAAA2E,SAAA8E,qBAAA,WAAAC,MAmBA,OAjBAH,IACArH,EAAA8D,SAAAuD,EAAAI,IAEAzH,EAAAC,QAAAoH,EAAAK,aAAA,iBACA,YAAAjF,SAAAkF,WACAjI,OAAAkI,sBACAlI,OAAAkI,sBAAA5H,EAAAsC,cAEA5C,OAAAmI,WAAA7H,EAAAsC,aAAA,IAIAG,SAAAwE,iBAAA,mBAAAjH,EAAAsC,gBAKA7C,EAAAI,MAnhBA,QAuhBA,IAAAnD,KAAAC,UACAD,EAAAC,QAAAkD,QAIA,IAAAyF,IACAA,EAAAzF,SAQAA,EAAAyB,UAAAwG,OAAA,CACAC,QAAA,kBACAC,OAAA,iBACAC,QAAA,sBACAC,MAAA,0BACAtB,IAAA,CACA1B,QAAA,yGACAE,QAAA,EACAzD,OAAA,CACAiF,IAAA,CACA1B,QAAA,kBACAvD,OAAA,CACAwG,YAAA,QACAC,UAAA,iBAGAC,aAAA,CACAnD,QAAA,oDACAvD,OAAA,CACAwG,YAAA,CACA,KACA,CACAjD,QAAA,gBACAC,YAAA,MAKAgD,YAAA,OACAG,YAAA,CACApD,QAAA,YACAvD,OAAA,CACAyG,UAAA,mBAMAG,OAAA,qBAGA1I,EAAAyB,UAAAwG,OAAA,IAAAnG,OAAA,cAAAA,OAAA,OACA9B,EAAAyB,UAAAwG,OAAA,OAGAjI,EAAAgD,MAAA4D,IAAA,gBAAA9D,GAEA,WAAAA,EAAAnF,OACAmF,EAAAmE,WAAA,MAAAnE,EAAApC,QAAAG,QAAA,QAAsD,QAItDb,EAAAyB,UAAAkH,IAAA3I,EAAAyB,UAAAwG,OACAjI,EAAAyB,UAAAmH,KAAA5I,EAAAyB,UAAAwG,OACAjI,EAAAyB,UAAAoH,OAAA7I,EAAAyB,UAAAwG,OACAjI,EAAAyB,UAAAqH,IAAA9I,EAAAyB,UAAAwG,OAOAjI,EAAAyB,UAAAsH,IAAA,CACAb,QAAA,mBACAc,OAAA,CACA3D,QAAA,8BACAvD,OAAA,CACAmH,KAAA,YAIAC,IAAA,iEACAnG,SAAA,2BACAoG,OAAA,CACA9D,QAAA,gDACAE,QAAA,GAEA6D,SAAA,+CACAC,UAAA,kBACAC,SAAA,oBACAhB,YAAA,YAGAtI,EAAAyB,UAAAsH,IAAA,OAAAjH,OAAA4E,KAAA1G,EAAAyB,UAAAsH,IAEA/I,EAAAyB,UAAAwG,SACAjI,EAAAyB,UAAAI,aAAA,gBACA0H,MAAA,CACAlE,QAAA,0CACAC,YAAA,EACAxD,OAAA9B,EAAAyB,UAAAsH,IACApI,MAAA,eACA4E,QAAA,KAIAvF,EAAAyB,UAAAI,aAAA,uBACA2H,aAAA,CACAnE,QAAA,6CACAvD,OAAA,CACA2G,YAAA,CACApD,QAAA,aACAvD,OAAA9B,EAAAyB,UAAAwG,OAAAlB,IAAAjF,QAEAwG,YAAA,wBACAE,aAAA,CACAnD,QAAA,MACAvD,OAAA9B,EAAAyB,UAAAsH,MAGApI,MAAA,iBAEEX,EAAAyB,UAAAwG,OAAAlB,MAOF/G,EAAAyB,UAAAgI,MAAA,CACAvB,QAAA,CACA,CACA7C,QAAA,kCACAC,YAAA,GAEA,CACAD,QAAA,mBACAC,YAAA,EACAC,QAAA,IAGA4D,OAAA,CACA9D,QAAA,iDACAE,QAAA,GAEAmE,aAAA,CACArE,QAAA,iGACAC,YAAA,EACAxD,OAAA,CACAwG,YAAA,UAGAqB,QAAA,6GACAC,QAAA,qBACAN,SAAA,oBACAO,OAAA,wDACAC,SAAA,0DACAxB,YAAA,iBAQAtI,EAAAyB,UAAAsI,WAAA/J,EAAAyB,UAAAC,OAAA,SACAiI,QAAA,8TACAE,OAAA,wGAEAP,SAAA,gDACAQ,SAAA,mGAGA9J,EAAAyB,UAAAI,aAAA,wBACAmI,MAAA,CACA3E,QAAA,iHACAC,YAAA,EACAC,QAAA,GAGA0E,oBAAA,CACA5E,QAAA,wHACA1E,MAAA,YAEAuJ,SAAA,uBAGAlK,EAAAyB,UAAAI,aAAA,uBACAsI,kBAAA,CACA9E,QAAA,mCACAE,QAAA,EACAzD,OAAA,CACAsI,cAAA,CACA/E,QAAA,YACAvD,OAAA,CACAuI,4BAAA,CACAhF,QAAA,UACA1E,MAAA,eAEA+F,KAAA,OAGAyC,OAAA,cAIAnJ,EAAAyB,UAAAsI,WAAA,mBAAAjI,OAAA,cAAAA,OAAA4E,KAAA1G,EAAAyB,UAAAsI,WAEA/J,EAAAyB,UAAAwG,QACAjI,EAAAyB,UAAAI,aAAA,gBACA2F,OAAA,CACAnC,QAAA,4CACAC,YAAA,EACAxD,OAAA9B,EAAAyB,UAAAsI,WACApJ,MAAA,sBACA4E,QAAA,KAKAvF,EAAAyB,UAAA6I,GAAAtK,EAAAyB,UAAAsI,WAQA,oBAAAhK,WAAAC,OAAAD,KAAA6C,mBAAA2H,gBAIAxK,KAAAC,MAAAwK,cAAA,WAEA,IAAAC,EAAA,CACAH,GAAA,aACAI,GAAA,SACAC,GAAA,OACAC,IAAA,aACAC,KAAA,aACAC,GAAA,OACAC,IAAA,QACA5N,EAAA,IACA6N,IAAA,SAGAxM,MAAAJ,UAAAG,MAAAN,KAAA2E,SAAAQ,iBAAA,kBAAA7B,QAAA,SAAA0J,GAKA,IAJA,IAEA3H,EAFAsE,EAAAqD,EAAAC,aAAA,YAEA3H,EAAA0H,EACAhL,EAAA,8BACAsD,IAAAtD,EAAAuD,KAAAD,EAAAE,YACAF,IAAAG,WAOA,GAJAH,IACAD,GAAA2H,EAAAxH,UAAA1C,MAAAd,IAAA,YAGAqD,EAAA,CACA,IAAA6H,GAAAvD,EAAA7G,MAAA,uBACAuC,EAAAmH,EAAAU,MAGA,IAAAtH,EAAAjB,SAAA3F,cAAA,QACA4G,EAAAJ,UAAA,YAAAH,EAEA2H,EAAAnH,YAAA,GAEAD,EAAAC,YAAA,WAEAmH,EAAAG,YAAAvH,GAEA,IAAAwH,EAAA,IAAAC,eAEAD,EAAAE,KAAA,MAAA3D,GAAA,GAEAyD,EAAAG,mBAAA,WACA,GAAAH,EAAAvD,aAEAuD,EAAAI,OAAA,KAAAJ,EAAAK,cACA7H,EAAAC,YAAAuH,EAAAK,aAEA1L,EAAAqD,iBAAAQ,IAEAwH,EAAAI,QAAA,IACA5H,EAAAC,YAAA,WAAAuH,EAAAI,OAAA,yBAAAJ,EAAAM,WAGA9H,EAAAC,YAAA,6CAKAuH,EAAAO,KAAA,QAGA5L,EAAAwC,QAAAqJ,SACA7L,EAAAwC,QAAAqJ,QAAAC,eAAA,yBAAAhJ,GACA,IAAAmI,EAAAnI,EAAAI,QAAAQ,WACA,GAAAuH,GAAA,OAAAzH,KAAAyH,EAAArH,WAAAqH,EAAApD,aAAA,aAAAoD,EAAApD,aAAA,uBAGA,IAAAD,EAAAqD,EAAAC,aAAA,YACAa,EAAAnJ,SAAA3F,cAAA,KAIA,OAHA8O,EAAAjI,YAAAmH,EAAAC,aAAA,wCACAa,EAAAC,aAAA,eACAD,EAAAE,KAAArE,EACAmE,MAMAnJ,SAAAwE,iBAAA,mBAAArH,KAAAC,MAAAwK,0DCx2BA,SAAA/E,IAAA,WAEA,GACA,oBAAA1F,WAAAC,YACA,IAAAyF,KAAAzF,MAFA,CAOA,IAAAjD,EAAA,CACAmP,SAAA,IAEAlM,MAAAwC,QAAA2J,YAAA,CACAvL,IAAA,SAAAwL,GACArP,EAAAmP,SAAAE,GAEArO,OAAA,SAAAoL,GACApM,EAAAsP,aAAAlD,IAIAnJ,MAAAgD,MAAA4D,IAAA,gBAAA9D,IACA/F,EAAAmP,UAAAnP,EAAAsP,gBAGAvJ,EAAAkE,QAAAlE,EAAAkE,QAAApG,IAAA,SAAA0L,GACA,OAAAvP,EAAAsP,cAAA,KAAAtP,EAAAmP,SAAAI,aA1BA,0CCAAtM,MAAAyB,UAAA6K,EAAAtM,MAAAyB,UAAAC,OAAA,SACAiI,QAAA,sUACAG,SAAA,uDACAD,OAAA,kEAGA7J,MAAAyB,UAAAI,aAAA,cACA0K,MAAA,CAGAlH,QAAA,qDACAC,YAAA,EACA3E,MAAA,WACAmB,OAAA,CAEAqH,OAAA,CACA9D,QAAA,8CACAC,YAAA,GAGAkH,UAAA,CACAnH,QAAA,4GACAC,YAAA,EACA3E,MAAA,aAKAuJ,SAAA,sIAGAlK,MAAAyB,UAAA6K,EAAA,qBACAtM,MAAAyB,UAAA6K,EAAA,2BChCAtM,MAAAyB,UAAAgL,IAAAzM,MAAAyB,UAAAC,OAAA,KACAiI,QAAA,8lBACAC,QAAA,qBACAE,SAAA,iJAGA9J,MAAAyB,UAAAI,aAAA,iBACA6H,aAAA,CACArE,QAAA,iBACAC,YAAA,KAIAtF,MAAAyB,UAAAI,aAAA,gBACA6K,aAAA,CACArH,QAAA,oCACA1E,MAAA,SACA4E,QAAA,0BCjBA,MAAAoH,EAAqBhQ,EAAQ,KAC7BiQ,EAAoBjQ,EAAQ,KAE5BE,EAAAC,QAAA,SAAA+P,EAAA,IACAD,EAAA3O,KAAAT,KAAAqP,GACAF,EAAA1O,KAAAT,KAAAqP,uBCLA,SAAAC,EAAA3L,EAAA4L,GACA,OAAA5L,EAAA6L,QAAA,IAAAD,GAGA,MAAAE,EAAA,QACAC,EAAA,wBACAC,EAAA,4BAEAtQ,EAAAC,QAAA,SAAA+P,GACA,SAAAO,EAAAC,EAAAlM,EAAAmM,GACA,IAAAC,GAAA,EACAxM,EAAAoM,EAAAnH,KAAA7E,GACAJ,IACAA,EAAAmM,EAAAlH,KAAA7E,GACAoM,GAAA,GAEA,MAAAC,EAAAP,EAAAjH,KAAA7E,GAEA,GAAAqM,EAEA,QAAAF,GAGAD,EAAAG,EAAA,GAAAH,CAAA,CACA1P,KAAA,OACAwD,MAAA,MAIA,WAAAA,EAAA5C,OAAA,GACA,OAAA8O,EAAAlM,EAAAkM,CAAA,CACA1P,KAAA,OACAwD,QAAA5C,MAAA,YAIA,GAAAwC,EAAA,CAEA,GAAAuM,EACA,SAIA,GADAvM,EAAA,GAAA0M,SAAA,MAAAtM,EAAA5C,MAAAwC,EAAA,GAAAnD,QAAA6P,SAAA,KACA,CACA,MAAAC,EAAAvM,EAAA5C,MAAA,EAAA4C,EAAA6L,QAAA,MACA,OAAAK,EAAAK,EAAAL,CAAA,CACA1P,KAAA,OACAwD,MAAAuM,IAIA,MAAAC,EAAA5M,EAAA,GAAA6M,OAEA,OAAAP,EAAAtM,EAAA,GAAAsM,CAAA,CACA1P,KAAA,aACAwD,MAAAwM,EACAtJ,KAAA,CACAwJ,MAAA,OACAC,YAAA,CACArK,UAAA,cAAA8J,GAAAV,EAAAkB,iBAAA,yBAEAC,UAAA,CACA,CACArQ,KAAA,OACAwD,MAAAwM,QAOAP,EAAAN,UAEA,MAAAmB,EAAAzQ,KAAAyQ,OAGAC,EAAAD,EAAA7P,UAAA8P,iBACAC,EAAAF,EAAA7P,UAAA+P,cACAD,EAAAE,KAAAhB,EACAe,EAAA1H,OAAA0H,EAAAnB,QAAA,kBAEA,MAAAvP,EAAAD,KAAAC,SAGA,SAAAA,EAAA,CACAA,EAAAW,UAAAiQ,SACAC,WAAA,SAAA5Q,GACA,UAAAA,EAAAyD,MAAA,4BCvFA,IAAAyM,EAAWjR,EAAQ,KAEnB4R,EAAA,KACAC,EAAA,KACAC,EAAA,IACAC,EAAA,IAEAC,EAAA,EACAC,EAAA,EAEA/R,EAAAC,QAAA,SAAA+P,GA2LA,MAAAoB,EAAAzQ,KAAAyQ,OAGAY,EAAAZ,EAAA7P,UAAAyQ,gBACAC,EAAAb,EAAA7P,UAAA0Q,aACAD,EAAAT,KA/LA,SAAAf,EAAAlM,EAAAmM,GAgBA,IAfA,IAGAyB,EACAC,EACAC,EACAC,EACAxO,EACAyO,EACAC,EACAC,EACAC,EACAC,EAZA3R,EAAAuD,EAAAvD,OAAA,EACAoH,EAAA,EACAwK,EAAA,GAaAxK,EAAApH,KACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAyJ,GAAAQ,IAAAT,IAIAgB,GAAAP,EACAjK,IAQA,GALAsK,EAAAtK,GAGAiK,EAAA9N,EAAAsO,OAAAzK,MAEA0J,EACA,OAQA,IALA1J,IACAgK,EAAAC,EACAF,EAAA,EACAS,GAAAP,EAEAjK,EAAApH,IACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAgK,GAIAQ,GAAAP,EACAF,IACA/J,IAGA,GAAA+J,EAAAJ,EACA,OAIA,KAAA3J,EAAApH,IACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAuJ,GAHA,CAMA,GAAAU,IAAAP,EACA,OAGAc,GAAAP,EACAjK,IAKA,GAFAiK,EAAA9N,EAAAsO,OAAAzK,GAEAsI,EACA,SAUA,KAPAiC,EAAAlC,EAAAkC,OACAG,QAAAF,EAAA5R,OACA2R,EAAAI,QAAAH,EAAA5R,OAEAsR,EAAAE,EAAAC,EAAA3O,EAAAyO,EAAA,GAGAnK,EAAApH,GAMA,GAJA8C,GAAA0O,EACAD,GAAAE,EACAD,EAAAC,EAAA,IAHAJ,EAAA9N,EAAAsO,OAAAzK,MAKAuJ,EAAA,CAoBA,IAVA7N,GACA0O,GAAAH,EACAI,GAAAJ,GAEAO,GAAAP,EAGAC,EAAA,GACAlK,IAEAA,EAAApH,IACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAyJ,GAIAS,GAAAD,EACAjK,IAMA,GAHAoK,GAAAF,EACAG,GAAAH,EAAA3Q,MAAA+Q,KAEAJ,EAAAtR,QAAAgR,GAAA,CAMA,IAFAM,EAAA,GAEAlK,EAAApH,IACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAgK,GAIAE,GAAAD,EACAjK,IAMA,GAHAoK,GAAAF,EACAG,GAAAH,IAEAA,EAAAtR,OAAAmR,GAAA,CAMA,IAFAG,EAAA,GAEAlK,EAAApH,IACAqR,EAAA9N,EAAAsO,OAAAzK,MAEAuJ,GAIAa,GAAAH,EACAI,GAAAJ,EACAjK,IAGA,aAvEAtE,GAAAuO,EACAI,GAAAJ,EACAjK,IAwEAwK,GAAA9O,EAAA0O,EACA,MAAAzB,EAAAC,EAAAuB,GACA,OAAA9B,EAAAmC,EAAAnC,CAAA,CACA1P,KAAA,OACAwD,MAAAwM,EACAtJ,KAAA,CACAwJ,MAAA,MACAC,YAAA,CACArK,UAAA,QAEAuK,UAAA,CACA,CACArQ,KAAA,OACAwD,MAAAwM,QAaAmB,EAAArI,OAAAqI,EAAA9B,QAAA,0BAGA,MAAA4C,EAAA3B,EAAA7P,UAAAwR,mBACAC,EAAA5B,EAAA7P,UAAAyR,cACAC,EAAA7B,EAAA7P,UAAA0R,oBACAF,EAAAnJ,OAAAmJ,EAAA5C,QAAA,4BACA6C,EAAApJ,OAAAoJ,EAAA7C,QAAA,4BACA8C,EAAArJ,OAAAqJ,EAAA9C,QAAA,4BAEA,MAAAvP,EAAAD,KAAAC,SAGA,SAAAA,EAAA,CACAA,EAAAW,UAAAiQ,SACAD,KAAA,SAAA1Q,GACA,aAAAA,EAAAyD,MAAA,4CCzNA,IAAA4O,EAAiBpT,EAAQ,KAEzBE,EAAAC,QAKA,SAAAkT,EAAAjT,GACAiT,MAAAC,UACAlT,EAAAiT,EACAA,EAAA,MAGA,OAAAA,EAIA,SAAAA,EAAAjT,GACA,OAEA,SAAAW,EAAAwS,EAAAC,GACAH,EAAA/M,IAAA8M,EAAArS,EAAAX,GAAAmT,EAEA,SAAAE,GACAD,EAAAC,MAXAC,CAAAL,EAAAjT,GAiBA,SAAAA,GACA,OAEA,SAAAW,GACA,OAAAqS,EAAArS,EAAAX,IArBAuT,CAAAvT","file":"11-f27fed52e4a3181d0912.js","sourcesContent":["'use strict';\n\n/* Dependencies. */\nvar has = require('has');\nvar toH = require('hast-to-hyperscript');\n\n/* Expose `rehype-react`. */\nmodule.exports = rehype2react;\n\n/**\n * Attach a react compiler.\n *\n * @param {Unified} processor - Instance.\n * @param {Object?} [options]\n * @param {Object?} [options.components]\n *   - Components.\n * @param {string?} [options.prefix]\n *   - Key prefix.\n * @param {Function?} [options.createElement]\n *   - `h()`.\n */\nfunction rehype2react(options) {\n  var settings = options || {};\n  var createElement = settings.createElement;\n  var components = settings.components || {};\n\n  this.Compiler = compiler;\n\n  /* Compile HAST to React. */\n  function compiler(node) {\n    if (node.type === 'root') {\n      if (node.children.length === 1 && node.children[0].type === 'element') {\n        node = node.children[0];\n      } else {\n        node = {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: node.children\n        };\n      }\n    }\n\n    return toH(h, node, settings.prefix);\n  }\n\n  /* Wrap `createElement` to pass components in. */\n  function h(name, props, children) {\n    var component = has(components, name) ? components[name] : name;\n    return createElement(component, props, children);\n  }\n}\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o, visited) {\n\t\t\tvar type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = {};\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = [];\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = _.util.clone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tvar Token = _.Token;\n\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^|[^\\\\])[\"']/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n\t\talias: 'function'\n\t},\n\t'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null // See below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript',\n\t\t\tgreedy: true\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();","(function(){\n\nif (\n\t(typeof self === 'undefined' || !self.Prism) &&\n\t(typeof global === 'undefined' || !global.Prism)\n) {\n\treturn;\n}\n\nvar options = {\n\tclassMap: {}\n};\nPrism.plugins.customClass = {\n\tmap: function map(cm) {\n\t\toptions.classMap = cm;\n\t},\n\tprefix: function prefix(string) {\n\t\toptions.prefixString = string;\n\t}\n}\n\nPrism.hooks.add('wrap', function (env) {\n\tif (!options.classMap && !options.prefixString) {\n\t\treturn;\n\t}\n\tenv.classes = env.classes.map(function(c) {\n\t\treturn (options.prefixString || '') + (options.classMap[c] || c);\n\t});\n});\n\n})();\n","Prism.languages.c = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t'operator': /-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,\n\t'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight the path of the include statement as a string\n\t\t\t'string': {\n\t\t\t\tpattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t},\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\n\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n","Prism.languages.cpp = Prism.languages.extend('c', {\n\t'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'operator': /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\n\nPrism.languages.insertBefore('cpp', 'keyword', {\n\t'class-name': {\n\t\tpattern: /(class\\s+)\\w+/i,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('cpp', 'string', {\n\t'raw-string': {\n\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\talias: 'string',\n\t\tgreedy: true\n\t}\n});\n","const inlinePlugin = require('./inline')\nconst blockPlugin = require('./block')\n\nmodule.exports = function mathPlugin (opts = {}) {\n  blockPlugin.call(this, opts)\n  inlinePlugin.call(this, opts)\n}\n","function locator (value, fromIndex) {\n  return value.indexOf('$', fromIndex)\n}\n\nconst ESCAPED_INLINE_MATH = /^\\\\\\$/\nconst INLINE_MATH = /^\\$((?:\\\\\\$|[^$])+)\\$/\nconst INLINE_MATH_DOUBLE = /^\\$\\$((?:\\\\\\$|[^$])+)\\$\\$/\n\nmodule.exports = function inlinePlugin (opts) {\n  function inlineTokenizer (eat, value, silent) {\n    let isDouble = true\n    let match = INLINE_MATH_DOUBLE.exec(value)\n    if (!match) {\n      match = INLINE_MATH.exec(value)\n      isDouble = false\n    }\n    const escaped = ESCAPED_INLINE_MATH.exec(value)\n\n    if (escaped) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true\n      }\n      return eat(escaped[0])({\n        type: 'text',\n        value: '$'\n      })\n    }\n\n    if (value.slice(-2) === '\\\\$') {\n      return eat(value)({\n        type: 'text',\n        value: value.slice(0, -2) + '$'\n      })\n    }\n\n    if (match) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true\n      }\n\n      const endingDollarInBackticks = match[0].includes('`') && value.slice(match[0].length).includes('`')\n      if (endingDollarInBackticks) {\n        const toEat = value.slice(0, value.indexOf('`'))\n        return eat(toEat)({\n          type: 'text',\n          value: toEat\n        })\n      }\n\n      const trimmedContent = match[1].trim()\n\n      return eat(match[0])({\n        type: 'inlineMath',\n        value: trimmedContent,\n        data: {\n          hName: 'span',\n          hProperties: {\n            className: 'inlineMath' + (isDouble && opts.inlineMathDouble ? ' inlineMathDouble' : '')\n          },\n          hChildren: [\n            {\n              type: 'text',\n              value: trimmedContent\n            }\n          ]\n        }\n      })\n    }\n  }\n  inlineTokenizer.locator = locator\n\n  const Parser = this.Parser\n\n  // Inject inlineTokenizer\n  const inlineTokenizers = Parser.prototype.inlineTokenizers\n  const inlineMethods = Parser.prototype.inlineMethods\n  inlineTokenizers.math = inlineTokenizer\n  inlineMethods.splice(inlineMethods.indexOf('text'), 0, 'math')\n\n  const Compiler = this.Compiler\n\n  // Stringify for math inline\n  if (Compiler != null) {\n    const visitors = Compiler.prototype.visitors\n    visitors.inlineMath = function (node) {\n      return '$' + node.value + '$'\n    }\n  }\n}\n","var trim = require('trim-trailing-lines')\n\nvar C_NEWLINE = '\\n'\nvar C_TAB = '\\t'\nvar C_SPACE = ' '\nvar C_DOLLAR = '$'\n\nvar MIN_FENCE_COUNT = 2\nvar CODE_INDENT_COUNT = 4\n\nmodule.exports = function blockPlugin (opts) {\n  function blockTokenizer (eat, value, silent) {\n    var length = value.length + 1\n    var index = 0\n    var subvalue = ''\n    var fenceCount\n    var marker\n    var character\n    var queue\n    var content\n    var exdentedContent\n    var closing\n    var exdentedClosing\n    var indent\n    var now\n\n    /* Eat initial spacing. */\n    while (index < length) {\n      character = value.charAt(index)\n\n      if (character !== C_SPACE && character !== C_TAB) {\n        break\n      }\n\n      subvalue += character\n      index++\n    }\n\n    indent = index\n\n    /* Eat the fence. */\n    character = value.charAt(index)\n\n    if (character !== C_DOLLAR) {\n      return\n    }\n\n    index++\n    marker = character\n    fenceCount = 1\n    subvalue += character\n\n    while (index < length) {\n      character = value.charAt(index)\n\n      if (character !== marker) {\n        break\n      }\n\n      subvalue += character\n      fenceCount++\n      index++\n    }\n\n    if (fenceCount < MIN_FENCE_COUNT) {\n      return\n    }\n\n    /* Eat everything after the fence. */\n    while (index < length) {\n      character = value.charAt(index)\n\n      if (character === C_NEWLINE) {\n        break\n      }\n      if (character === C_DOLLAR) {\n        return\n      }\n\n      subvalue += character\n      index++\n    }\n\n    character = value.charAt(index)\n\n    if (silent) {\n      return true\n    }\n\n    now = eat.now()\n    now.column += subvalue.length\n    now.offset += subvalue.length\n\n    queue = closing = exdentedClosing = content = exdentedContent = ''\n\n    /* Eat content. */\n    while (index < length) {\n      character = value.charAt(index)\n      content += closing\n      exdentedContent += exdentedClosing\n      closing = exdentedClosing = ''\n\n      if (character !== C_NEWLINE) {\n        content += character\n        exdentedClosing += character\n        index++\n        continue\n      }\n\n      /* Add the newline to `subvalue` if its the first\n      * character.  Otherwise, add it to the `closing`\n      * queue. */\n      if (content) {\n        closing += character\n        exdentedClosing += character\n      } else {\n        subvalue += character\n      }\n\n      queue = ''\n      index++\n\n      while (index < length) {\n        character = value.charAt(index)\n\n        if (character !== C_SPACE) {\n          break\n        }\n\n        queue += character\n        index++\n      }\n\n      closing += queue\n      exdentedClosing += queue.slice(indent)\n\n      if (queue.length >= CODE_INDENT_COUNT) {\n        continue\n      }\n\n      queue = ''\n\n      while (index < length) {\n        character = value.charAt(index)\n\n        if (character !== marker) {\n          break\n        }\n\n        queue += character\n        index++\n      }\n\n      closing += queue\n      exdentedClosing += queue\n\n      if (queue.length < fenceCount) {\n        continue\n      }\n\n      queue = ''\n\n      while (index < length) {\n        character = value.charAt(index)\n\n        if (character === C_NEWLINE) {\n          break\n        }\n\n        closing += character\n        exdentedClosing += character\n        index++\n      }\n\n      break\n    }\n\n    subvalue += content + closing\n    const trimmedContent = trim(exdentedContent)\n    return eat(subvalue)({\n      type: 'math',\n      value: trimmedContent,\n      data: {\n        hName: 'div',\n        hProperties: {\n          className: 'math'\n        },\n        hChildren: [\n          {\n            type: 'text',\n            value: trimmedContent\n          }\n        ]\n      }\n    })\n  }\n\n  const Parser = this.Parser\n\n  // Inject blockTokenizer\n  const blockTokenizers = Parser.prototype.blockTokenizers\n  const blockMethods = Parser.prototype.blockMethods\n  blockTokenizers.math = blockTokenizer\n  blockMethods.splice(blockMethods.indexOf('fencedCode') + 1, 0, 'math')\n\n  // Inject math to interrupt rules\n  const interruptParagraph = Parser.prototype.interruptParagraph\n  const interruptList = Parser.prototype.interruptList\n  const interruptBlockquote = Parser.prototype.interruptBlockquote\n  interruptParagraph.splice(interruptParagraph.indexOf('fencedCode') + 1, 0, ['math'])\n  interruptList.splice(interruptList.indexOf('fencedCode') + 1, 0, ['math'])\n  interruptBlockquote.splice(interruptBlockquote.indexOf('fencedCode') + 1, 0, ['math'])\n\n  const Compiler = this.Compiler\n\n  // Stringify for math block\n  if (Compiler != null) {\n    const visitors = Compiler.prototype.visitors\n    visitors.math = function (node) {\n      return '$$\\n' + node.value + '\\n$$'\n    }\n  }\n}\n","'use strict'\n\nvar mdast2hast = require('mdast-util-to-hast')\n\nmodule.exports = remark2rehype\n\n// Attacher.  If a destination is given, runs the destination with the new hast\n// tree (bridge-mode).   Without destination, returns the hast tree: further\n// plugins run on that tree (mutate-mode).\nfunction remark2rehype(destination, options) {\n  if (destination && !destination.process) {\n    options = destination\n    destination = null\n  }\n\n  return destination ? bridge(destination, options) : mutate(options)\n}\n\n// Bridge-mode.  Runs the destination with the new hast tree.\nfunction bridge(destination, options) {\n  return transformer\n\n  function transformer(node, file, next) {\n    destination.run(mdast2hast(node, options), file, done)\n\n    function done(err) {\n      next(err)\n    }\n  }\n}\n\n// Mutate-mode.  Further transformers run on the hast tree.\nfunction mutate(options) {\n  return transformer\n\n  function transformer(node) {\n    return mdast2hast(node, options)\n  }\n}\n"],"sourceRoot":""}