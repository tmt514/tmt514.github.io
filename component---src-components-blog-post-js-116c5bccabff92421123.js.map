{"version":3,"sources":["webpack:///./src/components/markdown.js","webpack:///./src/components/theorem.js","webpack:///./src/components/include-problem.js","webpack:///./src/components/roadmaps.js","webpack:///./src/components/blog-post.js","webpack:///./src/components/footnote.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/display-ui/ui-helpers.js","webpack:///./src/components/display-ui/anchor-info.js","webpack:///./src/components/display-ui/ui-defaults.js","webpack:///./src/components/display-ui/graph-to-svg.js","webpack:///./src/components/display-ui/shapes.js","webpack:///./src/components/display-ui/graph-text-node.js","webpack:///./src/components/display-ui/graph-rectanglur-node.js","webpack:///./src/components/display-ui/graph-node.js","webpack:///./src/components/data-helper.js","webpack:///./src/components/display-grid.js","webpack:///./src/components/display-gadgets/rectangle.js","webpack:///./src/components/display-gadgets/markers.js","webpack:///./src/components/display-linked-list.js","webpack:///./src/components/display-graph.js","webpack:///./src/components/display.js","webpack:///./src/components/display-ui/graph-edge.js","webpack:///./src/components/display-ui/graph-collection.js","webpack:///./src/images/cc-by-nc-sa.png","webpack:///./src/components/display-array.js","webpack:///./src/components/algorithm.js","webpack:///./src/components/display-ui/ui-controller.js"],"names":["markdown","unified","use","parse","math","inlineMathDouble","rehype","options","tree","file","visit","node","hasClass","className","properties","includes","isDisplayMath","tagNmae","tagName","value","children","reactRenderer","createElement","React","remarkReactComponents","Theorem","render","val","this","props","content","Array","isArray","processSync","contents","length","react_default","a","c","undefined","title","style","justifyContent","Component","numToDifficulty","Difficulty","_ref","meta","difficulty","bgclass","isNaN","d","parseInt","toLowerCase","startsWith","IncludeProblem","path","code","show_solution","title_prefix","is_inline","inline","is_linkonly","notyet","gatsby_browser_entry","query","data","e","pages","edges","filter","frontmatter","page","solution","findH2Contents","regex","i","ret","recording","child","type","match","push","apply","htmlAst","map","idx","astToReact","ukey","childrenReact","Object","assign","key","ojlink","link","href","target","sollink","to","md","description","Fragment","include_problem_Difficulty","theorem","_2998057797","ContentCollection","_Component","arguments","inheritsLoose_default","prototype","path_prefix","tag","builder","tags","_4001701126","ProblemListAsTags","_Component2","n","label","roadmaps_ContentCollection","j","output","_loop","l","getLabel","findPageByPath","now","Date","date","react","fontWeight","getBgclassByDifficulty","MyH1","MyH2","_ref2","MyH3","_ref3","MyCode","_ref4","MySVG","_ref5","width","height","viewbox","viewBox","ShowVariable","varname","Template","componentDidMount","window","MathJax","Hub","Queue","Prism","plugins","customClass","prefix","highlightAll","componentDidUpdate","ShowVariable2","post","markdownRemark","Helmet_default","backlink","_ShowVariable","_this","call","ast","dict","modifiedAst","JSON","stringify","my_counter","formatter","transformer","t","findFirstDescendantByType","replace","forEach","roadmapTransformer","goto","here","far","near","id_far","id_near","display","show","u","id","verticalAlign","fontSize","rehypeReact","components","h1","h2","h3","Display","display-inner","DisplayInner","mysvg","showvariable","algorithm","Algorithm","mylink","Link","include-problem","problem-list-as-tags","Compiler","margin","src","CCBYNCSA","maxWidth","pageQuery","__webpack_require__","r","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","GraphNodeUIHelper","updateNodePropsByStyleRules","nodeProps","styleRules","classNames","ruleIDs","keys","_i","ruleID","rule","apply_to","z","eval","pure_predicate_fn","updateNodePropsByStyles","styles","updateNodePropsFromUIStore","uiStore","onceStyles","combineUIHelpers","contentToOptions","_arr","_i2","idToOptions","nodeOptions","makeUIStores","nextProps","uistore","uiStoreFromAlgorithm","AnchorInfo","who","angle","at","extraDistance","offset","defaultLineHeight","defaultNodeProps","defaultEdgeProps","_shapes__WEBPACK_IMPORTED_MODULE_0__","text","font","fontColor","lineHeight","padding","minWidth","minHeight","maxHeight","boundingShapeClass","Rectangle","stroke","strokeWidth","strokeLinejoin","strokeLineCap","strokeDasharray","fill","cx","cy","cxAnchor","cyAnchor","leftAnchors","rightAnchors","upAnchors","downAnchors","pathAnchors","markerStart","markerEnd","markerMid","GraphToSVG","graph","GraphCollection","markerStore","addNode","GraphNodeClass","getMarkersFromEdgeProps","edgeProps","markers","addEdge","GraphEdgeClass","_iterator","_isArray","Symbol","iterator","next","done","marker","renderSVG","lx","Infinity","ly","rx","ry","updateViewBox","x","y","w","Math","min","h","react__WEBPACK_IMPORTED_MODULE_7___default","_proto","getPeripheralOffsetByAngle","degree","rad","PI","cos","s","sin","vline","hline","dist","abs","boxWidth","boxHeight","points","floor","ceil","max","GraphTextNode","_GraphNode","Text","rect","updateProps","newProps","getAnchorPoint","anchorInfo","viewboxToBeUpdated","GraphNode","_this2","textLines","split","concat","getTextWidth","measureText","widths","charCodeAt","reduce","cur","acc","ctx","hiddenCanvas","document","getContext","_proto2","getSize","textLineHeight","textsvgs","startY","dominantBaseline","textAnchor","GraphRectangularNode","innerNode","boundingShape","getBoundingShape","paddingX","paddingY","center","GraphRectangularTextNode","_GraphRectangularNode","hasTextChanged","GraphArrayNode","_GraphRectangularNode2","collection","nodes","lastNode","nodeOrText","resetAnchors","getHeight","dataNodes","_proto3","console","log","ed","getWidth","positionalProps","DataHelper","getDataFromProps","err","DisplayGrid","state","getDerivedStateFromProps","prevState","newState","uiStores","n_row","n_col","ui","repeat","nodelist","_loop2","notext","newNodeProps","Quadrant","clip_id","random","toString","substring","getBoundaryPaths","parseFloat","x1","y1","x2","y2","getPath","cos_s","sin_s","cos_e","sin_e","join","b","clipPath","defaultMarkerProps","orient","Marker","markerCircle","markerWidth","markerHeight","refX","refY","markerTriangle","DisplayLinkedList","isDoublyLinkedList","double","isCircularLinkedList","circular","ptrSlot","contentArray","backedgeProps","warn","DisplayGraph","edgelist","edge","nodeids","_","_loop3","node_id","dir_adjust","currentX","currentY","getDist","thereX","thereY","sqrt","there","u_id","v_id","dx","p","dy","array","display_array","grid","display_grid","display_linked_list","display_graph_DisplayGraph","color","quadrant","rectangle_Quadrant","GraphEdge","graphCollection","nodeSet","computedNodeCenter","fromAnchor","toAnchor","fromNode","toNode","fromCenter","toCenter","dir","atan2","hasComputedPositions","NODES_COUNTER","EDGES_COUNTER","computePositions","visitedNodes","dfs","finalCX","finalCY","anchorToX","anchorToY","cxa","cya","la","ra","ua","da","nodeIDs","shiftX","shiftY","sub","shifted","slice","renderedNodes","_this$computedNodeCen","edgeIDs","renderedEdges","DisplayArray","ratios","maxUnitWidth","shouldAdjustWidth","fixedwidth","react__WEBPACK_IMPORTED_MODULE_5___default","clone","dictionary","findAll","name","findFirst","generator","inputdata","alldisplays","solver","input","UIController","gen","history","uiHistory","getSnapshot","clearStyleOnce","displays","stepId","changeStepBy","numMove","nextIter","setState","snapshot","uiSnapshot","annotations","_display__WEBPACK_IMPORTED_MODULE_6__","onClick","bind","setStyle","eraseStyle","setStyleOnce","addStyleRule","rule_id","RULES_COUNTER","removeStyleRule"],"mappings":"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","file":"component---src-components-blog-post-js-116c5bccabff92421123.js","sourcesContent":["import React, { Component } from 'react'\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport math from 'remark-math'\nimport rehype from 'remark-rehype'\nimport reactRenderer from 'rehype-react'\nimport visit from 'unist-util-visit'\n\n\nconst addDollarSignToMath = (options) => {\n    function transformer(tree, file) {\n        visit(tree, 'element', function(node) {\n            const hasClass = (node, className) => {\n                return node.properties.className && node.properties.className.includes(className)\n            }\n            const isDisplayMath = hasClass(node, \"inlineMathDouble\") ||\n            (node.tagNmae === \"div\" && hasClass(node, 'math'))\n            const isInlineMath =\n            node.tagName === \"span\" && hasClass(node, \"inlineMath\") && !isDisplayMath\n            \n            if (isInlineMath) {\n                // handle inline math\n                const value = node.children[0].value\n                node.children[0].value = '$' + value + '$'\n            } else if (isDisplayMath) {\n                // handle display math\n                const value = node.children[0].value\n                node.children[0].value = '$$' + value + '$$'\n            }\n        })\n    }\n    return transformer\n}\n\nconst markdown = unified()\n.use(parse)\n.use(math, {\n    inlineMathDouble: true,\n})\n.use(rehype)\n.use(addDollarSignToMath)\n.use(reactRenderer,\n    {\n        createElement: React.createElement,\n        remarkReactComponents: {\n        },\n    })\n\nexport default markdown;","import React, {Component} from 'react';\n\nimport markdown from './markdown'\n\nclass Theorem extends Component {\n    render() {\n        const val = this.props.children;\n        // This value could be either a string, or a parsed children array from remark.\n        // We do nothing if it's already parsed.\n        var content = val;\n        if (Array.isArray(content) === false) {\n            content = markdown.processSync(val).contents;\n        }\n        if (Array.isArray(content) === true && content.length === 1) {\n            content = markdown.processSync(content[0]).contents;\n        }\n        return (\n        <div className={`message ${this.props.c||\"is-warning\"}`}>\n        {\n            this.props.title !== undefined\n            && (\n                <div className=\"message-header\" style={{justifyContent: 'flex-start'}}>\n                {this.props.title}\n                </div>\n            )\n        }\n        <div className=\"message-body\">\n        {content}\n        </div></div>\n        )\n        \n    }\n};\n\nexport default Theorem;","import React, {Component} from 'react'\nimport Theorem from './theorem'\nimport {StaticQuery, graphql, Link} from 'gatsby'\nimport visit from 'unist-util-visit'\n\nimport markdown from './markdown'\n\nconst numToDifficulty = [\"Unknown\",\n        \"Eew\",\n        \"Easy-Peasy\",\n        \"Easy\",\n        \"Medium\",\n        \"Meaningful\",\n        \"Medium\",\n        \"Hard\",\n        \"Hazzard\",\n        \"Horrible\",\n        \"Hercules\",\n    ];\n\nexport function getBgclassByDifficulty(difficulty) {\n    if (isNaN(difficulty)) {\n        difficulty = difficulty.toLowerCase();\n        if (difficulty.startsWith(\"e\"))\n            return \"is-success\"\n        if (difficulty.startsWith(\"m\"))\n            return \"is-warning\"\n        if (difficulty.startsWith(\"h\"))\n            return \"is-danger\"\n    } else {\n        const d = parseInt(difficulty);\n        if (d <= 0) return \"\";\n        if (d <= 3) return \"is-success\";\n        if (d <= 6) return \"is-warning\";\n        if (d <= 10) return \"is-danger\";\n        return \"is-dark\";\n    }\n    return \"\";\n}\n\nconst Difficulty = ({ meta }) => {\n    var difficulty = meta.difficulty===null? \"0\": meta.difficulty;\n    var bgclass = \"\";\n    \n    if (!isNaN(difficulty)) {\n        const d = parseInt(difficulty);\n        difficulty = numToDifficulty[d];\n    }\n    \n    if (difficulty.toLowerCase().startsWith(\"e\")) {\n        bgclass = \"is-success\"\n    } else if (difficulty.toLowerCase().startsWith(\"m\")) {\n        bgclass = \"is-warning\"\n    } else if (difficulty.toLowerCase().startsWith(\"h\")) {\n        bgclass = \"is-danger\"\n    }\n    return (<span className={`tag ${bgclass} is-rounded`}><b>{difficulty}</b></span>);\n}\n\nconst findH2Contents = (node, regex) => {\n    const { children } = node;\n    const ret = [];\n    var recording = false;\n    \n    var i;\n    for (i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.type === \"element\") {\n            if (child.tagName === \"h2\") {\n                if (child.children !== undefined &&\n                    child.children[0] !== undefined &&\n                    child.children[0].value.match(regex) !== null) {\n                    recording = true;\n                    ret.push(child);\n                } else {\n                    recording = false;\n                }\n            } else if (recording === true) {\n                ret.push(child);\n            } else {\n                ret.push(...findH2Contents(child, regex))\n            }\n        } else if (recording === true) {\n            ret.push(child);\n        }\n    }\n    return ret\n}\n\nconst astToReact = (node, ukey) => {\n    const { children } = node;\n    if (node.type === \"text\") return node.value;\n\n    const childrenReact = children.map((c, idx) => astToReact(c, `${ukey}-${idx}`));\n    const props = Object.assign({}, node.properties)\n\n    if (node.tagName === \"h2\") {\n        props.className = (props.className || \"\") + \" title is-4\";\n    }\n    props.key = (props.key||ukey);\n    \n    const reactNode = React.createElement(node.tagName, props, childrenReact);\n    return reactNode;\n}\n\nexport default class IncludeProblem extends Component {\n    render() {\n        const path = this.props.path;\n        const code = this.props.code;\n        const show_solution = (this.props[\"show-solution\"]!== undefined);\n        const title_prefix = (this.props[\"title-prefix\"] || \"例題：\");\n        const is_inline = (this.props.inline !== undefined);\n        const is_linkonly = (this.props[\"linkonly\"] !== undefined);\n        \n        if (this.props.notyet !== undefined) {\n            return (<span>{this.props.path} 這題還沒準備好</span>)\n        }\n\n        return (<StaticQuery\n            query={graphql`\n            query allpages {\n                pages: allMarkdownRemark {\n                    edges {\n                        node {   \n                            frontmatter {\n                                title\n                                category\n                                path\n                                date\n                                _PARENT\n                                description\n                                link\n                                code\n                                difficulty\n                                oj\n                            }\n                            htmlAst\n                        }\n                     \n                    }\n                }\n            }`}\n\n            render={(data) => {\n                \n                const e = data.pages.edges.filter((e) => {return (\n                    e.node.frontmatter.path === path ||\n                    e.node.frontmatter.code === code) });\n                \n                if (e.length === 0) {\n                    return (<span>找不到題目</span>);\n                }\n                \n                const page = e[0].node;\n                const meta = page.frontmatter;\n                const solution = show_solution === true? \n                    findH2Contents(page.htmlAst, /(題解)|(Solution)/).map((e, idx) => astToReact(e, `T${idx}`))\n                    : \"\";\n                const ojlink = meta.link? (<a href={meta.link} className=\"open-op\" target=\"_blank\">{\" \"}<i className=\"fas fa-external-link-alt\"></i></a>):\"\";\n                const sollink = (<Link to={meta.path} className=\"open-sol\">{\" \"}<i className=\"far fa-lightbulb\"></i></Link>);\n                const md = markdown.processSync(meta.description).contents;\n                \n                // link mode\n                if (is_linkonly === true) {\n                    return (<>\n                        <Difficulty meta={meta} />{\" \"}\n                        {title_prefix}{meta.title}\n                        {ojlink}{sollink}{\" \"}\n                    </>)\n                }\n                // inline mode\n                if (is_inline === true) {\n                    return (<>\n                        <b>{meta.title}</b>\n                        {ojlink}{sollink}{\" \"}\n                        {md}\n                    </>)\n                }\n                // block mode\n                return (<>\n                    <h2 className=\"title is-4\">{title_prefix}{meta.title}{ojlink}</h2>\n                    <Theorem\n                        c=\"is-info\"\n                    >{meta.description}</Theorem>\n                    <p></p>\n                    {solution}\n                    </>\n                    )\n            }}\n            />)\n    }\n} ","import React, {Component, Fragment} from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport markdown from './markdown'\nimport { getBgclassByDifficulty } from './include-problem';\n\nconst findFirstDescendantByType = (node, type) => {\n    if (node.type === type) return node;\n    const {children} = node;\n    if (children !== undefined) {\n        for (var i = 0; i < children.length; i++) {\n            const t = findFirstDescendantByType(children[i], type);\n            if (t !== null) return t;\n        }\n    }\n    return null;\n}\n\nexport const roadmapTransformer = function(options) {\n    if (options.frontmatter !== undefined && options.frontmatter[\"roadmap_label_h3\"] !== null) {\n        var my_counter = 0;\n        const formatter = options.frontmatter[\"roadmap_label_h3\"]\n        function transformer(node, file) {\n            const {type, tagName, children} = node;\n            if (type === \"element\" && tagName === \"h3\") {\n                const t = findFirstDescendantByType(node, 'text')\n                if (t !== null) {\n                    my_counter += 1\n                    t.value = formatter.replace(/###/, `${my_counter}`) + t.value;\n                }\n            } else if (children) {\n                children.forEach(transformer);\n            }\n        }\n        return transformer;\n    }\n    return () => {};\n};\n\nexport class ContentCollection extends Component {\n    render() {\n        const path_prefix = this.props[\"path-prefix\"] || this.props.path_prefix;\n        const tag = this.props[\"tag\"]||\"dummyTag\";\n        const builder = this.props.builder;\n        return (<StaticQuery\n            query={graphql`\n            query contentcollection {\n                pages: allMarkdownRemark {\n                    edges {\n                        node {   \n                            frontmatter {\n                                title\n                                category\n                                path\n                                date\n                                _PARENT\n                                description\n                                link\n                                code\n                                difficulty\n                                oj\n                                tags\n                            }\n                            htmlAst\n                        }\n                     \n                    }\n                }\n            }\n            `}\n            render={(data) => {\n                const pages = data.pages.edges.filter((e) => {\n                    return (\n                        (e.node.frontmatter.path||\"\").startsWith(path_prefix)\n                    ||  (e.node.frontmatter.tags||[]).includes(tag));\n                })\n                return builder(pages);\n            }}\n        />);\n    }\n};\n\nexport class ProblemListAsTags extends Component {\n    render() {\n        const n = parseInt(this.props.n);\n        const label = this.props.label || \"A\"; \n        const path_prefix = this.props[\"path-prefix\"];\n        \n        const getLabel = (label, i) => {\n            if (label === \"A\") return \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[i];\n            return `P${i}`;\n        }\n        const builder = (pages) => {\n            var i, j;\n            var output = [];\n            for (i = 0; i < n; i++) {\n                const l = getLabel(label, i);\n                const link = `${path_prefix}/${l}`;\n                const findPageByPath = (path) => {\n                    for (j = 0; j < pages.length; j++) {\n                        const page = pages[j].node;\n                        if (page.frontmatter.path === `${path_prefix}/${l}`) {\n                            return page;\n                        }\n                    }\n                    return undefined;\n                }\n                const page = findPageByPath(link);\n                const now = new Date();\n                if (page !== undefined &&\n                    page.frontmatter &&\n                    new Date(page.frontmatter.date) <= now) {\n                    output.push((\n                        <Fragment key={i}>\n                        <a href={link}>\n                        <span key={`i-${i}`} style={{fontWeight: 'bold'}} className={`tag ${getBgclassByDifficulty(page.frontmatter.difficulty)}`}>{l}</span>\n                        </a>\n                        {\" \"}\n                        </Fragment>\n                        ))\n                } else {\n                    output.push((\n                        <Fragment key={i}>\n                        <span key={`i-${i}`} className=\"tag\" >{l}</span>\n                        {\" \"}\n                        </Fragment>\n                        ))\n                }\n            }\n            return output;\n        }\n\n        return (<ContentCollection\n            path_prefix={path_prefix}\n            builder={builder}\n        />)\n    }\n};\n\nclass RoadmapSectionTitle extends Component {\n    render() {\n        return (<h3></h3>);\n    }\n};\n\nexport default RoadmapSectionTitle;","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport {graphql, Link} from 'gatsby';\nimport rehypeReact from 'rehype-react';\nimport Prism from 'prismjs';\n\nimport 'prismjs/plugins/custom-class/prism-custom-class.js';\nimport 'prismjs/components/prism-c.js';\nimport 'prismjs/components/prism-cpp.js';\nimport './prism-tomorrow.css';\n\n\nimport \"bulma/css/bulma.css\"\n\nimport CCBYNCSA from '../images/cc-by-nc-sa.png';\nimport Display, {DisplayInner} from './display';\nimport Theorem from './theorem';\nimport Algorithm from './algorithm';\n\nimport IncludeProblem from './include-problem';\nimport { roadmapTransformer, ProblemListAsTags } from './roadmaps';\nimport { footnoteTransformer } from './footnote';\n\nimport markdown from './markdown';\n\n\nconst MyH1 = ({ children }) => (\n  <h1 className=\"title is-3\">{children}</h1>\n)\nconst MyH2 = ({ children }) => (\n  <h2 className=\"title is-4\">{children}</h2>\n)\nconst MyH3 = ({ children }) => (\n  <h3 className=\"title is-5\">{children}</h3>\n)\n\nconst MyCode = ({ className, children }) => {\n  return (<code className={className}>{children}</code>)\n}\n\nconst MySVG = ({ width, height, viewbox, children }) => {\n  return (<svg width={width} height={height} viewBox={viewbox}>{children}</svg>)\n}\n\nclass ShowVariable extends Component {\n  render() {\n    const frontmatter = this.frontmatter || {};\n    const varname = this.props.varname;\n    const val = frontmatter[varname]\n    return (<div>{markdown.processSync(val).contents}</div>);\n  }\n};\n\nclass Template extends Component {\n  componentDidMount() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  componentDidUpdate() {\n    window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub])\n    Prism.plugins.customClass.prefix('prism--')\n    Prism.highlightAll();\n  }\n  render() {\n    const data = this.props.data;\n    const post = data.markdownRemark;\n\n    const statefulRenderAst = (frontmatter) => {\n      class ShowVariable2 extends ShowVariable {\n        constructor() {\n          super()\n          this.frontmatter = frontmatter;\n        }\n      }\n      \n      return (ast) => {\n        const modifiedAst = JSON.parse(JSON.stringify(ast));\n        roadmapTransformer({frontmatter: frontmatter})(modifiedAst);\n        footnoteTransformer({frontmatter: frontmatter})(modifiedAst);\n        return new rehypeReact({\n          createElement: React.createElement,\n          components: {\n            h1: MyH1,\n            h2: MyH2,\n            h3: MyH3,\n            code: MyCode,\n            display: Display,\n            \"display-inner\": DisplayInner, \n            mysvg: MySVG,\n            showvariable: ShowVariable2,\n            theorem: Theorem,\n            algorithm: Algorithm,\n            mylink: Link,\n            \"include-problem\": IncludeProblem,\n            \"problem-list-as-tags\": ProblemListAsTags,\n          }\n        }).Compiler(modifiedAst);\n      }\n    }\n\n    return (\n      <div>\n          <Helmet title={`CodeStack - ${post.frontmatter.title}`} />\n          <section className=\"hero is-dark\">\n          <div className=\"hero-body\">\n          <div className=\"container\">\n          <span className=\"is-pulled-right\">\n          <Link to={post.frontmatter.backlink || \"/blog\"}>\n          <span className=\"icon has-text-warning\">\n            <i className=\"fas fa-lg fa-home\"></i>\n            </span> 返回\n          </Link>\n          </span>\n          <Link to={post.frontmatter.path}>\n          <h1 className=\"title\">{post.frontmatter.title}</h1>\n          <h2 className=\"subtitle\">{post.frontmatter.date}</h2>\n          </Link>\n          </div>\n          </div>\n          </section>\n          <section className=\"section\">\n          <div className=\"container\">\n          <div className=\"content\">\n          { statefulRenderAst(post.frontmatter)(post.htmlAst) }\n          </div>\n          </div>\n          </section>\n          <footer className=\"footer\">\n          <div className=\"content\">\n          <div className=\"is-flex is-vcentered is-centered\">\n          <img style={{height:\"32px\", margin:\"10px\"}} src={ CCBYNCSA } /> \n          <p style={{maxWidth:\"600px\"}}>\n          本文由<b>卡恩</b>(tmt514)撰寫。\n          本站使用 <a href=\"https://www.gatsbyjs.org/\">GasbyJS</a> 搭配 {}\n          <a href=\"https://bulma.io/\">Bulma</a> 製作，其原始碼為 MIT 授權。\n          網站內容除了題源以外，若無特別說明皆為創用 CC-BY-NC-SA 4.0 授權。\n          題源部份若有版權爭議還請與我聯繫，感恩。\n          </p>\n          </div>\n          </div>\n          </footer>\n      </div>\n    );\n  }\n}\nexport default Template;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        description\n        roadmap_label_h3\n        backlink\n      }\n    }\n  }\n`\n;","\nimport React from 'react';\nimport visit from 'unist-util-visit';\nimport u from 'unist-builder';\n\nexport const footnoteTransformer = function(options) {\n    function transformer(node, file) {\n        const dict = {};\n        visit(node, 'element', function(node) {\n            const {type, tagName, properties} = node;\n            if (tagName === \"footnote\") {\n                if (properties.goto !== undefined) {\n                    dict[properties.goto] = node;\n                }\n            }\n        });\n        visit(node, 'element', function(node) {\n            const {type, tagName, properties} = node;\n            if (tagName === \"footnote\") {\n                if (properties.here !== undefined && dict[properties.here] !== undefined) {\n                    var far = dict[properties.here];\n                    var near = node;\n                    // This has to be static.\n                    var id_far = `fn-${properties.here}-far`;\n                    var id_near = `fn-${properties.here}-near`;\n                    //var id_far = Math.random().toString(36).substr(2);\n                    //var id_near = Math.random().toString(36).substr(2);\n                    var display = far.properties.show || properties.here;\n                    far.tagName = \"span\";\n                    far.children.push(u('element', {tagName: 'a', properties: {href: `#${id_near}`}}, [u('text', `[👣${display}]`)]));\n                    far.properties.id = id_far;\n                    far.properties.style = {\n                        verticalAlign: \"super\",\n                        fontSize: \"60%\",\n                    };\n                    near.tagName = \"span\";\n                    near.children.push(u('element', {tagName: 'a', properties: {href: `#${id_far}`}}, [u('text', `[🔙]`)]));\n                    near.properties.id = id_near;\n                    near.properties.style = {\n                        verticalAlign: \"super\",\n                        fontSize: \"60%\",\n                    };\n                }\n            }\n        });\n    }\n    return transformer;\n};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// Helper class of functions on updating ui.\nexport class GraphNodeUIHelper {\n    static updateNodePropsByStyleRules(nodeProps, styleRules, classNames) {\n        if (styleRules === undefined) return;\n        const ruleIDs = Object.keys(styleRules);\n        for (let ruleID of ruleIDs) {\n            const rule = styleRules[ruleID];\n            if (classNames.includes(rule.apply_to)) {\n                const z = eval('((' + rule.pure_predicate_fn + ')(nodeProps))');\n                if (z === true) {\n                    Object.assign(nodeProps, rule.options||{});\n                }\n            }\n        }\n    }\n    static updateNodePropsByStyles(nodeProps, styles, id) {\n        if (styles === undefined) return;\n        Object.assign(nodeProps, styles[id]||{});\n    }\n    static updateNodePropsFromUIStore(nodeProps, uiStore, id, classNames) {\n        if (uiStore === undefined) return;\n        \n        // StyleRules\n        GraphNodeUIHelper.updateNodePropsByStyleRules(nodeProps, uiStore.styleRules, classNames);\n        \n        // Styles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.styles, id);\n        \n        // OnceStyles\n        GraphNodeUIHelper.updateNodePropsByStyles(nodeProps, uiStore.onceStyles, id);\n    }\n}\n\n\nexport function combineUIHelpers(props) {\n    const uiStore = {\n        styleRules: {},\n        styles: {},\n    }\n    const contentToOptions = eval('('+(props[\"uihelper-content-map\"]||\"{}\")+')')\n    for (var content of Object.keys(contentToOptions)) {\n        uiStore.styleRules[`content-rule-${content}`] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => {return nodeProps.content === '${content}'}`,\n            options: contentToOptions[content],\n        }\n    }\n\n    const idToOptions = eval('('+(props[\"uihelper-id-map\"]||\"{}\")+')')\n    Object.assign(uiStore.styles, idToOptions)\n\n    if (props[\"uihelper-node-style\"] !== undefined) {\n        const nodeOptions = eval('('+(props[\"uihelper-node-style\"]||\"{}\")+')')\n        uiStore.styleRules['all-node-style'] = {\n            apply_to: 'node',\n            pure_predicate_fn: `(nodeProps) => true`,\n            options: nodeOptions,\n        }\n    }\n\n    return uiStore;\n}\n\nexport function makeUIStores(nextProps) {\n    return [\n        combineUIHelpers(nextProps),\n        eval(`(` + nextProps.uistore + `)`),\n        nextProps.uiStoreFromAlgorithm];\n}\n\nexport default combineUIHelpers;","export default class AnchorInfo {\n    constructor(who, angle, at, extraDistance, offset) {\n        this.who = who;\n        this.angle = angle;\n        this.at = at;\n        this.extraDistance = extraDistance;\n        this.offset = offset;\n    }\n};\n\n","import { Rectangle } from './shapes'\n\nexport const defaultLineHeight = 16;\n\nexport const defaultNodeProps = {\n    id: \"dummyID\",\n\n    // Defines contents.\n    text: \"\",\n    label: null,\n    font: \"12pt Roboto\",\n    fontColor: undefined,\n    lineHeight: 16,\n    padding: 8,\n\n    // Box Size\n    minWidth: undefined,\n    minHeight: undefined,\n    maxWidth: undefined,\n    maxHeight: undefined,\n\n    // Describes the surrounding shape.\n    boundingShapeClass: Rectangle,\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: \"miter\",\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: \"none\",\n\n    // Handles position.\n    cx: undefined, // X-coordinate for the center.\n    cy: undefined, // Y-coordinate for the center.\n\n    cxAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"center\", extraDistance: 123 }\n    cyAnchor: undefined, // info = { who: \"nodeID\", angle: 0, at: \"boundary\", extraDistance: 123 }\n    leftAnchors: [],\n    rightAnchors: [],\n    upAnchors: [],\n    downAnchors: [],\n    // TODO(tmt514): rotatedAnchors?\n}\n\nexport const defaultEdgeProps = {\n    id: \"dummyID\",\n    \n    stroke: \"black\",\n    strokeWidth: \"1\",\n    strokeLinejoin: undefined,\n    strokeLineCap: undefined,\n    strokeDasharray: undefined,\n    fill: undefined,\n    \n    pathAnchors: [],\n\n    markerStart: undefined,\n    markerEnd: undefined,\n    markerMid: undefined,\n}","import React from 'react'\nimport GraphCollection from './graph-collection'\n\n\nclass GraphToSVG {\n    constructor() {\n        this.graph = new GraphCollection()\n        this.markerStore = {}\n    }\n\n    addNode(nodeProps, GraphNodeClass) {\n        return this.graph.addNode(nodeProps, GraphNodeClass)\n    }\n\n    // Helper functions that extract markers from edge props.\n    static getMarkersFromEdgeProps(edgeProps) {\n        var markers = []\n        if (edgeProps.markerStart !== undefined) markers.push(edgeProps.markerStart);\n        if (edgeProps.markerMid !== undefined) markers.push(edgeProps.markerMid);\n        if (edgeProps.markerEnd !== undefined) markers.push(edgeProps.markerEnd);\n        return markers;\n    }\n\n    addEdge(edgeProps, GraphEdgeClass) {\n        for (let marker of GraphToSVG.getMarkersFromEdgeProps(edgeProps)) {\n            this.markerStore[marker.props.id] = marker;\n        }\n        return this.graph.addEdge(edgeProps, GraphEdgeClass)\n    }\n\n    renderSVG() {\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        \n        this.graph.updateViewBox(viewbox, {x: 0, y: 0})\n        \n        // Adds some paddings.\n        viewbox.lx -= 10;\n        viewbox.ly -= 10;\n        viewbox.rx += 10;\n        viewbox.ry += 10;\n        \n        const w = Math.min(900, viewbox.rx - viewbox.lx);\n        const h = Math.min(700, viewbox.ry - viewbox.ly);\n        \n        // Render all markers.\n        const markers = Object.keys(this.markerStore).map((id) => {\n            return this.markerStore[id].renderSVG()\n        })\n        return (<svg width={w} height={h} style={{maxWidth:\"100%\"}} viewBox={`${viewbox.lx} ${viewbox.ly} ${viewbox.rx - viewbox.lx} ${viewbox.ry - viewbox.ly}`}>\n            {markers.length > 0 && (<defs>{markers}</defs>)}\n            {this.graph.renderSVG({x: 0, y: 0})}\n        </svg>)\n    }\n}\n\nexport default GraphToSVG;","import React from 'react';\n\nexport class Rectangle {\n\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        if (degree === 0) return {x: this.width/2, y: 0};\n        if (degree === 90) return {x: 0, y: this.height/2};\n        if (degree === 180) return {x: -this.width/2, y: 0};\n        if (degree === 270) return {x: 0, y: -this.height/2};\n\n        const rad = degree / 180.0 * Math.PI;\n        const c = Math.cos(rad);\n        const s = Math.sin(rad);\n        var vline = this.width/2;\n        var hline = this.height/2;\n        vline = (c === 0? Infinity: vline / c);\n        hline = (s === 0? Infinity: hline / s);\n        const dist = Math.min(Math.abs(vline), Math.abs(hline));\n        return {x: c*dist, y: s*dist}\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        return (<polyline\n            points={`${cx-boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy-boxHeight}\n                    ${cx+boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy+boxHeight}\n                    ${cx-boxWidth} ${cy-boxHeight}`}\n            />)\n    }\n\n    updateViewBox(viewbox, {x, y}) {\n        const cx = x;\n        const cy = y;\n        var boxWidth = this.width/2;\n        var boxHeight = this.height/2;\n        var lx = cx-boxWidth;\n        var ly = cy-boxHeight;\n        var rx = cx+boxWidth;\n        var ry = cy+boxHeight;\n        lx = Math.floor(lx);\n        ly = Math.floor(ly);\n        rx = Math.ceil(rx);\n        ry = Math.ceil(ry);\n        \n        viewbox.lx = Math.min(viewbox.lx, lx);\n        viewbox.ly = Math.min(viewbox.ly, ly);\n        viewbox.rx = Math.max(viewbox.rx, rx);\n        viewbox.ry = Math.max(viewbox.ry, ry);\n    }\n};\n","import React from 'react'\nimport { defaultNodeProps, defaultLineHeight } from './ui-defaults'\nimport GraphNode from './graph-node';\nimport { Rectangle } from './shapes';\n\nexport class GraphTextNode extends GraphNode {\n    constructor(props) {\n        super(props)\n        this.text = new Text(props.text, props);\n        this.rect = new Rectangle(this.text.width, this.text.height);\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        return this.rect.getPeripheralOffsetByAngle(degree);\n    }\n    \n    getAnchorPoint(anchorInfo) {\n        throw \"Not Implemented\";\n    }\n    \n    updateViewBox(viewboxToBeUpdated, offset) {\n        return this.rect.updateViewBox(viewboxToBeUpdated, offset);\n    }\n    \n    renderSVG(offset) {\n        return this.text.renderSVG(offset);\n    }\n};\n\nexport class Text {\n\n    // Measuring Text Width, assuming Roboto From\n    // https://bl.ocks.org/tophtucker/62f93a4658387bb61e4510c37e2e97cf\n    static measureText(string, fontSize = 10) {\n        const widths = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0734375,0.4,0.5,0.9,0.8,0.9,0.9,0.4,0.6,0.5,0.7,0.8,0.4,0.5,0.4,0.6,0.8,0.6609375,0.8,0.7,0.8,0.8,0.8,0.8,0.8,0.7,0.4,0.4,0.7,0.7,0.7,0.7,1.1,0.9,0.8,0.9,0.8,0.8,0.8,0.9,0.9,0.4,0.7,0.9,0.8,1,0.9,0.9,0.8,0.9,0.8,0.8,0.8,0.8,0.9,1.1,0.8,0.8,0.8,0.5,0.7,0.4,0.6,0.7,0.5,0.7,0.8,0.7,0.7,0.7,0.6,0.7,0.7,0.4,0.5,0.8,0.4,1.1,0.7,0.8,0.8,0.7,0.6,0.7,0.5,0.7,0.7,1,0.7,0.7,0.7,0.6,0.4,0.6,0.9]\n        const avg = 0.7098355263157895\n        return string\n          .split('')\n          .map(c => c.charCodeAt(0) < widths.length ? widths[c.charCodeAt(0)] : avg)\n          .reduce((cur, acc) => acc + cur) * fontSize\n    }\n\n    static getTextWidth(s, props) {\n        if (typeof window === `undefined`) {\n            return Text.measureText(s, (props.lineHeight || defaultNodeProps.lineHeight));\n        }\n        var canvas = Rectangle.hiddenCanvas || (Rectangle.hiddenCanvas = window.document.createElement(\"canvas\"))\n        var ctx = canvas.getContext(\"2d\");\n        ctx.font = (props.font || defaultNodeProps.font);\n        return ctx.measureText(`${s}`).width;\n    }\n\n    constructor(text, props) {\n        this.props = props\n        this.text = text\n\n        this.textLines = text.split(\"\\n\").filter((e) => e !== \"\");\n        this.width = Math.max(0, ...this.textLines.map((s) => Text.getTextWidth(s, this.props)));\n        this.height = (props.lineHeight || defaultNodeProps.lineHeight) * this.textLines.length;\n    }\n\n    getSize() {\n        return {width: this.width, height: this.height};\n    }\n\n    renderSVG({x, y}) {\n        const cx = x;\n        const cy = y;\n        const textLineHeight = this.props.lineHeight || defaultLineHeight;\n        var textsvgs = []\n        var i;\n        var startY = cy - this.height/2 + textLineHeight/2;\n        for (i = 0; i < this.textLines.length; i++) {\n            textsvgs.push(<text key={`text-${i}`} x={cx} y={startY}>{this.textLines[i]}</text>)\n            startY += textLineHeight;\n        }\n        const style = {\n            font: this.props.font,\n            fill: this.props.fontColor,\n        }\n        return (\n            <g dominantBaseline=\"central\" textAnchor=\"middle\" style={style}>\n                {textsvgs}\n            </g>\n        );\n    }\n}","import React from 'react'\nimport GraphNode from './graph-node'\nimport { Rectangle } from './shapes'\nimport { GraphTextNode } from './graph-text-node';\nimport GraphCollection from './graph-collection';\nimport AnchorInfo from './anchor-info';\n\nexport default class GraphRectangularNode extends GraphNode {\n    // props.content should store the \"inner\" GraphNode.\n    constructor(props, updateProps) {\n        super(props)\n        this.innerNode = props.content;\n        this.boundingShape = this.getBoundingShape();\n    }\n\n    getBoundingShape() {\n        const innerNode = this.innerNode;\n        const paddingX = (this.props.paddingX || this.props.padding);\n        const paddingY = (this.props.paddingY || this.props.padding);\n        var width = innerNode.getPeripheralOffsetByAngle(0).x - innerNode.getPeripheralOffsetByAngle(180).x + paddingX*2;\n        var height = innerNode.getPeripheralOffsetByAngle(90).y - innerNode.getPeripheralOffsetByAngle(270).y + paddingY*2;\n        if (this.props.maxWidth) width = Math.min(width, this.props.maxWidth);\n        if (this.props.minWidth) width = Math.max(width, this.props.minWidth);\n        if (this.props.maxHeight) height = Math.min(height, this.props.maxHeight);\n        if (this.props.minHeight) height = Math.max(height, this.props.minHeight);\n        return new Rectangle(width, height)\n    }\n\n    updateProps(newProps) {\n        throw \"Not Supported\";\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        return this.boundingShape.getPeripheralOffsetByAngle(degree);\n    }\n\n    // Given computed center coordinates, generate entire SVG.\n    renderSVG(offset) {\n        return (<g key={`n-${this.props.id}`}>\n            <g\n                stroke={this.props.stroke}\n                strokeWidth={this.props.strokeWidth}\n                fill={this.props.fill}>\n                {this.boundingShape.renderSVG(offset)}\n            </g>\n            { this.innerNode.renderSVG(offset) }\n        </g>)\n    }\n\n    // Visitor pattern...?\n    updateViewBox(viewbox, center) {\n        this.boundingShape.updateViewBox(viewbox, center)\n    }\n    \n};\n\nexport class GraphRectangularTextNode extends GraphRectangularNode {\n    constructor(props) {\n        super(Object.assign(props, {content: new GraphTextNode(props)}))\n    }\n\n    updateProps(newProps) {\n        const hasTextChanged = (newProps.text !== undefined);\n        Object.assign(this.props, newProps)\n        if (hasTextChanged === true) {\n            this.innerNode = new GraphTextNode(this.props);\n        }\n        this.boundingShape = this.getBoundingShape();\n    }\n}\n\nexport class GraphArrayNode extends GraphRectangularNode {\n    // props.content will be an array.\n    constructor(props) {\n        const data = props.content;\n        const collection = new GraphCollection();\n        const nodes = []\n        var lastNode = null;\n        var i;\n        for (i = 0; i < data.length; i++) {\n            const nodeOrText = data[i];\n            var node;\n            if ((typeof nodeOrText) !== \"object\") {\n                node = collection.addNode({...props, id: \"dummyID\", text: `${nodeOrText}`}, GraphRectangularTextNode);\n            } else {\n                node = collection.addNode(nodeOrText);\n            }\n            // make sure anchors are correct.\n            node.resetAnchors();\n            if (lastNode !== null) {\n                node.updateProps({\n                    leftAnchors: [new AnchorInfo(lastNode.props.id, 0, \"boundary\", 0)],\n                    cyAnchor: new AnchorInfo(lastNode.props.id, 0, \"center\", 0),\n                })\n            } else {\n                node.updateProps({\n                    cx: 0,\n                    cy: 0,\n                })\n            }\n            lastNode = node;\n            nodes.push(node);\n        }\n        // Adjust min-height\n        const minHeight = Math.max(0, ...nodes.map((node) => node.getHeight()));\n        nodes.forEach((node) => node.updateProps({ minHeight: minHeight }));\n\n        super({ ...props, padding: 0, strokeWidth: \"0\", content: collection });\n        this.collection = collection;\n        this.data = data;\n        this.dataNodes = nodes;\n    }\n\n    getAnchorPoint(anchorInfo, center) {\n        if (typeof anchorInfo.at !== \"string\")\n            return this.collection.getAnchorPoint(anchorInfo, center);\n        return GraphRectangularNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n    }\n    \n    updateProps(newProps) {\n        console.log(newProps);\n    }\n}\n","import React from 'react';\nimport { defaultLineHeight, defaultNodeProps } from './ui-defaults'\n\nexport default class GraphNode {\n    constructor(props) {\n        this.props = Object.assign({}, defaultNodeProps)\n        this.props = Object.assign(this.props, props)\n    }\n    \n    // Whenever a property changes, the bounding shape needs to be updated.\n    updateProps(newProps) {\n        Object.assign(this.props, newProps);\n    }\n\n    // Computes the most distant point of the bounding shape on the ray\n    // shooting from the angle, returns a point (x, y).\n    getPeripheralOffsetByAngle(degree) {\n        throw \"Not Implemented\";\n    }\n    \n    // Computes the anchor point by anchor information.\n    getAnchorPoint(anchorInfo, center={x: 0, y: 0}) {\n\n        // Handle single array wrapper.\n        // This enables indirect access for GraphCollections.\n        var at = anchorInfo.at;\n        if (Array.isArray(at) === true) {\n            at = at[0];\n        }\n\n        // Helper function to compute anchor to offset.\n        var angle = anchorInfo.angle || 0;\n        var rad = anchorInfo.angle / 180.0 * Math.PI;\n        var ed = anchorInfo.extraDistance || 0;\n        \n        var cx = center.x;\n        var cy = center.y;\n        if (at === \"boundary\") {\n            const offset = this.getPeripheralOffsetByAngle(angle);\n            cx += offset.x;\n            cy += offset.y;\n        }\n        \n        if (anchorInfo.offset !== undefined) {\n            cx += anchorInfo.offset.x;\n            cy += anchorInfo.offset.y;\n        }\n\n        cx += Math.cos(rad) * ed;\n        cy += Math.sin(rad) * ed;\n        return {x:cx, y:cy}\n    }\n    \n    // Visitor pattern...?\n    updateViewBox(viewboxToBeUpdated, offset) {\n        throw \"Not Implemented\";\n    }\n    \n    // Given the transition offsets {x, y}.\n    renderSVG(offset) {\n        throw \"Not Implemented\";\n    }\n\n    getWidth() {\n        return this.getPeripheralOffsetByAngle(0).x - this.getPeripheralOffsetByAngle(180).x\n    }\n    getHeight() {\n        return this.getPeripheralOffsetByAngle(90).y - this.getPeripheralOffsetByAngle(270).y\n    }\n    \n    // Helper function that resets anchor functions correctly.\n    resetAnchors() {\n        const positionalProps = [\"cx\", \"cy\", \"cxAnchor\", \"cyAnchor\"];\n        for (let key of positionalProps) {\n            this.props[key] = undefined;\n        }\n        Object.assign(this.props, {\n            leftAnchors: [],\n            rightAnchors: [],\n            upAnchors: [],\n            downAnchors: [],\n        });\n    }\n};\n","\n// Helper functions converting different data fields into canonical internal formats.\nclass DataHelper {\n    static getDataFromProps(props) {\n        var data = undefined;\n\n        // The simplest format is a JSON string.\n        if (props.data !== undefined) {\n            if (props.data instanceof Array || props.data instanceof Object) {\n                return props.data;\n            }\n            try {\n                data = JSON.parse(props.data);\n            } catch(err) {\n                data = eval(`(${props.data})`);\n            }\n            return data;\n        }\n    }\n};\n\nexport default DataHelper;","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\n\nclass DisplayGrid extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n\n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || []\n        newState.n_row = (nextProps.n_row && parseInt(nextProps.n_row)) || data.length\n        newState.n_col = (nextProps.n_col && parseInt(nextProps.n_col)) || (data[0] && data[0].length) || 0\n        \n        newState.ui = new GraphToSVG;\n        while (newState.data.length < newState.n_row) {\n            newState.data.push(\" \".repeat(newState.n_col))\n        } \n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n_row; i++) {\n            for (let j = 0; j < newState.n_col; j++) {\n                const nodeProps = {\n                    id: `grid-${i}-${j}`,\n                    text: `${newState.data[i][j]}`,\n                    content: newState.data[i][j],\n                    font: `12pt Courier New`,\n                    padding: 4,\n                    lineHeight: 12,\n                };\n\n                if (nextProps.notext !== undefined) {\n                    nodeProps.text = ``;\n                    nodeProps.padding = 10;\n                }\n                \n\n                if (i === 0 && j === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else if (j > 0) {\n                    nodeProps.leftAnchors = [new AnchorInfo(`grid-${i}-${j-1}`, 0, 'boundary', 0)];\n                    nodeProps.cyAnchor = new AnchorInfo(`grid-${i}-${j-1}`, 0, 'center', 0);\n                } else { // i > 0.\n                    nodeProps.downAnchors = [new AnchorInfo(`grid-${i-1}-${j}`, 90, 'boundary', 0)];\n                    nodeProps.cxAnchor = new AnchorInfo(`grid-${i-1}-${j}`, 0, 'center', 0);\n                }\n                // Id corresponds to Coordinates in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, JSON.stringify([i, j]), ['all', 'node'])\n                });\n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n\n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayGrid;","import React, { Component } from 'react';\n\nexport class Quadrant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clip_id: \"clip\" + Math.random().toString(36).substring(2),\n        }\n    }\n\n    getBoundaryPaths() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n\n        return [\n            {x1: cx, y1: cy, x2: cx+r*cos_s, y2: cy+r*sin_s},\n            {x1: cx, y1: cy, x2: cx+r*cos_e, y2: cy+r*sin_e}\n        ]\n    }\n    \n    getPath() {\n        const cx = parseFloat(this.props.x);\n        const cy = parseFloat(this.props.y);\n        var s = this.props[\"angle-start\"];\n        var e = this.props[\"angle-end\"];\n        \n        const r = parseFloat(this.props.r);\n        if (s === undefined) s = 0;\n        if (e === undefined) e = 360;\n        s = parseFloat(s) / 180 * Math.PI;\n        e = parseFloat(e) / 180 * Math.PI;\n        while (e < s) e += 2*Math.PI;\n        \n        const cos_s = Math.cos(s);\n        const sin_s = Math.sin(s);\n        \n        const cos_e = Math.cos(e);\n        const sin_e = Math.sin(e);\n        \n        console.log(s, e);\n        const largeArcFlag = (e >= s + Math.PI? 1 : 0);\n        \n        const path = [\n            `M ${cx} ${cy}`,\n            `L ${cx+r*cos_s} ${cy+r*sin_s}`,\n            `A ${r} ${r} 0 ${largeArcFlag} 1 ${cx+r*cos_e} ${cy+r*sin_e}`,\n        ];\n        \n        return path.join(\" \");\n    }\n    \n    render() {\n        const d = this.getPath();\n        const b = this.getBoundaryPaths();\n        console.log(d, b);\n        \n        \n        const href = this.props[\"clip-href\"];\n        console.log(this.props.c);\n\n        \n        return (<>\n        <clipPath id={this.state.clip_id}>\n            <use href={href||\"\"} />\n        </clipPath>\n        {\n            this.props[\"boundary-at-start\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary start`}\n                {...b[0]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        {\n            this.props[\"boundary-at-end\"] !== undefined &&\n            <line\n                className={`${this.props.c} quadrant boundary end`}\n                {...b[1]}\n                clipPath={`url(#${this.state.clip_id})`}\n            />\n        }\n        <path\n            className={`${this.props.c} quadrant region`}\n            d={d}\n            clipPath={`url(#${this.state.clip_id})`}\n            />\n        {\n            this.props[\"dot-at-origin\"] !== undefined &&\n            <circle\n                cx={this.props.x} cy={this.props.y}\n                r=\"5\"\n                className={`${this.props.c} quadrant origin`}\n            />\n        }\n        </>)\n    }\n};","import React from 'react'\n\nconst defaultMarkerProps = {\n    id: \"dummyID\",\n    orient: \"auto\"\n}\n\nexport default class Marker {\n    constructor(props) {\n        this.props = Object.assign({}, defaultMarkerProps, props);\n    }\n    renderSVG() {\n        return (<marker {...this.props} key={this.props.id} />)\n    }\n};\n\nexport const markerSquare = new Marker({\n    id: \"markerSquare\",\n    markerWidth: 7,\n    markerHeight: 7,\n    refX: 4,\n    refY: 4,\n    children: (<rect x=\"1\" y=\"1\" width=\"5\" height=\"5\" style={{stroke: \"none\", fill: \"black\"}}/>),\n})\n\nexport const markerCircle = new Marker({\n    id: \"markerCircle\",\n    markerWidth: 12,\n    markerHeight: 12,\n    refX: 4,\n    refY: 4,\n    children: (<circle cx=\"4\" cy=\"4\" r=\"4\" />),\n})\n\nexport const markerTriangle = new Marker({\n    id: \"markerTriangle\",\n    markerWidth: 10,\n    markerHeight: 10,\n    refX: 10,\n    refY: 5,\n    children: (<path d=\"M 0 0 L 10 5 L 0 10 z\" />),\n})","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode, GraphArrayNode } from './display-ui/graph-rectanglur-node';\nimport { markerCircle, markerTriangle } from './display-gadgets/markers';\n\nclass DisplayLinkedList extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        const data = DataHelper.getDataFromProps(nextProps);\n        const isDoublyLinkedList = nextProps.double !== undefined;\n        const isCircularLinkedList = nextProps.circular !== undefined;\n        newState.data = data || []\n        newState.n = data.length;\n        newState.ui = new GraphToSVG;\n        \n        const nodelist = [];\n        for (let i = 0; i < newState.n; i++) {\n            const ptrSlot = new GraphRectangularTextNode({id: `ptr-next`, text: \"  \"});\n            var contentArray = [newState.data[i], ptrSlot];\n            if (isDoublyLinkedList) {\n                contentArray = [new GraphRectangularTextNode({id: `ptr-prev`, text: \"  \"}), ...contentArray]\n            }\n            const nodeProps = {\n                id: `linked-list-${i}`,\n                text: `${newState.data[i]}`,\n                content: contentArray,\n            }\n            \n            if (i == 0) {\n                nodeProps.cx = 0;\n                nodeProps.cy = 0;\n            } else {\n                nodeProps.leftAnchors = [new AnchorInfo(`linked-list-${i-1}`, 0, 'boundary', 50)];\n                nodeProps.cyAnchor = new AnchorInfo(`linked-list-${i-1}`, 0, 'center', 0);\n            }\n             \n            // Id corresponds to Coordinates in the array.\n            uiStores.forEach((uiStore) => {\n                GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n            });\n            const node = newState.ui.addNode(nodeProps, GraphArrayNode);\n            nodelist.push(node);\n\n            // create edges.\n            if (i === 0) continue;\n            \n            if (isDoublyLinkedList) {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 4}),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0, {x: 0, y: 4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n                const backedgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i}`, 0, ['ptr-prev', 'center'], 0, {x: 0, y: -4}),\n                              new AnchorInfo(`linked-list-${i-1}`, 0, 'entire-node', 0, {x: 0, y: -4})],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(backedgeProps)\n            } else {\n                const edgeProps = {\n                    pathAnchors: [new AnchorInfo(`linked-list-${i-1}`, 0, ['ptr-next', 'center'], 0),\n                                  new AnchorInfo(`linked-list-${i}`, 0, 'entire-node', 0)],\n                    markerStart: markerCircle,\n                    markerEnd: markerTriangle,\n                }\n                newState.ui.addEdge(edgeProps);\n            }\n        }\n        if (isCircularLinkedList) {\n            const edgeProps = {\n                pathAnchors: [new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0),\n                              new AnchorInfo(`linked-list-${newState.n-1}`, 0, ['ptr-next', 'center'], 0, {x: 0, y: 30}),\n                              new AnchorInfo(`linked-list-${0}`, 90, 'boundary', 0, {x: 0, y: 15}),\n                              new AnchorInfo(`linked-list-${0}`, 0, 'entire-node', 0)],\n                markerStart: markerCircle,\n                markerEnd: markerTriangle,\n                fill: \"none\",\n            }\n            newState.ui.addEdge(edgeProps);\n        }\n        \n        var w = -Infinity;\n        var h = -Infinity;\n        nodelist.forEach((node) => {\n            console.warn(node);\n            w = Math.max(w, node.getWidth());\n            h = Math.max(h, node.getHeight());\n        })\n        \n        h = w = Math.max(w, h);\n        \n        const newNodeProps = {\n            minHeight: h,\n            minWidth: w,\n        };\n            \n        nodelist.forEach((node) => {\n            node.updateProps(newNodeProps)\n        })        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayLinkedList;","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport DataHelper from './data-helper';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\nimport { defaultNodeProps } from './display-ui/ui-defaults';\n\nexport default class DisplayGraph extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        \n        const data = DataHelper.getDataFromProps(nextProps);\n        newState.data = data || {};\n        \n        if (newState.ui === undefined) {\n            newState.ui = new GraphToSVG;\n            newState.nodelist = {};\n            newState.edgelist = {};\n        }\n        const nodelist = newState.nodelist;\n        const edgelist = newState.edgelist;\n        for (let i = 0; i < data.nodes.length; i++) {\n            if (nodelist[`node-${data.nodes[i]}`] === undefined) {\n                const nodeProps = {\n                    id: `node-${data.nodes[i]}`,\n                    cx: Math.random() * 600,\n                    cy: Math.random() * 480,\n                    text: \"\",\n                    content: \"\",\n                };\n                \n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${data.nodes[i]}`, ['all', 'node'])\n                });\n\n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist[nodeProps.id] = node;\n            }\n            // TODO: update uiStores here. (maybe by copying a node?)\n        }\n        for (let i = 0; i < data.edges.length; i++) {\n            const e = data.edges[i];\n            if (edgelist[`edge-${i}-${e[0]}-${e[1]}`] === undefined) {\n                const edgeProps = {\n                    id: `edge-${i}-${e[0]}-${e[1]}`,\n                    pathAnchors: [new AnchorInfo(`node-${e[0]}`, 0, 'entire-node', 0),\n                                    new AnchorInfo(`node-${e[1]}`, 0, 'entire-node', 0)],\n                }\n\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(edgeProps, uiStore, `[${e[0]},${e[1]}]`, ['all', 'edge'])\n                });\n\n                const edge = newState.ui.addEdge(edgeProps);\n                edgelist[edgeProps.id] = edge;\n            }\n            // TODO: need to reset UI properties.\n        }\n        const nodeids = Object.keys(nodelist);\n        for (let _ = 0; _ < 100; _++) {\n            for (let i = 0; i < nodeids.length; i++) {\n                const node = nodelist[nodeids[i]];\n                const node_id = node.props.id;\n                var dir_adjust = [];\n                const currentX = node.props.cx;\n                const currentY = node.props.cy;\n                \n                const getDist = (thereX, thereY) => {\n                    return Math.sqrt((currentX - thereX) * (currentX - thereX)\n                    + (currentY - thereY) * (currentY - thereY));\n                }\n                for (let j = 0; j < nodeids.length; j++) {\n                    const there = nodelist[nodeids[j]];\n                    if (there.props.id === node_id) continue;\n                    const thereX = there.props.cx;\n                    const thereY = there.props.cy;\n                    const dist = getDist(thereX, thereY);\n                    if (dist < 75) {\n                        dir_adjust.push([ (thereX - currentX) * (dist-75)/dist,\n                                        (thereY - currentY) * (dist-75)/dist]);\n                    }\n                }\n                \n                for (let j = 0; j < data.edges.length; j++) {\n                    const e = data.edges[j];\n                    const u_id = `node-${e[0]}`;\n                    const v_id = `node-${e[1]}`;\n                    var thereX, thereY;\n                    if (node_id === u_id) {\n                        thereX = nodelist[v_id].props.cx;\n                        thereY = nodelist[v_id].props.cy;\n                    } else if (node_id === v_id) {\n                        thereX = nodelist[u_id].props.cx;\n                        thereY = nodelist[u_id].props.cy;\n                    } else {\n                        continue;\n                    }\n                    const dist = getDist(thereX, thereY);\n                    if (dist < 95 || dist >= 105) {\n                        dir_adjust.push([ (thereX - currentX) * (dist-100)/dist,\n                                            (thereY - currentY) * (dist-100)/dist]);\n                    } else {\n                        dir_adjust.push([0, 0]);\n                    }\n                }\n                if (dir_adjust.length > 0) {\n                    const dx = dir_adjust.map((d) => d[0]).reduce((p, c) => p+c) / dir_adjust.length;\n                    const dy = dir_adjust.map((d) => d[1]).reduce((p, c) => p+c) / dir_adjust.length;\n                    node.updateProps({\n                        cx: currentX + dx,\n                        cy: currentY + dy,\n                    });\n                }\n            }\n        }\n        return newState;\n    }\n    render() {\n        return (\n        <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        );\n    }\n};","import React, {Component} from 'react';\nimport DisplayArray from './display-array';\nimport DisplayGrid from './display-grid';\nimport { Quadrant } from './display-gadgets/rectangle'\nimport DisplayLinkedList from './display-linked-list';\nimport DisplayGraph from './display-graph';\n\nclass Display extends Component {\n    render() {\n        if (this.props.array !== undefined) {\n            return (<DisplayArray {...this.props}></DisplayArray>);\n        }\n        if (this.props.grid !== undefined) {\n            return (<DisplayGrid {...this.props}></DisplayGrid>);\n        }\n        if (this.props[\"linked-list\"] !== undefined) {\n            return (<DisplayLinkedList {...this.props}></DisplayLinkedList>);\n        }\n        if (this.props.graph !== undefined) {\n            return (<DisplayGraph {...this.props}></DisplayGraph>);\n        }\n        \n        \n        return (<div>\n            <span style={{color:\"red\"}}>\n            Error: Displayer of this type Not Implemented.\n            </span>\n        </div>);\n    }\n};\n\nexport class DisplayInner extends Component {\n    // This should be rendered inside some SVG tag.\n    render() {\n        if (this.props.quadrant !== undefined) {\n            return (<Quadrant {...this.props}></Quadrant>);\n        }\n        return (\n        <text fill=\"red\" x=\"0\" y=\"0\">\n            Error: Displayer of this type Not Implemented.\n        </text>\n        );\n    }\n};\n\nexport default Display;","import React from 'react'\n\nimport AnchorInfo from './anchor-info';\nimport { defaultEdgeProps } from './ui-defaults';\n\nexport default class GraphEdge {\n    constructor(props) {\n        this.props = Object.assign({}, defaultEdgeProps, props);\n    }\n    \n    renderSVG(graphCollection) {\n        var i;\n        var d = [];\n        const nodeSet = graphCollection.nodes;\n        const computedNodeCenter = graphCollection.computedNodeCenter;\n        for (i = 0; i+1 < this.props.pathAnchors.length; i++) {\n            // \"entire-node\"\n            const fromAnchor = Object.assign({}, this.props.pathAnchors[i]);\n            const toAnchor = Object.assign({}, this.props.pathAnchors[i+1]);\n\n            const fromNode = nodeSet[fromAnchor.who];\n            const toNode = nodeSet[toAnchor.who];\n\n            var fromCenter = (fromAnchor.at === \"entire-node\"?\n                computedNodeCenter[fromNode.props.id] :\n                fromNode.getAnchorPoint(fromAnchor, computedNodeCenter[fromNode.props.id]))\n\n            var toCenter = (toAnchor.at === \"entire-node\"?\n                computedNodeCenter[toNode.props.id] :\n                toNode.getAnchorPoint(toAnchor, computedNodeCenter[toNode.props.id]))\n            \n            const dir = {x: toCenter.x - fromCenter.x, y: toCenter.y - fromCenter.y};\n            const degree = Math.atan2(dir.y, dir.x) * 180 / Math.PI;\n            \n            if (fromAnchor.at === \"entire-node\") {\n                fromAnchor.angle = degree;\n                fromAnchor.at = \"boundary\";\n                d.push([\"M\", fromNode.getAnchorPoint(fromAnchor, fromCenter)]);\n            } else if (i === 0) {\n                d.push([\"M\", fromCenter]);\n            } else {\n                // do nothing when i > 0.\n            }\n\n            if (toAnchor.at === \"entire-node\") {\n                toAnchor.angle = 180+degree;\n                toAnchor.at = \"boundary\";\n                d.push([\"L\", toNode.getAnchorPoint(toAnchor, toCenter)]);\n            } else {\n                d.push([\"L\", toCenter]);\n            }\n            \n        }\n\n        var s = \"\";\n        for (i = 0; i < d.length; i++) {\n            s += `${d[i][0]} ${d[i][1].x} ${d[i][1].y} `;\n        }\n        \n        const style = {\n            stroke: this.props.stroke,\n            strokeWidth: this.props.strokeWidth,\n            fill: this.props.fill,\n        }\n        console.log(this.props)\n        if (this.props.markerStart !== undefined) style.markerStart = `url(#${this.props.markerStart.props.id})`\n        if (this.props.markerMid !== undefined) style.markerMid = `url(#${this.props.markerMid.props.id})`\n        if (this.props.markerEnd !== undefined) style.markerEnd = `url(#${this.props.markerEnd.props.id})`\n        console.log(style)\n        return (<path key={this.props.id} d={s} style={style}></path>);\n    }\n}\n","import React from 'react'\nimport GraphNode from './graph-node';\nimport GraphEdge from './graph-edge';\nimport { Rectangle } from './shapes';\n\nexport default class GraphCollection extends GraphNode {\n    static NODES_COUNTER = 0;\n    static EDGES_COUNTER = 0;\n    constructor(props) {\n        super(props);\n        this.nodes = {};\n        this.edges = {};\n        this.hasComputedPositions = false;\n    }\n\n    // Adds a new node to the graph by props, return the node.\n    addNode(nodeProps, GraphNodeClass = GraphNode) {\n        // If the input is already a node object, just added it into the dictionary.\n        if (nodeProps instanceof GraphNode) {\n            this.nodes[nodeProps.props.id] = nodeProps;\n            this.hasComputedPositions = false;\n            return nodeProps;\n        }\n        \n        // Otherwise, create a new node.\n        const node = new GraphNodeClass(nodeProps);\n        if (node.props.id === \"dummyID\") {\n            node.props.id = `n-${GraphCollection.NODES_COUNTER}`;\n            GraphCollection.NODES_COUNTER += 1;\n        }\n        this.nodes[node.props.id] = node;\n        this.hasComputedPositions = false;\n        return node;\n    }\n\n    // Adds an edge to two existing nodes, return the edge.\n    addEdge(edgeProps, GraphEdgeClass = GraphEdge) {\n        const edge = new GraphEdgeClass(edgeProps);\n        if (edge.props.id === \"dummyID\") {\n            edge.props.id = `e-${GraphCollection.EDGES_COUNTER}`;\n            GraphCollection.EDGES_COUNTER += 1;\n        }\n        this.edges[edge.props.id] = edge;\n        this.hasComputedPositions = false;\n        return edge;\n    }\n\n\n    \n    computePositions() {\n        if (this.hasComputedPositions === true) return;\n        this.hasComputedPositions = true;\n        \n        \n        const computedNodeCenter = {}\n        const visitedNodes = {}\n        const dfs = (id) => {\n            const node = this.nodes[id];\n            if (node === undefined) {\n                console.warn(\"Node is not found in this collection: \", id);\n                return;\n            }\n            visitedNodes[id] = true;\n\n            var finalCX = 0;\n            var finalCY = 0;\n\n            const anchorToX = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).x;\n            }\n            const anchorToY = (e) => {\n                if (e === undefined) return undefined;\n                if (visitedNodes[e.who] === undefined) dfs(e.who);\n                return this.nodes[e.who].getAnchorPoint(e, computedNodeCenter[e.who]).y;\n            }\n\n            const cxa = anchorToX(node.props.cxAnchor)\n            const cya = anchorToY(node.props.cyAnchor)\n            const la = node.props.leftAnchors.map(anchorToX)\n            const ra = node.props.rightAnchors.map(anchorToX)\n            const ua = node.props.upAnchors.map(anchorToY)\n            const da = node.props.downAnchors.map(anchorToY)\n\n            if (node.props.cx !== undefined) {\n                finalCX = node.props.cx;\n            } else if (cxa !== undefined) {\n                finalCX = cxa;\n            } else if (la.length > 0) {\n                finalCX = Math.max(...la) - node.getPeripheralOffsetByAngle(180).x;\n            } else if (ra.length > 0) {\n                finalCX = Math.min(...ra) - node.getPeripheralOffsetByAngle(0).x;\n            } else {\n                console.warn(`Missing X-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            if (node.props.cy !== undefined) {\n                finalCY = node.props.cy;\n            } else if (cya !== undefined) {\n                finalCY = cya;\n            } else if (da.length > 0) {\n                finalCY = Math.max(...da) - node.getPeripheralOffsetByAngle(270).y;\n            } else if (ua.length > 0) {\n                finalCY = Math.min(...ua) - node.getPeripheralOffsetByAngle(90).y;\n            } else {\n                console.warn(`Missing Y-anchors for node ${node.id}! Treat as zero.`)\n            }\n\n            computedNodeCenter[id] = {x:finalCX, y:finalCY};\n        };\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        for (i = 0; i < nodeIDs.length; i++) {\n            if (visitedNodes[nodeIDs[i]] === undefined) {\n                dfs(nodeIDs[i]);\n            }\n        }\n        \n        // Store the computed results.\n        this.computedNodeCenter = computedNodeCenter;\n\n        // find viewbox\n        var viewbox = {lx: Infinity, ly: Infinity, rx: -Infinity, ry: -Infinity};\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const center = this.computedNodeCenter[node.props.id];\n            node.updateViewBox(viewbox, center);\n        }        \n        this.viewbox = viewbox;\n        \n        // We should shift everything so that the \"center\" of the entire\n        // collection stays at center.\n        var shiftX = (viewbox.rx + viewbox.lx)/2;\n        var shiftY = (viewbox.ry + viewbox.ly)/2;\n        for (i = 0; i < nodeIDs.length; i++) {\n            const c = computedNodeCenter[nodeIDs[i]];\n            c.x -= shiftX;\n            c.y -= shiftY;\n        }\n        viewbox.lx -= shiftX;\n        viewbox.rx -= shiftX;\n        viewbox.ly -= shiftY;\n        viewbox.ry -= shiftY;\n    }\n\n    getPeripheralOffsetByAngle(degree) {\n        this.computePositions();\n        const width = Math.max(0, this.viewbox.rx - this.viewbox.lx);\n        const height = Math.max(0, this.viewbox.ry - this.viewbox.ly);\n        const shape = new Rectangle(width, height);\n        return shape.getPeripheralOffsetByAngle(degree);\n    }\n\n    updateViewBox(viewbox, offset) {\n        this.computePositions();\n        viewbox.lx = Math.min(viewbox.lx, this.viewbox.lx + offset.x);\n        viewbox.rx = Math.max(viewbox.rx, this.viewbox.rx + offset.x);\n        viewbox.ly = Math.min(viewbox.ly, this.viewbox.ly + offset.y);\n        viewbox.ry = Math.max(viewbox.ry, this.viewbox.ry + offset.y);\n    }\n    \n    getAnchorPoint(anchorInfo, center={x:0, y:0}) {\n        if (typeof anchorInfo.at === \"string\" || anchorInfo.at.length === 1) {\n            // Fallback to default.\n            return GraphNode.prototype.getAnchorPoint.call(this, anchorInfo, center);\n        }\n\n        // Make sure we have position information.\n        this.computePositions();\n\n        // Support indirect anchorInfo: use array.\n        const at = anchorInfo.at;\n        const sub = this.nodes[at[0]];\n        const shifted =\n            {x: center.x + this.computedNodeCenter[at[0]].x,\n            y: center.y + this.computedNodeCenter[at[0]].y};\n        return sub.getAnchorPoint(Object.assign({}, anchorInfo, {at: at.slice(1)}), shifted);\n    }\n    \n    renderSVG(offset) {\n        this.computePositions();\n        \n        var i;\n        const nodeIDs = Object.keys(this.nodes);\n        var renderedNodes = [];\n        for (i = 0; i < nodeIDs.length; i++) {\n            var node = this.nodes[nodeIDs[i]];\n            const {x, y} = this.computedNodeCenter[node.props.id];\n            const center = {x: x+offset.x, y: y+offset.y};\n            renderedNodes.push(node.renderSVG(center));\n        }\n        const edgeIDs = Object.keys(this.edges);\n        var renderedEdges = [];\n        for (i = 0; i < edgeIDs.length; i++) {\n            var edge = this.edges[edgeIDs[i]];\n            renderedEdges.push(edge.renderSVG(this));\n        }\n        //console.log(renderedEdges);\n\n        return (<>\n            {renderedEdges}\n            {renderedNodes}\n        </>)\n    }\n};\n","module.exports = __webpack_public_path__ + \"static/cc-by-nc-sa-982c531432c4ad7e8dbf3cf52a1dc6d0.png\";","import React, {Component} from 'react';\nimport GraphToSVG from './display-ui/graph-to-svg';\nimport { GraphNodeUIHelper } from './display-ui/ui-helpers';\nimport AnchorInfo from './display-ui/anchor-info';\nimport { makeUIStores } from './display-ui/ui-helpers';\nimport { GraphRectangularTextNode } from './display-ui/graph-rectanglur-node';\nimport { defaultNodeProps } from './display-ui/ui-defaults';\n\nclass DisplayArray extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const newState = Object.assign({}, prevState);\n        const uiStores = makeUIStores(nextProps);\n        \n        // TODO(tmt514): find correct way to detect whether to update.\n        if (true) {\n            const data = JSON.parse(nextProps.data);\n            newState.data = data || []\n            newState.n = (nextProps.n && parseInt(nextProps.n)) || data.length\n\n            newState.ui = new GraphToSVG;\n            while (newState.data.length < newState.n) {\n                newState.data.push(\"\")\n            }\n            \n            const nodelist = [];\n            for (let i = 0; i < newState.data.length; i++) {\n                const nodeProps = {\n                    id: `arr-${i}`,\n                    text: `${newState.data[i]}`,\n                    content: newState.data[i],\n                };\n                if (i === 0) {\n                    nodeProps.cx = 0;\n                    nodeProps.cy = 0;\n                } else {\n                    nodeProps.leftAnchors = [new AnchorInfo(`arr-${i-1}`, 0, 'boundary', 0)]\n                    nodeProps.cyAnchor = new AnchorInfo(`arr-${i-1}`, 0, 'center', 0);\n                }\n                \n                // Id corresponds to Index in the array.\n                uiStores.forEach((uiStore) => {\n                    GraphNodeUIHelper.updateNodePropsFromUIStore(nodeProps, uiStore, `${i}`, ['all', 'node'])\n                });\n                \n                const node = newState.ui.addNode(nodeProps, GraphRectangularTextNode);\n                nodelist.push(node);\n            }\n            \n            \n            // Fixed width by given ratio.\n            var ratios = Array(newState.n).fill(1);\n            var maxUnitWidth = -Infinity;\n            var h = -Infinity;\n            // width could be overrided by min-width property.\n            var minWidth = nextProps[\"min-width\"];\n            const shouldAdjustWidth = (nextProps.fixedwidth !== undefined\n                || nextProps[\"fixedwidth-ratios\"] !== undefined\n                || minWidth !== undefined);\n            \n            if (nextProps[\"fixedwidth-ratios\"] !== undefined) {\n                ratios = eval(`(${nextProps[\"fixedwidth-ratios\"]})`);\n                while (ratios.length < newState.n) ratios.push(1);\n            }\n            nodelist.forEach((node, idx) => {\n                maxUnitWidth = Math.max(maxUnitWidth, node.getWidth() / ratios[idx]);\n                h = Math.max(h, node.getHeight());\n            });\n            if (minWidth !== undefined) {\n                maxUnitWidth = Math.max(maxUnitWidth, parseFloat(minWidth));\n            }\n            \n            nodelist.forEach((node, idx) => {\n                const newNodeProps = {\n                    minHeight: h,\n                }\n                if (shouldAdjustWidth) {\n                    newNodeProps.minWidth = maxUnitWidth * ratios[idx];\n                }\n                node.updateProps(newNodeProps)\n            });\n        }\n        \n        return newState;\n    }\n    \n    render() {\n        return (\n            <div className=\"has-text-centered\">\n            {this.state.ui.renderSVG()}\n            </div>\n        )\n    }\n}\n\nexport default DisplayArray;","import React, { Component } from 'react';\nimport Display from './display';\nimport UIController from './display-ui/ui-controller';\n\nconst clone = (dictionary) => {\n    return JSON.parse(JSON.stringify(dictionary))\n}\n\nclass Algorithm extends Component {\n    constructor(props) {\n        super(props);\n        \n        const findAll = function(name) {\n            return props.children.filter((x) => x.type === name);\n        }\n        const findFirst = function(name) {\n            return findAll(name)[0];\n        }\n        const generator = findFirst(\"generator\");\n        const inputdata = findFirst(\"inputdata\");\n        const alldisplays = findAll(\"indirectdisplay\");\n        \n        // function*(input) {}\n        const code = generator\n            .props\n            .children\n            .filter((x) => x.type === \"pre\")[0]\n            .props\n            .children[0];\n        const solver = eval(\"(\" + code + \")\");\n\n        // Parse input.\n        const input = JSON.parse(inputdata.props.data);\n        \n        // Creates UI environment.\n        const ui = new UIController();\n\n        // Creates Generator and history storing all intermediate steps for the\n        // algorithm.\n        var gen = solver(input, ui);\n        var history = [clone(gen.next())];\n        var uiHistory = [ui.getSnapshot()];\n        ui.clearStyleOnce();\n\n        // Set States.\n        this.state = {\n            solver: solver,\n            input: input,\n            displays: alldisplays,\n            generator: gen,\n            stepId: 0,\n            history: history,\n            ui: ui,\n            uiHistory: uiHistory,\n        }\n        \n    }\n\n    changeStepBy(numMove) {\n        const newState = Object.assign({}, this.state);\n        newState.stepId += numMove;\n        while (newState.history.length <= newState.stepId\n            && newState.history[newState.history.length-1].done === false) {\n            const nextIter = newState.generator.next();\n            newState.history.push(clone(nextIter));\n            newState.uiHistory.push(newState.ui.getSnapshot());\n            newState.ui.clearStyleOnce();\n        }\n        newState.stepId = Math.max(0, newState.stepId);\n        newState.stepId = Math.min(newState.history.length-1, newState.stepId);\n        this.setState(newState);\n    }\n\n    render() {\n        const stepId = this.state.stepId;\n        const snapshot = this.state.history[stepId];\n        const uiSnapshot = this.state.uiHistory[stepId];\n        const displays = this.state.displays.map((e, idx) => {\n            const varname = e.props.varname;\n            const uiStore = {\n                styleRules: uiSnapshot.styleRules[varname],\n                styles: uiSnapshot.styles[varname],\n                onceStyles: uiSnapshot.onceStyles[varname],\n                annotations: uiSnapshot.annotations[varname],\n            };\n\n            return (\n                <Display\n                    key={idx}\n                    {...e.props}\n                    uiStoreFromAlgorithm={uiStore}\n                    data={JSON.stringify(snapshot.value[e.props.varname])}\n                />\n        )})\n        return (\n            <div>\n                <div className=\"has-text-centered\">\n                <button onClick={this.changeStepBy.bind(this, -1)}>Prev</button>\n                <span> Step: {this.state.stepId} </span>\n                <button onClick={this.changeStepBy.bind(this, 1)}>Next</button>\n                </div>\n                {displays}\n            </div>\n        )\n    }\n};\n\nexport default Algorithm;","export default class UIController {\n    \n    static RULES_COUNTER = 0;\n    \n    constructor() {\n        this.styleRules = {};\n        this.styles = {};\n        this.onceStyles = {};\n        this.annotations = {};\n    }\n    \n    getSnapshot() {\n        return JSON.parse(JSON.stringify(this));\n    }\n    \n    setStyle(varname, id, options) {\n        if (this.styles[varname] === undefined)\n            this.styles[varname] = {};\n        if (this.styles[varname][id] === undefined)\n            this.styles[varname][id] = {};\n        Object.assign(this.styles[varname][id], options);\n    }\n    \n    eraseStyle(varname, id, options) {\n        if (this.styles[varname] !== undefined)\n            this.styles[varname][id] = undefined;\n    }\n    \n    setStyleOnce(varname, id, options) {\n        if (this.onceStyles[varname] === undefined)\n            this.onceStyles[varname] = {};\n        if (this.onceStyles[varname][id] === undefined)\n            this.onceStyles[varname][id] = {};\n        Object.assign(this.onceStyles[varname][id], options);\n    }\n    \n    clearStyleOnce() {\n        this.onceStyles = {};\n    }\n    \n    addStyleRule(varname, apply_to, pure_predicate_fn, options) {\n        if (this.styleRules[varname] === undefined)\n            this.styleRules[varname] = {}\n        const rule_id = `ui-rule-${UIController.RULES_COUNTER}`;\n        UIController.RULES_COUNTER ++;\n        \n        this.styleRules[varname][rule_id] = {\n            apply_to: apply_to,\n            pure_predicate_fn: pure_predicate_fn.toString(),\n            options: options,\n        };\n        return rule_id;\n    }\n    \n    removeStyleRule(varname, rule_id) {\n        if (this.styleRules[varname] !== undefined) \n            this.styleRules[varname][rule_id] = undefined;\n    }\n    \n       \n};"],"sourceRoot":""}