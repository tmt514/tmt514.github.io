- name: '1'
  score: 10
  rubics:
    - score: 3
      reason: base cases not complete
    - score: 1
      reason: inductive hypothesis not complete
    - score: 3
      reason: incorrect on concatenation case
    - score: 3
      reason: incorrect on union case
    - score: 3
      reason: incorrect on kleene-star case
    - score: 3
      reason: You did not explicitly prove your description.
    - score: 6
      reason: incorrect induction step
    - score: 10
      reason: Missing
  comments:
- name: '2'
  score: 10
  rubics:
    - score: 3
      reason: you picked a wrong string that is pumpable 
    - score: 4
      reason: you should consider all the possible xyz
    - score: 3
      reason: you derive the pumped string in the wrong way
    - score: 2
      reason: "|xy|<=p does not mean |xy|=p"
    - score: 3
      reason: you picked a wrong s which is not in L.
  comments:
- name: '3a'
  score: 10
  rubics:
    - score: 1
      reason: you should decide what the pumping length p is.
    - score: 3
      reason: "you should handle all possible s of length >= p"
    - score: 3
      reason: "you picked the wrong y in case 1."
    - score: 3
      reason: if you pick y as ones, then the constraint |xy|<=p will not generally be satisfied.
    - score: 3
      reason: your pumping criteria would not hold when a=2.
    - score: 6
      reason: "you should decide what x,y,z is for any such s of length >= p, and prove it."
    - score: 3
      reason: you have to give proofs to each case you write.
    - score: 2
      reason: "you cannot set y to be entire 0s string since it must satisfy |xy|<=p"
  comments:
- name: '3b'
  score: 10
  rubics:
    - score: 3
      reason: the L' you picked make the intersection be a regular language
    - score: 4
      reason: you are not proving correctly that their intersection is non-regular
    - score: 2
      reason: Your L - L1 is a regular language, and it is not equal to L2.
    - score: 2
      reason: You did not briefly explain why their intersection is non-regular.
    - score: 10
      reason: Missing
- name: '4'
  score: 10
  rubics:
    - score: 3
      reason: Your CFG did not produce odd-length palindromes.
    - score: 3
      reason: Incorrect/Incomplete CFG
    - score: 3
      reason: You did not prove every string in L can be generated by your CFG.
    - score: 6
      reason: Incorrect CFG
    - score: 10
      reason: Missing
- name: '5'
  score: 10
  rubics:
    - score: 10
      reason: Wrong CFG (without explain anything.)
    - score: 3
      reason: you missed the case that one of x, y is an empty string.
    - score: 3
      reason: Wrong CFG
    - score: 10
      reason: Missing
- name: '6'
  score: 10
  rubics:
    - score: 4
      reason: s was chosen incorrectly, your number of 0s was greater than 1s.
    - score: 2
      reason: case 2 not correctly proved. vxy contains zero does not mean vy has to contain zero.
    - score: 6
      reason: you have to handle all possible ways to split s.
    - score: 2
      reason: you have to prove explicitly in the case when vxy contains zeroes and ones
    - score: 2
      reason: vxy contains both 0s and 1s does not mean vy has to contain 1s.
    - score: 3
      reason: you picked a wrong string that is pumpable
    - score: 1
      reason: square is not enough for number of 0's exceed number of 1's
    - score: 10
      reason: Missing
- name: '7a'
  score: 10
  rubics:
    - score: 6
      reason: the intersection of L and G is emptyset, which is context-free by giving an empty grammar.
    - score: 4
      reason: you have to consider all possible ways to split s.
    - score: 1
      reason: Last sentence of your conclusion is incorrect.
    - score: 4
      reason: you have to give the proof that the complement language is non-regular
    - score: 6
      reason: complement of L is not L' in your proof.
    - score: 2
      reason: "you have to explicitly state what \"any other partition\" are."
    - score: 1
      reason: one of v and y could be empty as long as |vy|>0
    - score: 4
      reason: Incorrect proof on that complement language is non-regular. You select a pumpable string.
    - score: 10
      reason: Missing
- name: '7b'
  score: 10
  rubics:
    - score: 10
      reason: Missing
