{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"簡化後題目敘述"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"showvariable","properties":{"varname":"description"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸入說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"輸入僅有一列，包含題目所述之算式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸出說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"輸出 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"proper"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"improper"}]},{"type":"text","value":" 或是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"error"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 1"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"a + a\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 1"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"proper\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(b+( a+c )) + b\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"proper\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"c + ((b) + a)\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"improper\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 4"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"c+(a%/b)\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 4"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"error\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 5"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"x + ((y + z)\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 5"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"error\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 6"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"a b + (c + b)\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 6"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"error\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入 7"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"x + y + z\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出 7"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"improper\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"OJ 連結"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://codeforces.com/gym/101987"},"children":[{"type":"text","value":"Codeforces Gym"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"題目出處"}]},{"type":"text","value":"：ICPC 2018 Asia Seoul Regional"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"解法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以直接用堆疊模擬，把同一個括弧層看到的東西，用一個字串表示的話應該要是「運算元、運算子、運算元、運算子、...、運算元」交錯排列。如果是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"proper"}]},{"type":"text","value":" 的話，有括弧的情形必須要恰好僅有一個運算子。最外層要特判一下這樣。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"參考程式碼"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-cpp"]},"children":[{"type":"text","value":"#include <bits/stdc++.h>\nusing namespace std;\n\n// 離散化：把所有需要的座標記錄下來，排序以後換成離散化後的座標。\nint discretize(vector<pair<int, int>> &a) {\n  vector<int> lisan;\n  for (auto &it : a) {\n    lisan.push_back(it.first);\n    lisan.push_back(it.second);\n  }\n  sort(lisan.begin(), lisan.end());\n  lisan.resize(unique(lisan.begin(), lisan.end()) - lisan.begin());\n  for (size_t i = 0; i < a.size(); i++) {\n    a[i].first =\n        lower_bound(lisan.begin(), lisan.end(), a[i].first) - lisan.begin() + 1;\n    a[i].second = lower_bound(lisan.begin(), lisan.end(), a[i].second) -\n                  lisan.begin() + 1;\n  }\n  return lisan.size();\n}\n\n// 區間樹的節點要存的東西。\nstruct Node {\n  int max, sum;\n  Node(int _max = 0, int _sum = 0) : max(_max), sum(_sum) {}\n};\n\nint main() {\n  // 輸入很大所以要加快讀取輸入的速度。\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  vector<pair<int, int>> a;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int ux, uy, vx, vy;\n    cin >> ux >> uy >> vx >> vy;\n    a.emplace_back(vy, uy);\n  }\n  // Ranges become [1, m].\n  int m = discretize(a);\n  sort(a.begin(), a.end());\n\n  // Find best offset for an interval tree.\n  int offset = m + 1;\n  while ((offset & -offset) != offset)\n    offset += (offset & -offset);\n\n  vector<int> localmax(n + 1, 0);\n  vector<Node> segtree(2 * offset);\n  const auto pull = [&](int x) {\n    if (x >= offset) {\n      segtree[x].max = segtree[x].sum;\n    } else {\n      segtree[x].max =\n          max(segtree[x * 2].max, segtree[x * 2 + 1].max) + segtree[x].sum;\n    }\n  };\n  auto add_segment = [&](int x, int v) {\n    while (x) {\n      if (x % 2 == 0) {\n        segtree[x].sum += v;\n        pull(x);\n        --x;\n      } else {\n        x /= 2;\n        pull(x + 1);\n      }\n    }\n  };\n\n  for (int i = n - 1; i >= 0; i--) {\n    add_segment(offset + a[i].second, 1);\n    add_segment(offset + a[i].first - 1, -1);\n    localmax[i] = segtree[1].max;\n  }\n\n  vector<int> change(m + 2);\n  for (int i = 0; i < n; i++) {\n    change[a[i].first]++;\n    change[a[i].second + 1]--;\n  }\n  int ans = 0;\n  for (int i = 0, j = 0, now = 0; i <= m; i++) {\n    while (j < n && a[j].first <= i)\n      ++j;\n    now += change[i];\n    ans = max(ans, now + localmax[j]);\n  }\n\n  cout << ans << endl;\n  return 0;\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"關於競程日記"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🍅 如果您想到更多有趣漂亮簡單乾淨的解法話歡迎留言給競程日記小編群！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ℹ️ 這是一篇投稿給"},{"type":"element","tagName":"a","properties":{"href":"https://www.facebook.com/%E7%AB%B6%E7%A8%8B%E6%97%A5%E8%A8%98-1514973425463954/"},"children":[{"type":"text","value":"競程日記"}]},{"type":"text","value":"的文章，歡迎大家投稿、交流與分享程式解題競賽的點點滴滴！"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"January 28, 2019","path":"/problem/icpc/asia_seoul_2018/F","title":"Parentheses","description":"給你一個用 26 個英文字母當作運算子、加減乘除當作運算元、可能會包含括弧的算式。請你判斷這是否為一個合法的算式，如果是的話，是否有使用標準括弧規範？（也就是每個括弧內恰好對應到唯一的運算子。）\n","roadmap_label_h3":null,"backlink":"/icpcblog-weekly-2019"}}},"pageContext":{}}