{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果已經有一個圖儲存在記憶體裡面了，我們可以用哪些方式有系統地走遍這張圖呢？今天介紹的是大家耳熟能詳的"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"深度優先搜尋"}]},{"type":"text","value":"（Depth First Search）。DFS 的發展與靈感其實來自於走迷宮問題，「如何有效率並且不出差錯地走出迷宮」。而這些想法在 1950 年代左右被應用到各式各樣的演算法中，尤其是 "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Robert_Tarjan"},"children":[{"type":"text","value":"Robert Tarjan"}]},{"type":"text","value":" 在這段期間發表了許多驚心動魄的 DFS 應用，造福後世。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"§3.1 DFS 演算法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在這邊幫大家快速複習一下 DFS 和相關的性質。首先我們會在每個點定義一個的狀態：「尚未走訪（白色，white）」、「走訪中（灰色，gray）」、「已結束走訪（黑色，black）」。每一個圖上的點在任意時刻都會是這三種狀態的其中之一。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"而從一個指定節點進行深度優先搜尋的方法如下："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"$\\text{DFS}(x):$"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"首先將該節點 $x$ 的狀態改為灰色。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"考慮所有相連邊 $(x, y)\\in E$，若另一頭的節點 $y$ 是白色，就遞迴執行 $\\text{DFS}(y)$。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"若所有相連邊的另一頭都已是灰色或黑色，則將節點 $x$ 狀態改為黑色。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"§3.2 邊的分類"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"參考資料"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Depth-first_search"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Depth-first_search"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"February 17, 2019","path":"/algo/algorithmic-graph-theory/dfs","title":"圖論演算法 3 - 深度優先搜尋(DFS)","description":null,"roadmap_label_h3":null,"backlink":null}}},"pageContext":{}}