{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"讓我們首先"},{"type":"element","tagName":"a","properties":{"href":"/algo/min-cost-max-flow"},"children":[{"type":"text","value":"回顧"}]},{"type":"text","value":"一下最小費用流的線性規劃主模型（Primal Problem）、以及其對偶模型（Dual Problem）。令 $f(u, v)$ 為線性規劃模型的變數、$y(u, v)$ 以及 $d(v)$ 為其對偶模型的變數名。我們定義以下三種條件："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"P 條件：$f$ 滿足線性規劃模型的條件，即 $f$ 是一個合法的網路流。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"D 條件：$y, d$ 滿足對偶模型的條件，即 $y(u, v)-d(u)+d(v) \\le cost(u, v)$。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"CS 條件：$f, y, d$ 滿足"},{"type":"element","tagName":"a","properties":{"href":"http://terms.naer.edu.tw/detail/559045/"},"children":[{"type":"text","value":"互補差餘"}]},{"type":"text","value":"條件，即"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n$$\n\\begin{cases}\nf(u, v) > 0 & \\implies y(u, v) = d(u) + cost(u, v) - d(v)\\\\\nf(u, v) < cap(u, v) & \\implies y(u, v) = 0\n\\end{cases}\n$$\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由線性規劃的各種性質我們可以知道，只要 $f, y, d$ 這三組變數同時滿足 P條件、D條件以及 CS條件的話，保證 $f, y, d$ 分別是主模型和對偶模型的最佳解。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"剩餘網路 Residual Networks"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"要討論網路流，就必須要討論剩餘網路（residual networks）。如果我們在圖 $G$ 上面有一個流 $f$，那"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"基於剩餘網路上的最佳解特性"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我們來證明以下定理"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"消圈演算法 Cycle Cancellation Algorithms"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"while 剩餘網路 G_f 上面存在負圈:\n    令 C := 任何一個負圈\n    令 e* := C 這個負圈上的瓶頸\n    更新 f(e) \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"時間複雜度"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"更快的消圈算法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"最小均值圈"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"結論"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"演算法"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"消圈的次數"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"每一次消圈的時間"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Weakly-Polynomial Worst-Case Complexity"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Strongly-Polynomial Worst-Case Complexity"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"nobr","properties":{},"children":[{"type":"text","value":"Goldberg and Tarjam [1989]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"每次消最小均值圈"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm \\log (nC))$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm)$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(n^2m^2\\log (nC))$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(n^2m^3)$"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"nobr","properties":{},"children":[{"type":"text","value":"Goldberg and Tarjam [1989]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"每次找所有簡化邊權重為負的圈"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm \\log (nC))$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(\\log n)$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm\\log n\\log (nC))$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm^2\\log^2n)$"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"nobr","properties":{},"children":[{"type":"text","value":"Barahona and Tardos [1989]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"每次找一票點不重複的負圈然後增廣"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(m \\log (nCU))$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O(nm+n^2\\log n)$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"$O((nm^2+mn^2\\log n)\\log(nCU)$"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"N/A"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"small","properties":{},"children":[{"type":"text","value":"資料來源： Sokkalingam, Ahuja, Orlin, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"New Polynomial-Time Cycle-Cancelling Algorithms for Minimum Cost Flows"}]},{"type":"text","value":", 1997. "},{"type":"element","tagName":"sup","properties":{"id":"fnref-1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fn-1","className":["footnote-ref"]},"children":[{"type":"text","value":"1"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"參考資料"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["footnotes"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"id":"fn-1"},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sokkalingam, Ahuja, Orlin, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"New Polynomial-Time Cycle-Cancelling Algorithms for Minimum Cost Flows"}]},{"type":"text","value":", 1997. "},{"type":"element","tagName":"a","properties":{"href":"https://pdfs.semanticscholar.org/f799/350ee4b93f02e672157d54ee06849edb7355.pdf"},"children":[{"type":"text","value":"PDF"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"#fnref-1","className":["footnote-backref"]},"children":[{"type":"text","value":"↩"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"November 20, 2018","path":"/algo/min-cost-max-flow-cycle-cancellation","title":"最小費用流的消圈演算法","description":null}}},"pageContext":{}}