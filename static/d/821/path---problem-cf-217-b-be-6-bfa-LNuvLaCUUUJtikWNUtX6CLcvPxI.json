{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"frontmatter":{"date":null,"path":"/problem/cf/217/B","title":"[CF217B] Blackboard Fibonacci","description":"費氏數列的定義為 $f_0=0, f_1=1, f_n=f_{n-2}+f_{n-1}$。Bajtek 發明了一種在黑板上計算費氏數列的方法：首先在黑板寫下數字 $0$，然後在它下面緊接著寫下數字 $1$。接著，每一次他進行下列其中之一的操作：\n\n* 操作 `T`：把上面的數字擦去，並換成兩個數字的總和。\n* 操作 `B`：把下面的數字擦去，並換成兩個數字的總和。\n\n如果一切順利，進行了 $n$ 次操作而且從 `T` 開始，將兩種操作交錯進行，那麼最後寫到黑板的數字就會是 $f_{n+1}$。\n\n問題是，Bajtek 在進行操作的時候，常常不小心重複了同一種操作許多次。例如，如果 $n=6$，原本應該要進行的操作順序是 `TBTBTB`，但如果 Bajtek 進行的操作是 `TTTBBT`，那麼會得到 $10$ 這個數字。我們定義「出錯的次數」為序列中該次操作與前一次操作相同的次數。即 `TT` 或 `BB` 出現的總次數。\n\n現在，已知 Bajtek 經過了恰好 $n$ 次操作後計算出了 $r$ 這個數字。請找出「出錯的次數」最少的操作序列，或者輸出無解。$(1\\le n, r\\le 10^6)$\n","roadmap_label_h3":null}}},"pageContext":{}}