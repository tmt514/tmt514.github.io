{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"簡化後題目敘述"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"showvariable","properties":{"varname":"description"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸入說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一列有一個正整數 $N$ ($3\\le N\\le 5000$)，接下來的 $N$ 列每一列有兩個整數 $x, y$ ($0\\le x, y\\le 4\\cdot 10^7$)。輸入的點可能會重複、也可能會有三點共線。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸出說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"輸出最大三角形面積，答案的絕對誤差必須在 $10^{-5}$ 以內。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"7\n0 0\n0 5\n7 7\n0 10\n0 0\n20 0\n10 10\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"100.00000\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"OJ 連結"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://open.kattis.com/problems/largesttriangle"},"children":[{"type":"text","value":"Open Kattis - Largest Triangle"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"題目出處"}]},{"type":"text","value":"：ICPC 2018 Asia Singapore Regional"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"解法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"這題可以枚舉一個點以後，利用 two pointers 的單調性跑過剩下的兩個點。根據 "},{"type":"element","tagName":"a","properties":{"href":"https://arxiv.org/abs/1705.11035"},"children":[{"type":"text","value":"這篇論文"}]},{"type":"text","value":" 指出，有一個 $O(n\\log n)$ 時間複雜度的分而治之演算法能夠找出答案。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"參考程式碼"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-cpp"]},"children":[{"type":"text","value":"#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nclass Point {\npublic:\n  LL x, y;\n  Point(LL _x = 0, LL _y = 0) : x(_x), y(_y) {}\n  Point operator+(const Point &p) const { return Point(x + p.x, y + p.y); }\n  Point operator-(const Point &p) const { return Point(x - p.x, y - p.y); }\n  bool operator<(const Point &p) const {\n    if (x != p.x)\n      return x < p.x;\n    return y < p.y;\n  }\n  bool operator==(const Point &p) const { return x == p.x && y == p.y; }\n  friend istream &operator>>(istream &cin, Point &p) {\n    cin >> p.x >> p.y;\n    return cin;\n  }\n};\n\nLL cross(const Point &p, const Point &q) { return p.x * q.y - p.y * q.x; }\n\nLL seen_largest_area;\nLL Triangle(Point A, Point B, Point C) {\n  LL v = cross(A, B) + cross(B, C) + cross(C, A);\n  v = v > 0 ? v : -v;\n  seen_largest_area = max(seen_largest_area, v);\n  return v;\n}\n\nvoid ComputeConvexHull(vector<Point> &hull, const vector<Point> &points) {\n  hull.clear();\n  for (auto &p : points) {\n    while (hull.size() >= 2 &&\n           cross(hull.back() - hull[hull.size() - 2], p - hull.back()) <= 0)\n      hull.pop_back();\n    hull.push_back(p);\n  }\n}\n\nint main() {\n  int N;\n  cin >> N;\n  vector<Point> p(N);\n  for (int i = 0; i < N; i++)\n    cin >> p[i];\n  sort(p.begin(), p.end());\n  p.resize(unique(p.begin(), p.end()) - p.begin());\n  vector<Point> upper_hull, lower_hull;\n  ComputeConvexHull(lower_hull, p);\n  reverse(p.begin(), p.end());\n  ComputeConvexHull(upper_hull, p);\n  for (size_t i = 1; i + 1 < upper_hull.size(); i++)\n    lower_hull.push_back(upper_hull[i]);\n\n  size_t M = lower_hull.size();\n  for (size_t i = 0; i < M; i++)\n    lower_hull.push_back(lower_hull[i]);\n\n  seen_largest_area = 0;\n  for (size_t i = 0; i < M; i++)\n    for (size_t j = i + 1, k = j; j < i + M; j++) {\n      while (k < i + M &&\n             Triangle(lower_hull[i], lower_hull[j], lower_hull[k + 1]) >\n                 Triangle(lower_hull[i], lower_hull[j], lower_hull[k]))\n        ++k;\n    }\n  printf(\"%.9f\\n\", (double)seen_largest_area / 2.0);\n  return 0;\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"關於競程日記"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🍅 如果您想到更多有趣漂亮簡單乾淨的解法話歡迎留言給競程日記小編群！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ℹ️ 這是一篇投稿給"},{"type":"element","tagName":"a","properties":{"href":"https://www.facebook.com/%E7%AB%B6%E7%A8%8B%E6%97%A5%E8%A8%98-1514973425463954/"},"children":[{"type":"text","value":"競程日記"}]},{"type":"text","value":"的文章，歡迎大家投稿、交流與分享程式解題競賽的點點滴滴！"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"January 21, 2019","path":"/problem/icpc/asia_singapore_2018/A","title":"Largest Triangle","description":"給你平面上 $N$ 個整數點，求任三個點構成的三角形之最大面積。\n","roadmap_label_h3":null,"backlink":"/icpcblog-weekly-2019"}}},"pageContext":{}}