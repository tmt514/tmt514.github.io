{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"簡化後題目敘述"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"showvariable","properties":{"varname":"description"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸入說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"輸出說明"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸入"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"4 9 2 1\n4 4 6 2\n1 3 2 1 2 1 1 3 2\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"範例輸出"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1\n1 8\n2 7\n2 5 8\n4\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"OJ 連結"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://codeforces.com/gym/102070"},"children":[{"type":"text","value":"Codeforces Gym"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"題目出處"}]},{"type":"text","value":"：ICPC 2018 Asia Seoul Regional"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"解法"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意到每一次工作都是連續恰好 $w$ 天，這會讓題目便得非常簡單：我們可以用 Greedy 從最早的時間刷過去。每一次找到一個新的、還沒有人做的工作時段，然後挑一個人做下去連續做 $w$ 天。要挑選誰呢？最直覺的辦法就是挑選目前剩餘工作量最大的那個人。我們可以用一個 priority queue 來維護這件事情。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如此一來時間複雜度便可能達到 $O(nm + \\frac{nm}{w}\\log m)$，感覺上再用力一點的話，可以把 priority queue 的部份壓掉，變成 $O(nm)$、甚至更好。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"參考程式碼"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-cpp"]},"children":[{"type":"text","value":"#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  int m, n, w, h;\n  cin >> m >> n >> w >> h;\n  vector<int> ws(m), d(n + 1);\n  for (int i = 0; i < m; i++) {\n    cin >> ws[i];\n    ws[i] /= w;\n  }\n  for (int i = 1; i <= n; i++)\n    cin >> d[i];\n  vector<int> jobs;\n  vector<vector<int>> schedule(m);\n  int bad = 0;\n  for (int i = 1; !bad && i <= n; i++) {\n    if (d[i] > 0 && i + w - 1 > n) {\n      bad = 1;\n      break;\n    }\n    while (d[i] > 0) {\n      jobs.push_back(i);\n      for (int j = 0; j < w; j++) {\n        if (--d[i + j] < 0)\n          bad = 1;\n      }\n    }\n  }\n\n  priority_queue<pair<int, int>> s;\n  for (int i = 0; i < m; i++)\n    s.push({ws[i] - schedule.size(), i});\n  vector<vector<pair<int, int>>> delay(n + 1);\n  int now = 0;\n\n  for (int t : jobs) {\n    while (now <= t) {\n      for (auto x : delay[now])\n        s.push(x);\n      now++;\n    }\n    if (s.empty()) {\n      bad = 1;\n      break;\n    }\n    auto [remain, i] = s.top();\n    s.pop();\n    schedule[i].push_back(t);\n    if (t + w + h <= n)\n      delay[t + w + h].push_back({remain - 1, i});\n  }\n  for (int i = 0; i < m; i++) {\n    if (schedule[i].size() != ws[i])\n      bad = 1;\n  }\n  if (bad) {\n    cout << \"-1\" << endl;\n  } else {\n    cout << \"1\";\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < schedule[i].size(); j++) {\n        cout << (j == 0 ? '\\n' : ' ');\n        cout << schedule[i][j];\n      }\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"關於競程日記"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🍅 如果您想到更多有趣漂亮簡單乾淨的解法話歡迎留言給競程日記小編群！"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ℹ️ 這是一篇投稿給"},{"type":"element","tagName":"a","properties":{"href":"https://www.facebook.com/%E7%AB%B6%E7%A8%8B%E6%97%A5%E8%A8%98-1514973425463954/"},"children":[{"type":"text","value":"競程日記"}]},{"type":"text","value":"的文章，歡迎大家投稿、交流與分享程式解題競賽的點點滴滴！"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":"January 22, 2019","path":"/problem/icpc/asia_seoul_2018/L","title":"Working Plan","description":"","roadmap_label_h3":null,"backlink":"/icpcblog-weekly-2019"}}},"pageContext":{}}